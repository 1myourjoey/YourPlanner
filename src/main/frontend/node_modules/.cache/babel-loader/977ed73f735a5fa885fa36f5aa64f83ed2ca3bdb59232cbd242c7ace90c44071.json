{"ast":null,"code":"import React,{useState,useEffect}from'react';import axios from'axios';import'../css/modal.css';import chatIcon from'../img/chat.png';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function Chat(){const[messages,setMessages]=useState([]);const[input,setInput]=useState('');const[isModalOpen,setIsModalOpen]=useState(false);const fetchReply=async message=>{try{const{data}=await axios.post('/chat',{message});return data.response;}catch(error){console.error('Error fetching reply:',error);return'Failed to get response from server';}};const handleSend=async()=>{const reply=await fetchReply(input);setMessages(prevMessages=>[...prevMessages,{text:input,sender:'user'},{text:reply,sender:'bot'}]);setInput('');};const handleInputChange=e=>{setInput(e.target.value);};const handleKeyPress=e=>{if(e.key==='Enter'){handleSend();}};const openModal=()=>{setIsModalOpen(true);};const closeModal=()=>{setIsModalOpen(false);};useEffect(()=>{if(isModalOpen){setMessages([{text:'무엇을 도와드릴까요?',sender:'bot'}]);}},[isModalOpen]);return/*#__PURE__*/_jsxs(\"div\",{className:\"chat\",children:[/*#__PURE__*/_jsx(\"img\",{className:\"chatIcon\",src:chatIcon,alt:\"Chat Icon\",onClick:openModal}),/*#__PURE__*/_jsx(\"div\",{className:\"icon-label\",children:\"AI \\uBE44\\uC11C\"}),isModalOpen&&/*#__PURE__*/_jsx(\"div\",{className:\"modal\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"modal-content\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"close\",onClick:closeModal,children:\"\\xD7\"}),/*#__PURE__*/_jsx(\"div\",{className:\"chat-box\",children:messages.map((message,index)=>/*#__PURE__*/_jsx(\"div\",{className:\"message \".concat(message.sender),children:/*#__PURE__*/_jsx(\"p\",{className:\"message-text\",children:message.text})},index))}),/*#__PURE__*/_jsxs(\"div\",{className:\"row mb-3\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"col\",children:/*#__PURE__*/_jsx(\"input\",{type:\"text\",className:\"form-control\",value:input,onChange:handleInputChange,onKeyPress:handleKeyPress})}),/*#__PURE__*/_jsx(\"div\",{className:\"col-auto\",children:/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-primary\",type:\"button\",onClick:handleSend,children:\"Send\"})})]})]})})]});}export default Chat;","map":{"version":3,"names":["React","useState","useEffect","axios","chatIcon","jsx","_jsx","jsxs","_jsxs","Chat","messages","setMessages","input","setInput","isModalOpen","setIsModalOpen","fetchReply","message","data","post","response","error","console","handleSend","reply","prevMessages","text","sender","handleInputChange","e","target","value","handleKeyPress","key","openModal","closeModal","className","children","src","alt","onClick","map","index","concat","type","onChange","onKeyPress"],"sources":["C:/Users/admin/Documents/GitHub/YourPlanner/src/main/frontend/src/components/js/Chat.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport '../css/modal.css';\r\nimport chatIcon from '../img/chat.png';\r\n\r\nfunction Chat() {\r\n  const [messages, setMessages] = useState([]);\r\n  const [input, setInput] = useState('');\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n\r\n  const fetchReply = async (message) => {\r\n    try {\r\n      const { data } = await axios.post('/chat', { message });\r\n      return data.response;\r\n    } catch (error) {\r\n      console.error('Error fetching reply:', error);\r\n      return 'Failed to get response from server';\r\n    }\r\n  };\r\n\r\n  const handleSend = async () => {\r\n    const reply = await fetchReply(input);\r\n    setMessages(prevMessages => [...prevMessages, { text: input, sender: 'user' }, { text: reply, sender: 'bot' }]);\r\n    setInput('');\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    setInput(e.target.value);\r\n  };\r\n\r\n  const handleKeyPress = (e) => {\r\n    if (e.key === 'Enter') {\r\n      handleSend();\r\n    }\r\n  };\r\n\r\n  const openModal = () => {\r\n    setIsModalOpen(true);\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setIsModalOpen(false);\r\n  };\r\n   useEffect(() => {\r\n      if (isModalOpen) {\r\n        setMessages([{ text: '무엇을 도와드릴까요?', sender: 'bot' }]);\r\n      }\r\n    }, [isModalOpen]);\r\n\r\n  return (\r\n    <div className=\"chat\">\r\n      <img className=\"chatIcon\" src={chatIcon} alt=\"Chat Icon\" onClick={openModal} />\r\n        <div className=\"icon-label\">AI 비서</div>\r\n      {/* 모달 */}\r\n      {isModalOpen && (\r\n        <div className=\"modal\">\r\n          <div className=\"modal-content\">\r\n            <div className=\"close\" onClick={closeModal}>&times;</div>\r\n\r\n            {/* 대화 표시 */}\r\n            <div className=\"chat-box\">\r\n              {messages.map((message, index) => (\r\n                <div key={index} className={`message ${message.sender}`}>\r\n                  <p className=\"message-text\">{message.text}</p>\r\n                </div>\r\n              ))}\r\n            </div>\r\n\r\n            {/* 입력 필드 */}\r\n     <div className=\"row mb-3\">\r\n       <div className=\"col\">\r\n         <input type=\"text\" className=\"form-control\" value={input} onChange={handleInputChange} onKeyPress={handleKeyPress} />\r\n       </div>\r\n       <div className=\"col-auto\">\r\n         <button className=\"btn btn-primary\" type=\"button\" onClick={handleSend}>Send</button>\r\n       </div>\r\n     </div>\r\n            </div>\r\n          </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Chat;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}