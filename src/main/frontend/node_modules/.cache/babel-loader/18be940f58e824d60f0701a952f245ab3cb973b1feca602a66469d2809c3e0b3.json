{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\Documents\\\\GitHub\\\\YourPlanner\\\\src\\\\main\\\\frontend\\\\src\\\\components\\\\js\\\\DummyLocationBasedList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport ListContainer from './ListContainer';\nimport TrainList from './TrainList';\nimport TrainCode from './TrainCode'; // TrainCode 임포트\nimport '../css/DummyLocationBasedList.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DummyLocationBasedList = ({\n  destination2,\n  departure,\n  destination,\n  startDate,\n  endDate,\n  initialView = 'attractions',\n  setSelectedTrains\n}) => {\n  _s();\n  const [locations, setLocations] = useState([]);\n  const [selectedLocation, setSelectedLocation] = useState(destination2);\n  const [selectedSigungu, setSelectedSigungu] = useState('');\n  const [view, setView] = useState(initialView); // 'attractions', 'hotels', 'restaurant' or 'trains'\n  const [sigungus, setSigungus] = useState([]); // 시/군/구 목록 추가\n  const [selectedTrains, setSelectedTrainsLocal] = useState([]); // selectedTrains 상태 추가\n  const OPEN_KEY = \"5uJ1mFn4tOfEwReTW3dupjd4w2n5kEHO5nciT%2BDVGAVWTl90sysBKbMTIlIxLW5lCPo1VmpZ%2FXggxU84GhG81g%3D%3D\";\n  const parseXmlToJson = xmlString => {\n    const parser = new DOMParser();\n    const xmlDoc = parser.parseFromString(xmlString, 'text/xml');\n    const items = Array.from(xmlDoc.getElementsByTagName('item'));\n    return items.map(item => {\n      const obj = {};\n      Array.from(item.children).forEach(child => {\n        obj[child.tagName] = child.textContent;\n      });\n      return obj;\n    });\n  };\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch(`https://apis.data.go.kr/B551011/KorService1/areaCode1?serviceKey=${OPEN_KEY}&numOfRows=17&pageNo=1&MobileOS=ETC&MobileApp=AppTest&_type=json`);\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        const json = await response.json();\n        setLocations(json.response.body.items.item);\n      } catch (error) {\n        console.error('Fetch error:', error);\n      }\n    };\n    fetchData();\n  }, []);\n  useEffect(() => {\n    setSelectedLocation(destination2);\n  }, [destination2]);\n  useEffect(() => {\n    const fetchSigungus = async () => {\n      if (!selectedLocation) return;\n      try {\n        const response = await fetch(`http://apis.data.go.kr/B551011/KorService1/areaCode1?serviceKey=${OPEN_KEY}&numOfRows=32&pageNo=1&MobileOS=ETC&MobileApp=AppTest&areaCode=${selectedLocation}`);\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        const xmlData = await response.text();\n        const json = parseXmlToJson(xmlData);\n        setSelectedSigungu('');\n        setSigungus(json); // 시/군/구 목록 업데이트\n      } catch (error) {\n        console.error('Fetch error:', error);\n      }\n    };\n    fetchSigungus();\n  }, [selectedLocation]);\n  const handleChange = event => {\n    setSelectedLocation(event.target.value);\n  };\n  const handleViewChange = view => {\n    setView(view);\n  };\n  const handleSigunguChange = event => {\n    setSelectedSigungu(event.target.value);\n  };\n  const departureCodes = TrainCode[departure] || [];\n  const destinationCodes = TrainCode[destination] || [];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [locations.length > 0 ? /*#__PURE__*/_jsxDEV(\"select\", {\n      className: \"select\",\n      value: selectedLocation,\n      onChange: handleChange,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"\\uC9C0\\uC5ED\\uC744 \\uC120\\uD0DD\\uD558\\uC138\\uC694\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 21\n      }, this), locations.map((location, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: location.code,\n        children: location.name\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 25\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"loading-message\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 17\n    }, this), selectedLocation && /*#__PURE__*/_jsxDEV(\"select\", {\n      className: \"select\",\n      value: selectedSigungu,\n      onChange: handleSigunguChange,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"\\uC2DC/\\uAD70/\\uAD6C\\uB97C \\uC120\\uD0DD\\uD558\\uC138\\uC694\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 21\n      }, this), sigungus.map((sigungu, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: sigungu.code,\n        children: sigungu.name\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 25\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button\",\n        onClick: () => handleViewChange('trains'),\n        children: \"\\uC5F4\\uCC28\\uBAA9\\uB85D\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button\",\n        onClick: () => handleViewChange('attractions'),\n        children: \"\\uCD94\\uCC9C \\uBA85\\uC18C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button\",\n        onClick: () => handleViewChange('hotels'),\n        children: \"\\uC219\\uBC15\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button\",\n        onClick: () => handleViewChange('restaurant'),\n        children: \"\\uB9DB\\uC9D1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }, this), view === 'trains' && departureCodes.length > 0 && destinationCodes.length > 0 && /*#__PURE__*/_jsxDEV(TrainList, {\n      depPlaceId: departureCodes,\n      arrPlaceId: destinationCodes,\n      startDate: startDate,\n      selectedTrains: selectedTrains,\n      setSelectedTrains: setSelectedTrains || setSelectedTrainsLocal // prop이나 로컬 상태 사용\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 17\n    }, this), selectedLocation && view !== 'trains' && /*#__PURE__*/_jsxDEV(ListContainer, {\n      areaCode: selectedLocation,\n      sigunguCode: selectedSigungu,\n      view: view,\n      departure: departure,\n      destination: destination,\n      startDate: startDate,\n      endDate: endDate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 9\n  }, this);\n};\n_s(DummyLocationBasedList, \"pAa2x99E0AXi7B1og9uigQFqfOU=\");\n_c = DummyLocationBasedList;\nexport default DummyLocationBasedList;\nvar _c;\n$RefreshReg$(_c, \"DummyLocationBasedList\");","map":{"version":3,"names":["React","useState","useEffect","ListContainer","TrainList","TrainCode","jsxDEV","_jsxDEV","DummyLocationBasedList","destination2","departure","destination","startDate","endDate","initialView","setSelectedTrains","_s","locations","setLocations","selectedLocation","setSelectedLocation","selectedSigungu","setSelectedSigungu","view","setView","sigungus","setSigungus","selectedTrains","setSelectedTrainsLocal","OPEN_KEY","parseXmlToJson","xmlString","parser","DOMParser","xmlDoc","parseFromString","items","Array","from","getElementsByTagName","map","item","obj","children","forEach","child","tagName","textContent","fetchData","response","fetch","ok","Error","json","body","error","console","fetchSigungus","xmlData","text","handleChange","event","target","value","handleViewChange","handleSigunguChange","departureCodes","destinationCodes","className","length","onChange","fileName","_jsxFileName","lineNumber","columnNumber","location","index","code","name","sigungu","onClick","depPlaceId","arrPlaceId","areaCode","sigunguCode","_c","$RefreshReg$"],"sources":["C:/Users/admin/Documents/GitHub/YourPlanner/src/main/frontend/src/components/js/DummyLocationBasedList.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport ListContainer from './ListContainer';\r\nimport TrainList from './TrainList';\r\nimport TrainCode from './TrainCode'; // TrainCode 임포트\r\nimport '../css/DummyLocationBasedList.css';\r\n\r\nconst DummyLocationBasedList = ({ destination2, departure, destination, startDate, endDate, initialView = 'attractions', setSelectedTrains }) => {\r\n    const [locations, setLocations] = useState([]);\r\n    const [selectedLocation, setSelectedLocation] = useState(destination2);\r\n    const [selectedSigungu, setSelectedSigungu] = useState('');\r\n    const [view, setView] = useState(initialView); // 'attractions', 'hotels', 'restaurant' or 'trains'\r\n    const [sigungus, setSigungus] = useState([]); // 시/군/구 목록 추가\r\n    const [selectedTrains, setSelectedTrainsLocal] = useState([]); // selectedTrains 상태 추가\r\n    const OPEN_KEY = \"5uJ1mFn4tOfEwReTW3dupjd4w2n5kEHO5nciT%2BDVGAVWTl90sysBKbMTIlIxLW5lCPo1VmpZ%2FXggxU84GhG81g%3D%3D\";\r\n\r\n    const parseXmlToJson = (xmlString) => {\r\n        const parser = new DOMParser();\r\n        const xmlDoc = parser.parseFromString(xmlString, 'text/xml');\r\n        const items = Array.from(xmlDoc.getElementsByTagName('item'));\r\n        return items.map(item => {\r\n            const obj = {};\r\n            Array.from(item.children).forEach(child => {\r\n                obj[child.tagName] = child.textContent;\r\n            });\r\n            return obj;\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                const response = await fetch(\r\n                    `https://apis.data.go.kr/B551011/KorService1/areaCode1?serviceKey=${OPEN_KEY}&numOfRows=17&pageNo=1&MobileOS=ETC&MobileApp=AppTest&_type=json`\r\n                );\r\n\r\n                if (!response.ok) {\r\n                    throw new Error('Network response was not ok');\r\n                }\r\n\r\n                const json = await response.json();\r\n                setLocations(json.response.body.items.item);\r\n            } catch (error) {\r\n                console.error('Fetch error:', error);\r\n            }\r\n        };\r\n\r\n        fetchData();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        setSelectedLocation(destination2);\r\n    }, [destination2]);\r\n\r\n    useEffect(() => {\r\n        const fetchSigungus = async () => {\r\n            if (!selectedLocation) return;\r\n\r\n            try {\r\n                const response = await fetch(\r\n                    `http://apis.data.go.kr/B551011/KorService1/areaCode1?serviceKey=${OPEN_KEY}&numOfRows=32&pageNo=1&MobileOS=ETC&MobileApp=AppTest&areaCode=${selectedLocation}`\r\n                );\r\n\r\n                if (!response.ok) {\r\n                    throw new Error('Network response was not ok');\r\n                }\r\n\r\n                const xmlData = await response.text();\r\n                const json = parseXmlToJson(xmlData);\r\n                setSelectedSigungu('');\r\n                setSigungus(json); // 시/군/구 목록 업데이트\r\n            } catch (error) {\r\n                console.error('Fetch error:', error);\r\n            }\r\n        };\r\n\r\n        fetchSigungus();\r\n    }, [selectedLocation]);\r\n\r\n    const handleChange = (event) => {\r\n        setSelectedLocation(event.target.value);\r\n    };\r\n\r\n    const handleViewChange = (view) => {\r\n        setView(view);\r\n    };\r\n\r\n    const handleSigunguChange = (event) => {\r\n        setSelectedSigungu(event.target.value);\r\n    };\r\n\r\n    const departureCodes = TrainCode[departure] || [];\r\n    const destinationCodes = TrainCode[destination] || [];\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            {locations.length > 0 ? (\r\n                <select className=\"select\" value={selectedLocation} onChange={handleChange}>\r\n                    <option value=\"\">지역을 선택하세요</option>\r\n                    {locations.map((location, index) => (\r\n                        <option key={index} value={location.code}>\r\n                            {location.name}\r\n                        </option>\r\n                    ))}\r\n                </select>\r\n            ) : (\r\n                <p className=\"loading-message\">Loading...</p>\r\n            )}\r\n\r\n            {selectedLocation && (\r\n                <select className=\"select\" value={selectedSigungu} onChange={handleSigunguChange}>\r\n                    <option value=\"\">시/군/구를 선택하세요</option>\r\n                    {sigungus.map((sigungu, index) => (\r\n                        <option key={index} value={sigungu.code}>\r\n                            {sigungu.name}\r\n                        </option>\r\n                    ))}\r\n                </select>\r\n            )}\r\n            <div className=\"sidebar\">\r\n            <button className=\"button\" onClick={() => handleViewChange('trains')}>열차목록</button>\r\n            <button className=\"button\" onClick={() => handleViewChange('attractions')}>추천 명소</button>\r\n            <button className=\"button\" onClick={() => handleViewChange('hotels')}>숙박</button>\r\n            <button className=\"button\" onClick={() => handleViewChange('restaurant')}>맛집</button>\r\n            </div>\r\n            {view === 'trains' && departureCodes.length > 0 && destinationCodes.length > 0 && (\r\n                <TrainList\r\n                    depPlaceId={departureCodes}\r\n                    arrPlaceId={destinationCodes}\r\n                    startDate={startDate}\r\n                    selectedTrains={selectedTrains}\r\n                    setSelectedTrains={setSelectedTrains || setSelectedTrainsLocal} // prop이나 로컬 상태 사용\r\n                />\r\n            )}\r\n\r\n            {selectedLocation && view !== 'trains' && (\r\n                <ListContainer\r\n                    areaCode={selectedLocation}\r\n                    sigunguCode={selectedSigungu}\r\n                    view={view}\r\n                    departure={departure}\r\n                    destination={destination}\r\n                    startDate={startDate}\r\n                    endDate={endDate}\r\n                />\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DummyLocationBasedList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}