{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\cy\\\\Documents\\\\GitHub\\\\YourPlanner\\\\src\\\\main\\\\frontend\\\\src\\\\components\\\\js\\\\SelectedTrains.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TrainList = ({\n  depPlaceId,\n  arrPlaceId,\n  startDate,\n  selectedTrains,\n  setSelectedTrains\n}) => {\n  _s();\n  const [trains, setTrains] = useState([]);\n  useEffect(() => {\n    // 예시 API 호출\n    fetch(`API_URL?depPlaceId=${depPlaceId}&arrPlaceId=${arrPlaceId}&startDate=${startDate}`).then(response => response.json()).then(data => setTrains(data.trains)).catch(error => console.error('Error fetching train data:', error));\n  }, [depPlaceId, arrPlaceId, startDate]);\n  const handleSelectTrain = train => {\n    if (!selectedTrains.find(selectedTrain => selectedTrain.id === train.id)) {\n      setSelectedTrains([...selectedTrains, train]);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Available Trains\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: trains.map(train => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [train.name, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleSelectTrain(train),\n          children: \"Select\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 13\n        }, this)]\n      }, train.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_s(TrainList, \"b108wzI25qLIUDtvQA3yPWDuTsA=\");\n_c = TrainList;\nexport default TrainList;\nvar _c;\n$RefreshReg$(_c, \"TrainList\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","TrainList","depPlaceId","arrPlaceId","startDate","selectedTrains","setSelectedTrains","_s","trains","setTrains","fetch","then","response","json","data","catch","error","console","handleSelectTrain","train","find","selectedTrain","id","children","fileName","_jsxFileName","lineNumber","columnNumber","map","name","onClick","_c","$RefreshReg$"],"sources":["C:/Users/cy/Documents/GitHub/YourPlanner/src/main/frontend/src/components/js/SelectedTrains.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst TrainList = ({ depPlaceId, arrPlaceId, startDate, selectedTrains, setSelectedTrains }) => {\r\n  const [trains, setTrains] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // 예시 API 호출\r\n    fetch(`API_URL?depPlaceId=${depPlaceId}&arrPlaceId=${arrPlaceId}&startDate=${startDate}`)\r\n      .then(response => response.json())\r\n      .then(data => setTrains(data.trains))\r\n      .catch(error => console.error('Error fetching train data:', error));\r\n  }, [depPlaceId, arrPlaceId, startDate]);\r\n\r\n  const handleSelectTrain = (train) => {\r\n    if (!selectedTrains.find(selectedTrain => selectedTrain.id === train.id)) {\r\n      setSelectedTrains([...selectedTrains, train]);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Available Trains</h2>\r\n      <ul>\r\n        {trains.map(train => (\r\n          <li key={train.id}>\r\n            {train.name}\r\n            <button onClick={() => handleSelectTrain(train)}>Select</button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TrainList;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,SAAS,GAAGA,CAAC;EAAEC,UAAU;EAAEC,UAAU;EAAEC,SAAS;EAAEC,cAAc;EAAEC;AAAkB,CAAC,KAAK;EAAAC,EAAA;EAC9F,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAExCC,SAAS,CAAC,MAAM;IACd;IACAY,KAAK,CAAC,sBAAsBR,UAAU,eAAeC,UAAU,cAAcC,SAAS,EAAE,CAAC,CACtFO,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAIL,SAAS,CAACK,IAAI,CAACN,MAAM,CAAC,CAAC,CACpCO,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC,CAAC;EACvE,CAAC,EAAE,CAACd,UAAU,EAAEC,UAAU,EAAEC,SAAS,CAAC,CAAC;EAEvC,MAAMc,iBAAiB,GAAIC,KAAK,IAAK;IACnC,IAAI,CAACd,cAAc,CAACe,IAAI,CAACC,aAAa,IAAIA,aAAa,CAACC,EAAE,KAAKH,KAAK,CAACG,EAAE,CAAC,EAAE;MACxEhB,iBAAiB,CAAC,CAAC,GAAGD,cAAc,EAAEc,KAAK,CAAC,CAAC;IAC/C;EACF,CAAC;EAED,oBACEnB,OAAA;IAAAuB,QAAA,gBACEvB,OAAA;MAAAuB,QAAA,EAAI;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACzB3B,OAAA;MAAAuB,QAAA,EACGf,MAAM,CAACoB,GAAG,CAACT,KAAK,iBACfnB,OAAA;QAAAuB,QAAA,GACGJ,KAAK,CAACU,IAAI,eACX7B,OAAA;UAAQ8B,OAAO,EAAEA,CAAA,KAAMZ,iBAAiB,CAACC,KAAK,CAAE;UAAAI,QAAA,EAAC;QAAM;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA,GAFzDR,KAAK,CAACG,EAAE;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGb,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAACpB,EAAA,CA9BIN,SAAS;AAAA8B,EAAA,GAAT9B,SAAS;AAgCf,eAAeA,SAAS;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}