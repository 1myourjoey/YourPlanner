{"ast":null,"code":"import React,{useState}from'react';import axios from'axios';import{useNavigate}from'react-router-dom';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Login=()=>{const[loginId,setLoginId]=useState('');const[pw,setPw]=useState('');const[error,setError]=useState('');const navigate=useNavigate();const handleSubmit=async event=>{event.preventDefault();try{const response=await axios.post('/api/users/login',{loginId:loginId,pw:pw});if(response.data){console.log('로그인 성공:',response.data);navigate('/');}else{console.log(response.data.success);setError('아이디 또는 비밀번호가 올바르지 않습니다.');navigate('/login');}}catch(error){// 예외 상황 처리 (예: 네트워크 오류)\nconsole.error('로그인 요청 실패:',error);setError('로그인 요청 중 오류가 발생했습니다.');}};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h2\",{children:\"\\uB85C\\uADF8\\uC778\"}),error&&/*#__PURE__*/_jsx(\"div\",{children:error}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(\"label\",{children:[\"\\uC544\\uC774\\uB514:\",/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"loginId\",name:\"loginId\",value:loginId,onChange:e=>setLoginId(e.target.value)})]})}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{children:\"\\uBE44\\uBC00\\uBC88\\uD638:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",id:\"pw\",name:\"pw\",value:pw,onChange:e=>setPw(e.target.value)})]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"\\uB85C\\uADF8\\uC778\"})]})]});};export default Login;","map":{"version":3,"names":["React","useState","axios","useNavigate","jsx","_jsx","jsxs","_jsxs","Login","loginId","setLoginId","pw","setPw","error","setError","navigate","handleSubmit","event","preventDefault","response","post","data","console","log","success","children","onSubmit","type","id","name","value","onChange","e","target"],"sources":["C:/Users/admin/Documents/GitHub/YourPlanner/src/main/frontend/src/components/js/Login.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst Login = () => {\r\n    const [loginId, setLoginId] = useState('');\r\n    const [pw, setPw] = useState('');\r\n    const [error, setError] = useState('');\r\n    const navigate = useNavigate();\r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n\r\n        try {\r\n            const response = await axios.post('/api/users/login', {\r\n                loginId: loginId,\r\n                pw: pw\r\n            });\r\n\r\n            if (response.data) {\r\n                console.log('로그인 성공:', response.data);\r\n                navigate('/');\r\n            } else {\r\n              console.log(response.data.success)\r\n                setError('아이디 또는 비밀번호가 올바르지 않습니다.');\r\n                navigate('/login');\r\n            }\r\n        } catch (error) {\r\n            // 예외 상황 처리 (예: 네트워크 오류)\r\n            console.error('로그인 요청 실패:', error);\r\n            setError('로그인 요청 중 오류가 발생했습니다.');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h2>로그인</h2>\r\n            {error && <div>{error}</div>}\r\n            <form onSubmit={handleSubmit}>\r\n                <div>\r\n                    <label>\r\n                        아이디:\r\n                        <input\r\n                            type=\"text\"\r\n                            id=\"loginId\"\r\n                            name=\"loginId\"\r\n                            value={loginId}\r\n                            onChange={(e) => setLoginId(e.target.value)}\r\n                        />\r\n                    </label>\r\n\r\n\r\n                </div>\r\n                <div>\r\n                    <label>비밀번호:</label>\r\n                    <input\r\n                        type=\"password\"\r\n                        id=\"pw\"\r\n                        name=\"pw\"\r\n                        value={pw}\r\n                        onChange={(e) => setPw(e.target.value)}\r\n                    />\r\n                </div>\r\n                <button type=\"submit\">로그인</button>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Login;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,MAAO,CAAAC,KAAK,KAAM,OAAO,CACzB,OAASC,WAAW,KAAQ,kBAAkB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAE/C,KAAM,CAAAC,KAAK,CAAGA,CAAA,GAAM,CAChB,KAAM,CAACC,OAAO,CAAEC,UAAU,CAAC,CAAGT,QAAQ,CAAC,EAAE,CAAC,CAC1C,KAAM,CAACU,EAAE,CAAEC,KAAK,CAAC,CAAGX,QAAQ,CAAC,EAAE,CAAC,CAChC,KAAM,CAACY,KAAK,CAAEC,QAAQ,CAAC,CAAGb,QAAQ,CAAC,EAAE,CAAC,CACtC,KAAM,CAAAc,QAAQ,CAAGZ,WAAW,CAAC,CAAC,CAE9B,KAAM,CAAAa,YAAY,CAAG,KAAO,CAAAC,KAAK,EAAK,CAClCA,KAAK,CAACC,cAAc,CAAC,CAAC,CAEtB,GAAI,CACA,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAjB,KAAK,CAACkB,IAAI,CAAC,kBAAkB,CAAE,CAClDX,OAAO,CAAEA,OAAO,CAChBE,EAAE,CAAEA,EACR,CAAC,CAAC,CAEF,GAAIQ,QAAQ,CAACE,IAAI,CAAE,CACfC,OAAO,CAACC,GAAG,CAAC,SAAS,CAAEJ,QAAQ,CAACE,IAAI,CAAC,CACrCN,QAAQ,CAAC,GAAG,CAAC,CACjB,CAAC,IAAM,CACLO,OAAO,CAACC,GAAG,CAACJ,QAAQ,CAACE,IAAI,CAACG,OAAO,CAAC,CAChCV,QAAQ,CAAC,yBAAyB,CAAC,CACnCC,QAAQ,CAAC,QAAQ,CAAC,CACtB,CACJ,CAAE,MAAOF,KAAK,CAAE,CACZ;AACAS,OAAO,CAACT,KAAK,CAAC,YAAY,CAAEA,KAAK,CAAC,CAClCC,QAAQ,CAAC,sBAAsB,CAAC,CACpC,CACJ,CAAC,CAED,mBACIP,KAAA,QAAAkB,QAAA,eACIpB,IAAA,OAAAoB,QAAA,CAAI,oBAAG,CAAI,CAAC,CACXZ,KAAK,eAAIR,IAAA,QAAAoB,QAAA,CAAMZ,KAAK,CAAM,CAAC,cAC5BN,KAAA,SAAMmB,QAAQ,CAAEV,YAAa,CAAAS,QAAA,eACzBpB,IAAA,QAAAoB,QAAA,cACIlB,KAAA,UAAAkB,QAAA,EAAO,qBAEH,cAAApB,IAAA,UACIsB,IAAI,CAAC,MAAM,CACXC,EAAE,CAAC,SAAS,CACZC,IAAI,CAAC,SAAS,CACdC,KAAK,CAAErB,OAAQ,CACfsB,QAAQ,CAAGC,CAAC,EAAKtB,UAAU,CAACsB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE,CAC/C,CAAC,EACC,CAAC,CAGP,CAAC,cACNvB,KAAA,QAAAkB,QAAA,eACIpB,IAAA,UAAAoB,QAAA,CAAO,2BAAK,CAAO,CAAC,cACpBpB,IAAA,UACIsB,IAAI,CAAC,UAAU,CACfC,EAAE,CAAC,IAAI,CACPC,IAAI,CAAC,IAAI,CACTC,KAAK,CAAEnB,EAAG,CACVoB,QAAQ,CAAGC,CAAC,EAAKpB,KAAK,CAACoB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE,CAC1C,CAAC,EACD,CAAC,cACNzB,IAAA,WAAQsB,IAAI,CAAC,QAAQ,CAAAF,QAAA,CAAC,oBAAG,CAAQ,CAAC,EAChC,CAAC,EACN,CAAC,CAEd,CAAC,CAED,cAAe,CAAAjB,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}