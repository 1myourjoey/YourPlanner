{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\Documents\\\\GitHub\\\\YourPlanner\\\\src\\\\main\\\\frontend\\\\src\\\\components\\\\js\\\\TravelDate.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport { useNavigate } from 'react-router-dom';\nimport MapSvg from \"./MapSvg\";\nimport '../css/TravelDate.css'; // CSS 파일 import\n\n// 날짜를 'yyyy-MM-dd' 형식으로 변환하는 함수\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst formatDate = date => {\n  const year = date.getFullYear();\n  const month = String(date.getMonth() + 1).padStart(2, '0');\n  const day = String(date.getDate()).padStart(2, '0');\n  return `${year}-${month}-${day}`;\n};\nconst TravelDate = () => {\n  _s();\n  const [startDate, setStartDate] = useState(null);\n  const [endDate, setEndDate] = useState(null);\n  const [destination, setDestination] = useState('');\n  const [departure, setDeparture] = useState('');\n  const navigate = useNavigate();\n  const handleTravel = () => {\n    const formattedStartDate = startDate ? formatDate(startDate) : '';\n    const formattedEndDate = endDate ? formatDate(endDate) : '';\n    const params = new URLSearchParams({\n      startDate: formattedStartDate,\n      endDate: formattedEndDate,\n      departure,\n      destination\n    });\n    navigate(`/details?${params.toString()}`);\n  };\n  const cities = [\"서울\", \"부산\", \"대구\", \"인천\", \"광주\", \"대전\", \"울산\", \"세종\", \"경기도\", \"강원도\", \"충청북도\", \"충청남도\", \"전라북도\", \"전라남도\", \"경상북도\", \"경상남도\", \"제주도\"];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"left-panel\",\n      children: /*#__PURE__*/_jsxDEV(MapSvg, {\n        onCityClick: setDestination\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"right-panel\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"startDate\",\n          className: \"label\",\n          children: \"Start Date:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n          id: \"startDate\",\n          selected: startDate,\n          onChange: date => setStartDate(date),\n          dateFormat: \"yyyy-MM-dd\",\n          className: \"input-field\" // 클래스 추가\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"endDate\",\n          className: \"label\",\n          children: \"End Date:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n          id: \"endDate\",\n          selected: endDate,\n          onChange: date => setEndDate(date),\n          dateFormat: \"yyyy-MM-dd\",\n          className: \"input-field\" // 클래스 추가\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"departure\",\n          className: \"label\",\n          children: \"Departure:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"departure\",\n          value: departure,\n          onChange: e => setDeparture(e.target.value),\n          className: \"departure-input\" // 클래스 추가\n          ,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"\\uB3C4\\uC2DC\\uB97C \\uC120\\uD0DD\\uD558\\uC138\\uC694\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 25\n          }, this), cities.map(city => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: city,\n            children: city\n          }, city, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 29\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"destination\",\n          className: \"label\",\n          children: \"Destination:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"destination\",\n          value: destination,\n          onChange: e => setDestination(e.target.value),\n          className: \"destination-input\" // 클래스 추가\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleTravel,\n        className: \"button\",\n        children: \"\\uC5EC\\uD589\\uD558\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n};\n_s(TravelDate, \"EFbCdJceUGccFA5qGUI8OvRqoeM=\", false, function () {\n  return [useNavigate];\n});\n_c = TravelDate;\nexport default TravelDate;\nvar _c;\n$RefreshReg$(_c, \"TravelDate\");","map":{"version":3,"names":["React","useState","DatePicker","useNavigate","MapSvg","jsxDEV","_jsxDEV","formatDate","date","year","getFullYear","month","String","getMonth","padStart","day","getDate","TravelDate","_s","startDate","setStartDate","endDate","setEndDate","destination","setDestination","departure","setDeparture","navigate","handleTravel","formattedStartDate","formattedEndDate","params","URLSearchParams","toString","cities","className","children","onCityClick","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","selected","onChange","dateFormat","value","e","target","map","city","type","onClick","_c","$RefreshReg$"],"sources":["C:/Users/admin/Documents/GitHub/YourPlanner/src/main/frontend/src/components/js/TravelDate.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport DatePicker from 'react-datepicker';\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport MapSvg from \"./MapSvg\";\r\nimport '../css/TravelDate.css'; // CSS 파일 import\r\n\r\n// 날짜를 'yyyy-MM-dd' 형식으로 변환하는 함수\r\nconst formatDate = (date) => {\r\n    const year = date.getFullYear();\r\n    const month = String(date.getMonth() + 1).padStart(2, '0');\r\n    const day = String(date.getDate()).padStart(2, '0');\r\n    return `${year}-${month}-${day}`;\r\n};\r\n\r\nconst TravelDate = () => {\r\n    const [startDate, setStartDate] = useState(null);\r\n    const [endDate, setEndDate] = useState(null);\r\n    const [destination, setDestination] = useState('');\r\n    const [departure, setDeparture] = useState('');\r\n    const navigate = useNavigate();\r\n\r\n    const handleTravel = () => {\r\n        const formattedStartDate = startDate ? formatDate(startDate) : '';\r\n        const formattedEndDate = endDate ? formatDate(endDate) : '';\r\n        const params = new URLSearchParams({\r\n            startDate: formattedStartDate,\r\n            endDate: formattedEndDate,\r\n            departure,\r\n            destination\r\n        });\r\n        navigate(`/details?${params.toString()}`);\r\n    };\r\n\r\n    const cities = [\r\n        \"서울\", \"부산\", \"대구\", \"인천\", \"광주\", \"대전\", \"울산\",\r\n        \"세종\", \"경기도\", \"강원도\", \"충청북도\", \"충청남도\", \"전라북도\", \"전라남도\",\r\n        \"경상북도\", \"경상남도\", \"제주도\"\r\n    ];\r\n\r\n    return (\r\n        <div className=\"form\">\r\n            <div className=\"left-panel\">\r\n                <MapSvg onCityClick={setDestination}/>\r\n            </div>\r\n            <div className=\"right-panel\">\r\n                <div className=\"form-item\">\r\n                    <label htmlFor=\"startDate\" className=\"label\">Start Date:</label>\r\n                    <DatePicker\r\n                        id=\"startDate\"\r\n                        selected={startDate}\r\n                        onChange={date => setStartDate(date)}\r\n                        dateFormat=\"yyyy-MM-dd\"\r\n                        className=\"input-field\" // 클래스 추가\r\n                    />\r\n                </div>\r\n                <div className=\"form-item\">\r\n                    <label htmlFor=\"endDate\" className=\"label\">End Date:</label>\r\n                    <DatePicker\r\n                        id=\"endDate\"\r\n                        selected={endDate}\r\n                        onChange={date => setEndDate(date)}\r\n                        dateFormat=\"yyyy-MM-dd\"\r\n                        className=\"input-field\" // 클래스 추가\r\n                    />\r\n                </div>\r\n                <div className=\"form-item\">\r\n                    <label htmlFor=\"departure\" className=\"label\">Departure:</label>\r\n                    <select\r\n                        id=\"departure\"\r\n                        value={departure}\r\n                        onChange={e => setDeparture(e.target.value)}\r\n                        className=\"departure-input\" // 클래스 추가\r\n                    >\r\n                        <option value=\"\">도시를 선택하세요</option>\r\n                        {cities.map(city => (\r\n                            <option key={city} value={city}>{city}</option>\r\n                        ))}\r\n                    </select>\r\n                </div>\r\n                <div className=\"form-item\">\r\n                    <label htmlFor=\"destination\" className=\"label\">Destination:</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        id=\"destination\"\r\n                        value={destination}\r\n                        onChange={e => setDestination(e.target.value)}\r\n                        className=\"destination-input\" // 클래스 추가\r\n                    />\r\n                </div>\r\n\r\n                <button onClick={handleTravel} className=\"button\">여행하기</button> {/* 클래스 추가 */}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TravelDate;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}