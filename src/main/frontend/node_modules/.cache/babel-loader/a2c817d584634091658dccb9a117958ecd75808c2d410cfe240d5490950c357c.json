{"ast":null,"code":"var _jsxFileName = \"/Users/Joey/Coding/_dev/YourPlanner/src/main/frontend/src/components/js/MainLayout.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Outlet, Link, useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport Weather from './Weather';\nimport DummyFooter from './DummyFooter';\nimport '../css/header.css';\nimport './MainLayout.css'; // MainLayout.css 파일 호출\nimport MainBackVideo from \"./MainBackVideo\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MainLayout = () => {\n  _s();\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const navigate = useNavigate();\n  const handleLogout = () => {\n    axios.post('/api/users/logout').then(() => {\n      sessionStorage.removeItem('loginId');\n      setIsLoggedIn(false);\n      navigate('/');\n    }).catch(error => {\n      console.error('로그아웃 실패:', error);\n    });\n  };\n  useEffect(() => {\n    // 로그인 상태를 확인하는 로직 추가 (예: 세션 스토리지 등을 통해 확인)\n    const loggedIn = sessionStorage.getItem('loginId') !== null; // 예시: 세션 스토리지에 loginId가 있는지 확인\n    setIsLoggedIn(loggedIn);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App section1\",\n    children: [\" \", /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"container header\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"YOUR PLANNER\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"\\uC720\\uD50C\\uACFC \\uC2DC\\uC791\\uD558\\uB294 \\uC5EC\\uD589 !\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MainBackVideo, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col\",\n          children: /*#__PURE__*/_jsxDEV(Outlet, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Weather, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(DummyFooter, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n_s(MainLayout, \"JNNAVcL03XZIkY/1G2PDQyJFRpk=\", false, function () {\n  return [useNavigate];\n});\n_c = MainLayout;\nexport default MainLayout;\nvar _c;\n$RefreshReg$(_c, \"MainLayout\");","map":{"version":3,"names":["React","useState","useEffect","Outlet","Link","useNavigate","axios","Weather","DummyFooter","MainBackVideo","jsxDEV","_jsxDEV","MainLayout","_s","isLoggedIn","setIsLoggedIn","navigate","handleLogout","post","then","sessionStorage","removeItem","catch","error","console","loggedIn","getItem","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/Joey/Coding/_dev/YourPlanner/src/main/frontend/src/components/js/MainLayout.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Outlet, Link, useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport Weather from './Weather';\nimport DummyFooter from './DummyFooter';\nimport '../css/header.css';\nimport './MainLayout.css'; // MainLayout.css 파일 호출\nimport MainBackVideo from \"./MainBackVideo\";\n\nconst MainLayout = () => {\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\n    const navigate = useNavigate();\n\n    const handleLogout = () => {\n        axios.post('/api/users/logout')\n            .then(() => {\n                sessionStorage.removeItem('loginId');\n                setIsLoggedIn(false);\n                navigate('/');\n            })\n            .catch(error => {\n                console.error('로그아웃 실패:', error);\n            });\n    };\n\n    useEffect(() => {\n        // 로그인 상태를 확인하는 로직 추가 (예: 세션 스토리지 등을 통해 확인)\n        const loggedIn = sessionStorage.getItem('loginId') !== null; // 예시: 세션 스토리지에 loginId가 있는지 확인\n        setIsLoggedIn(loggedIn);\n    }, []);\n\n    return (\n        <div className=\"App section1\"> {/* 여기서 section1 클래스를 추가 */}\n            <header className=\"container header\">\n                {/* 헤더 컴포넌트 */}\n            </header>\n\n            <div className=\"col\">\n                <h1>YOUR PLANNER</h1>\n                <h4>유플과 시작하는 여행 !</h4>\n            </div>\n\n            <MainBackVideo />\n\n            <section className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col\">\n                        <Outlet />\n                    </div>\n                </div>\n            </section>\n            <Weather />\n            <DummyFooter />\n        </div>\n    );\n};\n\nexport default MainLayout;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}