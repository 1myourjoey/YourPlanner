{"ast":null,"code":"var _jsxFileName = \"/Users/Joey/Coding/_dev/YourPlanner/src/main/frontend/src/components/js/TravelDate.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport { useNavigate } from 'react-router-dom';\nimport MapSvg from \"./MapSvg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst formatDate = date => {\n  const year = date.getFullYear();\n  const month = String(date.getMonth() + 1).padStart(2, '0');\n  const day = String(date.getDate()).padStart(2, '0');\n  return `${year}-${month}-${day}`;\n};\nconst TravelDate = () => {\n  _s();\n  const [startDate, setStartDate] = useState(null);\n  const [endDate, setEndDate] = useState(null);\n  const [destination, setDestination] = useState('');\n  const navigate = useNavigate();\n  const handleTravel = () => {\n    const params = new URLSearchParams({\n      startDate: startDate ? startDate.toISOString() : '',\n      endDate: endDate ? endDate.toISOString() : '',\n      destination\n    });\n    navigate(`/details?${params.toString()}`);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"startDate\",\n      children: \"Start Date:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n      id: \"startDate\",\n      selected: startDate,\n      onChange: date => setStartDate(date),\n      dateFormat: \"yyyy-MM-dd\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"endDate\",\n      children: \"End Date:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n      id: \"endDate\",\n      selected: endDate,\n      onChange: date => setEndDate(date),\n      dateFormat: \"yyyy-MM-dd\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"destination\",\n      children: \"Destination:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      id: \"destination\",\n      value: destination,\n      onChange: e => setDestination(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleTravel,\n      children: \"\\uC5EC\\uD589\\uD558\\uAE30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"map-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\uC9C0\\uB3C4\\uC5D0\\uC11C \\uC9C0\\uC5ED\\uC744 \\uC120\\uD0DD\\uD574\\uBCF4\\uC138\\uC694 !\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(MapSvg, {\n        onCityClick: setDestination\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n_s(TravelDate, \"b0ajzXzLhmgc4ya+TzQ8ioxh9YY=\", false, function () {\n  return [useNavigate];\n});\n_c = TravelDate;\nexport default TravelDate;\nvar _c;\n$RefreshReg$(_c, \"TravelDate\");","map":{"version":3,"names":["React","useState","DatePicker","useNavigate","MapSvg","jsxDEV","_jsxDEV","formatDate","date","year","getFullYear","month","String","getMonth","padStart","day","getDate","TravelDate","_s","startDate","setStartDate","endDate","setEndDate","destination","setDestination","navigate","handleTravel","params","URLSearchParams","toISOString","toString","className","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","id","selected","onChange","dateFormat","type","value","e","target","onClick","onCityClick","_c","$RefreshReg$"],"sources":["/Users/Joey/Coding/_dev/YourPlanner/src/main/frontend/src/components/js/TravelDate.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport { useNavigate } from 'react-router-dom';\nimport MapSvg from \"./MapSvg\";\n\nconst formatDate = (date) => {\n    const year = date.getFullYear();\n    const month = String(date.getMonth() + 1).padStart(2, '0');\n    const day = String(date.getDate()).padStart(2, '0');\n    return `${year}-${month}-${day}`;\n};\nconst TravelDate = () => {\n    const [startDate, setStartDate] = useState(null);\n    const [endDate, setEndDate] = useState(null);\n    const [destination, setDestination] = useState('');\n    const navigate = useNavigate();\n\n    const handleTravel = () => {\n        const params = new URLSearchParams({\n            startDate: startDate ? startDate.toISOString() : '',\n            endDate: endDate ? endDate.toISOString() : '',\n            destination\n        });\n        navigate(`/details?${params.toString()}`);\n    };\n\n    return (\n        <div className=\"form\">\n            <label htmlFor=\"startDate\">Start Date:</label>\n            <DatePicker\n                id=\"startDate\"\n                selected={startDate}\n                onChange={date => setStartDate(date)}\n                dateFormat=\"yyyy-MM-dd\"\n            />\n            <label htmlFor=\"endDate\">End Date:</label>\n            <DatePicker\n                id=\"endDate\"\n                selected={endDate}\n                onChange={date => setEndDate(date)}\n                dateFormat=\"yyyy-MM-dd\"\n            />\n            <label htmlFor=\"destination\">Destination:</label>\n            <input\n                type=\"text\"\n                id=\"destination\"\n                value={destination}\n                onChange={e => setDestination(e.target.value)}\n            />\n            <button onClick={handleTravel}>여행하기</button>\n            <div className=\"map-container\">\n                <p>지도에서 지역을 선택해보세요 !</p>\n                <MapSvg onCityClick={setDestination} />\n            </div>\n        </div>\n    );\n};\n\nexport default TravelDate;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}