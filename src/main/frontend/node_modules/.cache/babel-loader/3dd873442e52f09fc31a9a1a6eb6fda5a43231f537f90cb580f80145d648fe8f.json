{"ast":null,"code":"var _jsxFileName = \"/Users/Joey/Coding/_dev/YourPlanner/src/main/frontend/src/components/js/ListComponent.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport RecommendedPlaces from './RecommendedPlaces';\nimport '../css/ListComponent.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ListComponent = ({\n  areaCode,\n  sigunguCode\n}) => {\n  _s();\n  const [data, setData] = useState([]);\n  const [page, setPage] = useState(1);\n  const [loading, setLoading] = useState(false);\n  const fetchInitialData = async () => {\n    try {\n      setLoading(true);\n      const response = await fetch(`http://apis.data.go.kr/B551011/KorService1/areaBasedList1?serviceKey=5uJ1mFn4tOfEwReTW3dupjd4w2n5kEHO5nciT%2BDVGAVWTl90sysBKbMTIlIxLW5lCPo1VmpZ%2FXggxU84GhG81g%3D%3D&pageNo=1&numOfRows=10&MobileApp=AppTest&MobileOS=ETC&arrange=A&areaCode=${areaCode}&sigunguCode=${sigunguCode}`);\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      const responseData = await response.text();\n      const parser = new DOMParser();\n      const xmlData = parser.parseFromString(responseData, 'text/xml');\n      const items = xmlData.getElementsByTagName('item');\n      const extractedData = Array.from(items).map(item => {\n        var _item$getElementsByTa;\n        return {\n          title: item.getElementsByTagName('title')[0].textContent,\n          addr1: item.getElementsByTagName('addr1')[0].textContent,\n          firstimage2: ((_item$getElementsByTa = item.getElementsByTagName('firstimage2')[0]) === null || _item$getElementsByTa === void 0 ? void 0 : _item$getElementsByTa.textContent) || ''\n        };\n      });\n      setData(extractedData);\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const fetchMoreData = async pageNumber => {\n    try {\n      setLoading(true);\n      const response = await fetch(`http://apis.data.go.kr/B551011/KorService1/areaBasedList1?serviceKey=5uJ1mFn4tOfEwReTW3dupjd4w2n5kEHO5nciT%2BDVGAVWTl90sysBKbMTIlIxLW5lCPo1VmpZ%2FXggxU84GhG81g%3D%3D&pageNo=${pageNumber}&numOfRows=10&MobileApp=AppTest&MobileOS=ETC&arrange=A&areaCode=${areaCode}&sigunguCode=${sigunguCode}`);\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      const responseData = await response.text();\n      const parser = new DOMParser();\n      const xmlData = parser.parseFromString(responseData, 'text/xml');\n      const items = xmlData.getElementsByTagName('item');\n      const extractedData = Array.from(items).map(item => {\n        var _item$getElementsByTa2;\n        return {\n          title: item.getElementsByTagName('title')[0].textContent,\n          addr1: item.getElementsByTagName('addr1')[0].textContent,\n          firstimage2: ((_item$getElementsByTa2 = item.getElementsByTagName('firstimage2')[0]) === null || _item$getElementsByTa2 === void 0 ? void 0 : _item$getElementsByTa2.textContent) || ''\n        };\n      });\n      setData(prevData => [...prevData, ...extractedData]);\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    fetchInitialData();\n  }, [areaCode, sigunguCode]);\n  useEffect(() => {\n    if (page > 1) {\n      fetchMoreData(page);\n    }\n  }, [page]);\n  const loadMore = () => {\n    setPage(prevPage => prevPage + 1);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(RecommendedPlaces, {\n      data: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"load-more-container\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: loadMore,\n        disabled: loading,\n        children: loading ? '로딩 중...' : '더보기'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n};\n_s(ListComponent, \"kua7QnLI8kJaIzg6HUlw5Jk7ZfY=\");\n_c = ListComponent;\nexport default ListComponent;\nvar _c;\n$RefreshReg$(_c, \"ListComponent\");","map":{"version":3,"names":["React","useState","useEffect","RecommendedPlaces","jsxDEV","_jsxDEV","ListComponent","areaCode","sigunguCode","_s","data","setData","page","setPage","loading","setLoading","fetchInitialData","response","fetch","ok","Error","responseData","text","parser","DOMParser","xmlData","parseFromString","items","getElementsByTagName","extractedData","Array","from","map","item","_item$getElementsByTa","title","textContent","addr1","firstimage2","error","console","fetchMoreData","pageNumber","_item$getElementsByTa2","prevData","loadMore","prevPage","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","disabled","_c","$RefreshReg$"],"sources":["/Users/Joey/Coding/_dev/YourPlanner/src/main/frontend/src/components/js/ListComponent.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport RecommendedPlaces from './RecommendedPlaces';\nimport '../css/ListComponent.css';\n\nconst ListComponent = ({ areaCode, sigunguCode }) => {\n  const [data, setData] = useState([]);\n  const [page, setPage] = useState(1);\n  const [loading, setLoading] = useState(false);\n\n  const fetchInitialData = async () => {\n    try {\n      setLoading(true);\n      const response = await fetch(`http://apis.data.go.kr/B551011/KorService1/areaBasedList1?serviceKey=5uJ1mFn4tOfEwReTW3dupjd4w2n5kEHO5nciT%2BDVGAVWTl90sysBKbMTIlIxLW5lCPo1VmpZ%2FXggxU84GhG81g%3D%3D&pageNo=1&numOfRows=10&MobileApp=AppTest&MobileOS=ETC&arrange=A&areaCode=${areaCode}&sigunguCode=${sigunguCode}`);\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      const responseData = await response.text();\n      const parser = new DOMParser();\n      const xmlData = parser.parseFromString(responseData, 'text/xml');\n      const items = xmlData.getElementsByTagName('item');\n      const extractedData = Array.from(items).map(item => ({\n        title: item.getElementsByTagName('title')[0].textContent,\n        addr1: item.getElementsByTagName('addr1')[0].textContent,\n        firstimage2: item.getElementsByTagName('firstimage2')[0]?.textContent || ''\n      }));\n      setData(extractedData);\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const fetchMoreData = async (pageNumber) => {\n    try {\n      setLoading(true);\n      const response = await fetch(`http://apis.data.go.kr/B551011/KorService1/areaBasedList1?serviceKey=5uJ1mFn4tOfEwReTW3dupjd4w2n5kEHO5nciT%2BDVGAVWTl90sysBKbMTIlIxLW5lCPo1VmpZ%2FXggxU84GhG81g%3D%3D&pageNo=${pageNumber}&numOfRows=10&MobileApp=AppTest&MobileOS=ETC&arrange=A&areaCode=${areaCode}&sigunguCode=${sigunguCode}`);\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      const responseData = await response.text();\n      const parser = new DOMParser();\n      const xmlData = parser.parseFromString(responseData, 'text/xml');\n      const items = xmlData.getElementsByTagName('item');\n      const extractedData = Array.from(items).map(item => ({\n        title: item.getElementsByTagName('title')[0].textContent,\n        addr1: item.getElementsByTagName('addr1')[0].textContent,\n        firstimage2: item.getElementsByTagName('firstimage2')[0]?.textContent || ''\n      }));\n      setData(prevData => [...prevData, ...extractedData]);\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    fetchInitialData();\n  }, [areaCode, sigunguCode]);\n\n  useEffect(() => {\n    if (page > 1) {\n      fetchMoreData(page);\n    }\n  }, [page]);\n\n  const loadMore = () => {\n    setPage(prevPage => prevPage + 1);\n  };\n\n  return (\n    <div>\n      <RecommendedPlaces data={data} />\n      <div className=\"load-more-container\">\n        <button onClick={loadMore} disabled={loading}>\n          {loading ? '로딩 중...' : '더보기'}\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default ListComponent;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}