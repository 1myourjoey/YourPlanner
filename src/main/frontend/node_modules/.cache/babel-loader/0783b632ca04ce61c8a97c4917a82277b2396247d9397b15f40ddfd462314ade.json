{"ast":null,"code":"import React,{useState,useEffect}from'react';import DummyListRestaurant from\"./DummyListRestaurant\";import ListComponent from\"./ListComponent\";import DummyListHotel from\"./DummyListHotel\";import RecommendedPlaces from\"./RecommendedPlaces\";/* 선택된 리스트를 저장하는 최상위 컴포넌트 */import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const ListContainer=_ref=>{let{areaCode,sigunguCode,view}=_ref;const[data,setData]=useState([]);const[page,setPage]=useState(1);const[loading,setLoading]=useState(false);const fetchData=async(pageNumber,type)=>{try{setLoading(true);let url;switch(type){case'attractions':url=\"http://apis.data.go.kr/B551011/KorService1/areaBasedList1?serviceKey=5uJ1mFn4tOfEwReTW3dupjd4w2n5kEHO5nciT%2BDVGAVWTl90sysBKbMTIlIxLW5lCPo1VmpZ%2FXggxU84GhG81g%3D%3D&pageNo=\".concat(pageNumber,\"&numOfRows=10&MobileApp=AppTest&MobileOS=ETC&arrange=A&areaCode=\").concat(areaCode,\"&sigunguCode=\").concat(sigunguCode);break;case'hotels':url=\"http://apis.data.go.kr/B551011/KorService1/areaBasedList1?serviceKey=5uJ1mFn4tOfEwReTW3dupjd4w2n5kEHO5nciT%2BDVGAVWTl90sysBKbMTIlIxLW5lCPo1VmpZ%2FXggxU84GhG81g%3D%3D&pageNo=\".concat(pageNumber,\"&numOfRows=10&MobileApp=AppTest&MobileOS=ETC&arrange=B&areaCode=\").concat(areaCode,\"&sigunguCode=\").concat(sigunguCode,\"&contentTypeId=32\");break;case'restaurant':url=\"http://apis.data.go.kr/B551011/KorService1/areaBasedList1?serviceKey=5V%2BytDDcz11Mfxc3tREUmoX6wOvDmA3oIaBkQfhB%2Bo%2B4vBWem3h6eQhKVvJuiJvpVonGtnuRqU6A83YSSBAh8A%3D%3D&pageNo=1&numOfRows=10&MobileApp=AppTest&MobileOS=ETC&arrange=A&areaCode=\".concat(areaCode,\"&sigunguCode=\").concat(sigunguCode,\"&contentTypeId=39\");break;default:return;}const response=await fetch(url);if(!response.ok){throw new Error('Network response was not ok');}const responseData=await response.text();const parser=new DOMParser();const xmlData=parser.parseFromString(responseData,'text/xml');const items=xmlData.getElementsByTagName('item');const extractedData=Array.from(items).map(item=>{var _item$getElementsByTa;return{title:item.getElementsByTagName('title')[0].textContent,addr1:item.getElementsByTagName('addr1')[0].textContent,firstimage2:((_item$getElementsByTa=item.getElementsByTagName('firstimage2')[0])===null||_item$getElementsByTa===void 0?void 0:_item$getElementsByTa.textContent)||''};});setData(prevData=>[...prevData,...extractedData]);}catch(error){console.error('Error fetching data:',error);}finally{setLoading(false);}};useEffect(()=>{setData([]);// View가 변경될 때마다 데이터를 초기화합니다.\nsetPage(1);fetchData(1,view);// 초기 데이터를 가져옵니다.\n},[view,areaCode,sigunguCode]);useEffect(()=>{if(page>1){fetchData(page,view);// 페이지가 변경될 때만 더 많은 데이터를 가져옵니다.\n}},[page]);const loadMore=()=>{setPage(prevPage=>prevPage+1);};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(RecommendedPlaces,{data:data}),/*#__PURE__*/_jsx(\"div\",{className:\"load-more-container\",children:/*#__PURE__*/_jsx(\"button\",{onClick:loadMore,disabled:loading,children:loading?'로딩 중...':'더보기'})})]});};export default ListContainer;","map":{"version":3,"names":["React","useState","useEffect","DummyListRestaurant","ListComponent","DummyListHotel","RecommendedPlaces","jsx","_jsx","jsxs","_jsxs","ListContainer","_ref","areaCode","sigunguCode","view","data","setData","page","setPage","loading","setLoading","fetchData","pageNumber","type","url","concat","response","fetch","ok","Error","responseData","text","parser","DOMParser","xmlData","parseFromString","items","getElementsByTagName","extractedData","Array","from","map","item","_item$getElementsByTa","title","textContent","addr1","firstimage2","prevData","error","console","loadMore","prevPage","children","className","onClick","disabled"],"sources":["C:/Users/admin/Documents/GitHub/YourPlanner/src/main/frontend/src/components/js/ListContainer.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport DummyListRestaurant from \"./DummyListRestaurant\";\r\nimport ListComponent from \"./ListComponent\";\r\nimport DummyListHotel from \"./DummyListHotel\";\r\nimport RecommendedPlaces from \"./RecommendedPlaces\";\r\n\r\n\r\n/* 선택된 리스트를 저장하는 최상위 컴포넌트 */\r\nconst ListContainer = ({ areaCode, sigunguCode, view }) => {\r\n    const [data, setData] = useState([]);\r\n    const [page, setPage] = useState(1);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const fetchData = async (pageNumber, type) => {\r\n        try {\r\n            setLoading(true);\r\n            let url;\r\n            switch (type) {\r\n                case 'attractions':\r\n                    url = `http://apis.data.go.kr/B551011/KorService1/areaBasedList1?serviceKey=5uJ1mFn4tOfEwReTW3dupjd4w2n5kEHO5nciT%2BDVGAVWTl90sysBKbMTIlIxLW5lCPo1VmpZ%2FXggxU84GhG81g%3D%3D&pageNo=${pageNumber}&numOfRows=10&MobileApp=AppTest&MobileOS=ETC&arrange=A&areaCode=${areaCode}&sigunguCode=${sigunguCode}`;\r\n                    break;\r\n                case 'hotels':\r\n                    url = `http://apis.data.go.kr/B551011/KorService1/areaBasedList1?serviceKey=5uJ1mFn4tOfEwReTW3dupjd4w2n5kEHO5nciT%2BDVGAVWTl90sysBKbMTIlIxLW5lCPo1VmpZ%2FXggxU84GhG81g%3D%3D&pageNo=${pageNumber}&numOfRows=10&MobileApp=AppTest&MobileOS=ETC&arrange=B&areaCode=${areaCode}&sigunguCode=${sigunguCode}&contentTypeId=32`;\r\n                    break;\r\n                case 'restaurant':\r\n                    url = `http://apis.data.go.kr/B551011/KorService1/areaBasedList1?serviceKey=5V%2BytDDcz11Mfxc3tREUmoX6wOvDmA3oIaBkQfhB%2Bo%2B4vBWem3h6eQhKVvJuiJvpVonGtnuRqU6A83YSSBAh8A%3D%3D&pageNo=1&numOfRows=10&MobileApp=AppTest&MobileOS=ETC&arrange=A&areaCode=${areaCode}&sigunguCode=${sigunguCode}&contentTypeId=39`;\r\n                    break;\r\n                default:\r\n                    return;\r\n            }\r\n\r\n            const response = await fetch(url);\r\n            if (!response.ok) {\r\n                throw new Error('Network response was not ok');\r\n            }\r\n            const responseData = await response.text();\r\n            const parser = new DOMParser();\r\n            const xmlData = parser.parseFromString(responseData, 'text/xml');\r\n            const items = xmlData.getElementsByTagName('item');\r\n            const extractedData = Array.from(items).map(item => ({\r\n                title: item.getElementsByTagName('title')[0].textContent,\r\n                addr1: item.getElementsByTagName('addr1')[0].textContent,\r\n                firstimage2: item.getElementsByTagName('firstimage2')[0]?.textContent || ''\r\n            }));\r\n            setData(prevData => [...prevData, ...extractedData]);\r\n        } catch (error) {\r\n            console.error('Error fetching data:', error);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        setData([]); // View가 변경될 때마다 데이터를 초기화합니다.\r\n        setPage(1);\r\n        fetchData(1, view); // 초기 데이터를 가져옵니다.\r\n    }, [view, areaCode, sigunguCode]);\r\n\r\n    useEffect(() => {\r\n        if (page > 1) {\r\n            fetchData(page, view); // 페이지가 변경될 때만 더 많은 데이터를 가져옵니다.\r\n        }\r\n    }, [page]);\r\n\r\n    const loadMore = () => {\r\n        setPage(prevPage => prevPage + 1);\r\n    };\r\n\r\n\r\n    return (\r\n        <div>\r\n            {/*RecommendedPlaces에 값 전달*/}\r\n            <RecommendedPlaces data={data} />\r\n            <div className=\"load-more-container\">\r\n                <button onClick={loadMore} disabled={loading}>\r\n                    {loading ? '로딩 중...' : '더보기'}\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ListContainer;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}