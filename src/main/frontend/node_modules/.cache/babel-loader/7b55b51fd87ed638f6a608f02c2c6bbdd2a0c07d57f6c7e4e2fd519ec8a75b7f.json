{"ast":null,"code":"import React,{useState}from'react';import{useLocation}from'react-router-dom';import TrainCode from'./TrainCode';import LocationBasedList from'./LocationBasedList';import TrainList from'./TrainList';import DummyLocationBasedList from'./DummyLocationBasedList';import RecommendedPlaces from'./RecommendedPlaces';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const TravelDetails=()=>{const location=useLocation();const params=new URLSearchParams(location.search);const startDate=params.get('startDate');const endDate=params.get('endDate');let departure=params.get('departure');let destination=params.get('destination');let destination2=params.get('destination');const regionMapping={\"서울\":\"1\",\"인천\":\"2\",\"대전\":\"3\",\"대구\":\"4\",\"광주\":\"5\",\"부산\":\"6\",\"울산\":\"7\",\"세종\":\"8\",\"경기도\":\"31\",\"강원도\":\"32\",\"충청북도\":\"33\",\"충청남도\":\"34\",\"경상북도\":\"35\",\"경상남도\":\"36\",\"전라북도\":\"37\",\"전라남도\":\"38\",\"제주도\":\"39\"};const[selectedTrains,setSelectedTrains]=useState([]);const[selectedItems,setSelectedItems]=useState({attractions:[],hotels:[],restaurants:[]});const departureCodes=TrainCode[departure]||[];const destinationCodes=TrainCode[destination]||[];// destination 값을 rnum 값으로 변환\nif(regionMapping[destination2]){destination2=regionMapping[destination2];}return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Travel Details\"}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Departure:\"}),\" \",departure]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Destination:\"}),\" \",destination]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Start Date:\"}),\" \",startDate]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"End Date:\"}),\" \",endDate]}),/*#__PURE__*/_jsx(LocationBasedList,{destination:destination}),/*#__PURE__*/_jsx(DummyLocationBasedList,{destination2:destination2}),departureCodes.length>0&&destinationCodes.length>0&&/*#__PURE__*/_jsx(TrainList,{depPlaceId:departureCodes,arrPlaceId:destinationCodes,startDate:startDate,selectedTrains:selectedTrains,setSelectedTrains:setSelectedTrains}),/*#__PURE__*/_jsx(\"h1\",{children:\"Selected Train\"}),/*#__PURE__*/_jsx(\"div\",{className:\"selected-items\",children:selectedTrains.map(train=>/*#__PURE__*/_jsxs(\"div\",{className:\"card\",children:[/*#__PURE__*/_jsxs(\"p\",{children:[train.traingradename,\" / \\uCD9C\\uBC1C: \",train.depplacename,\"\\uC5ED \",train.depplandtime,\" / \\uB3C4\\uCC29: \",train.arrplacename,\"\\uC5ED \",train.arrplandtime,\" / \\uC694\\uAE08: \",train.adultcharge,\"\\uC6D0 / \\uC5F4\\uCC28\\uBC88\\uD638: \",train.trainno]}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>setSelectedTrains(selectedTrains.filter(t=>t.trainno!==train.trainno)),children:\"\\uC0AD\\uC81C\"})]},train.uniqueId))})]});};export default TravelDetails;","map":{"version":3,"names":["React","useState","useLocation","TrainCode","LocationBasedList","TrainList","DummyLocationBasedList","RecommendedPlaces","jsx","_jsx","jsxs","_jsxs","TravelDetails","location","params","URLSearchParams","search","startDate","get","endDate","departure","destination","destination2","regionMapping","selectedTrains","setSelectedTrains","selectedItems","setSelectedItems","attractions","hotels","restaurants","departureCodes","destinationCodes","children","length","depPlaceId","arrPlaceId","className","map","train","traingradename","depplacename","depplandtime","arrplacename","arrplandtime","adultcharge","trainno","onClick","filter","t","uniqueId"],"sources":["C:/Users/cy/Documents/GitHub/YourPlanner/src/main/frontend/src/components/js/TravelDetails.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\nimport TrainCode from './TrainCode';\r\nimport LocationBasedList from './LocationBasedList';\r\nimport TrainList from './TrainList';\r\nimport DummyLocationBasedList from './DummyLocationBasedList';\r\nimport RecommendedPlaces from './RecommendedPlaces';\r\n\r\nconst TravelDetails = () => {\r\n  const location = useLocation();\r\n  const params = new URLSearchParams(location.search);\r\n  const startDate = params.get('startDate');\r\n  const endDate = params.get('endDate');\r\n  let departure = params.get('departure');\r\n  let destination = params.get('destination');\r\n  let destination2 = params.get('destination');\r\n\r\n  const regionMapping = {\r\n    \"서울\": \"1\",\r\n    \"인천\": \"2\",\r\n    \"대전\": \"3\",\r\n    \"대구\": \"4\",\r\n    \"광주\": \"5\",\r\n    \"부산\": \"6\",\r\n    \"울산\": \"7\",\r\n    \"세종\": \"8\",\r\n    \"경기도\": \"31\",\r\n    \"강원도\": \"32\",\r\n    \"충청북도\": \"33\",\r\n    \"충청남도\": \"34\",\r\n    \"경상북도\": \"35\",\r\n    \"경상남도\": \"36\",\r\n    \"전라북도\": \"37\",\r\n    \"전라남도\": \"38\",\r\n    \"제주도\": \"39\"\r\n  };\r\n\r\n  const [selectedTrains, setSelectedTrains] = useState([]);\r\n  const [selectedItems, setSelectedItems] = useState({\r\n    attractions: [],\r\n    hotels: [],\r\n    restaurants: [],\r\n  });\r\n\r\n  const departureCodes = TrainCode[departure] || [];\r\n  const destinationCodes = TrainCode[destination] || [];\r\n\r\n  // destination 값을 rnum 값으로 변환\r\n  if (regionMapping[destination2]) {\r\n    destination2 = regionMapping[destination2];\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2>Travel Details</h2>\r\n      <p><strong>Departure:</strong> {departure}</p>\r\n      <p><strong>Destination:</strong> {destination}</p>\r\n      <p><strong>Start Date:</strong> {startDate}</p>\r\n      <p><strong>End Date:</strong> {endDate}</p>\r\n\r\n      <LocationBasedList destination={destination} />\r\n      <DummyLocationBasedList destination2={destination2} />\r\n\r\n      {departureCodes.length > 0 && destinationCodes.length > 0 && (\r\n        <TrainList\r\n          depPlaceId={departureCodes}\r\n          arrPlaceId={destinationCodes}\r\n          startDate={startDate}\r\n          selectedTrains={selectedTrains}\r\n          setSelectedTrains={setSelectedTrains}\r\n        />\r\n      )}\r\n\r\n      <h1>Selected Train</h1>\r\n      <div className=\"selected-items\">\r\n        {selectedTrains.map((train) => (\r\n          <div key={train.uniqueId} className=\"card\">\r\n            <p>{train.traingradename} / 출발: {train.depplacename}역 {train.depplandtime} / 도착: {train.arrplacename}역 {train.arrplandtime} / 요금: {train.adultcharge}원 / 열차번호: {train.trainno}</p>\r\n            <button onClick={() => setSelectedTrains(selectedTrains.filter(t => t.trainno !== train.trainno))}>삭제</button>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TravelDetails;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}