{"ast":null,"code":"var _jsxFileName = \"D:\\\\hello-spring\\\\YourPlanner\\\\src\\\\main\\\\frontend\\\\src\\\\components\\\\js\\\\SavePlanInfo.jsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SaveTourInfo = ({\n  startDate,\n  endDate,\n  departure,\n  destination,\n  selectedItems\n}) => {\n  const handleClick = () => {\n    console.log('Selected Items:', selectedItems);\n    console.log('Start Date:', startDate);\n    console.log('End Date:', endDate);\n    console.log('Departure:', departure);\n    console.log('Destination:', destination);\n\n    /* 컨트롤러로 api값 전송 */\n    fetch('/api/savePlan', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        startDate: startDate,\n        endDate: endDate,\n        departure: departure,\n        destination: destination,\n        selectedItems: selectedItems\n      })\n    }).then(response => {\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      return response.json();\n    }).then(data => {\n      console.log(data); // 서버에서 받은 응답을 콘솔에 출력\n    }).catch(error => {\n      console.error('Error sending selected items to backend:', error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleClick,\n      children: \"\\uC800\\uC7A5\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n};\n_c = SaveTourInfo;\nexport default SaveTourInfo;\nvar _c;\n$RefreshReg$(_c, \"SaveTourInfo\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","SaveTourInfo","startDate","endDate","departure","destination","selectedItems","handleClick","console","log","fetch","method","headers","body","JSON","stringify","then","response","ok","Error","json","data","catch","error","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/hello-spring/YourPlanner/src/main/frontend/src/components/js/SavePlanInfo.jsx"],"sourcesContent":["import React from 'react';\r\n\r\nconst SaveTourInfo = ({ startDate, endDate, departure, destination, selectedItems }) => {\r\n\r\n    const handleClick = () => {\r\n        console.log('Selected Items:', selectedItems);\r\n        console.log('Start Date:', startDate);\r\n        console.log('End Date:', endDate);\r\n        console.log('Departure:', departure);\r\n        console.log('Destination:', destination);\r\n\r\n        /* 컨트롤러로 api값 전송 */\r\n        fetch('/api/savePlan', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                startDate: startDate,\r\n                endDate: endDate,\r\n                departure: departure,\r\n                destination: destination,\r\n                selectedItems: selectedItems\r\n            })\r\n\r\n        })\r\n            .then(response => {\r\n                if (!response.ok) {\r\n                    throw new Error('Network response was not ok');\r\n                }\r\n                return response.json();\r\n            })\r\n            .then(data => {\r\n                console.log(data); // 서버에서 받은 응답을 콘솔에 출력\r\n            })\r\n            .catch(error => {\r\n                console.error('Error sending selected items to backend:', error);\r\n            });\r\n    };\r\n\r\n    return(\r\n        <div>\r\n            <button onClick={handleClick}>저장</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SaveTourInfo;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,YAAY,GAAGA,CAAC;EAAEC,SAAS;EAAEC,OAAO;EAAEC,SAAS;EAAEC,WAAW;EAAEC;AAAc,CAAC,KAAK;EAEpF,MAAMC,WAAW,GAAGA,CAAA,KAAM;IACtBC,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEH,aAAa,CAAC;IAC7CE,OAAO,CAACC,GAAG,CAAC,aAAa,EAAEP,SAAS,CAAC;IACrCM,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEN,OAAO,CAAC;IACjCK,OAAO,CAACC,GAAG,CAAC,YAAY,EAAEL,SAAS,CAAC;IACpCI,OAAO,CAACC,GAAG,CAAC,cAAc,EAAEJ,WAAW,CAAC;;IAExC;IACAK,KAAK,CAAC,eAAe,EAAE;MACnBC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACjBb,SAAS,EAAEA,SAAS;QACpBC,OAAO,EAAEA,OAAO;QAChBC,SAAS,EAAEA,SAAS;QACpBC,WAAW,EAAEA,WAAW;QACxBC,aAAa,EAAEA;MACnB,CAAC;IAEL,CAAC,CAAC,CACGU,IAAI,CAACC,QAAQ,IAAI;MACd,IAAI,CAACA,QAAQ,CAACC,EAAE,EAAE;QACd,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;MAClD;MACA,OAAOF,QAAQ,CAACG,IAAI,CAAC,CAAC;IAC1B,CAAC,CAAC,CACDJ,IAAI,CAACK,IAAI,IAAI;MACVb,OAAO,CAACC,GAAG,CAACY,IAAI,CAAC,CAAC,CAAC;IACvB,CAAC,CAAC,CACDC,KAAK,CAACC,KAAK,IAAI;MACZf,OAAO,CAACe,KAAK,CAAC,0CAA0C,EAAEA,KAAK,CAAC;IACpE,CAAC,CAAC;EACV,CAAC;EAED,oBACIvB,OAAA;IAAAwB,QAAA,eACIxB,OAAA;MAAQyB,OAAO,EAAElB,WAAY;MAAAiB,QAAA,EAAC;IAAE;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxC,CAAC;AAEd,CAAC;AAAAC,EAAA,GA3CK7B,YAAY;AA6ClB,eAAeA,YAAY;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}