{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\cy\\\\Documents\\\\GitHub\\\\YourPlanner\\\\src\\\\main\\\\frontend\\\\src\\\\components\\\\js\\\\TravelDetails.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport TrainCode from './TrainCode';\nimport LocationBasedList from './LocationBasedList';\nimport TrainList from './TrainList';\nimport DummyLocationBasedList from './DummyLocationBasedList';\nimport RecommendedPlaces from './RecommendedPlaces';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TravelDetails = () => {\n  _s();\n  const location = useLocation();\n  const params = new URLSearchParams(location.search);\n  const startDate = params.get('startDate');\n  const endDate = params.get('endDate');\n  let departure = params.get('departure');\n  let destination = params.get('destination');\n  let destination2 = params.get('destination');\n  const regionMapping = {\n    \"서울\": \"1\",\n    \"인천\": \"2\",\n    \"대전\": \"3\",\n    \"대구\": \"4\",\n    \"광주\": \"5\",\n    \"부산\": \"6\",\n    \"울산\": \"7\",\n    \"세종\": \"8\",\n    \"경기도\": \"31\",\n    \"강원도\": \"32\",\n    \"충청북도\": \"33\",\n    \"충청남도\": \"34\",\n    \"경상북도\": \"35\",\n    \"경상남도\": \"36\",\n    \"전라북도\": \"37\",\n    \"전라남도\": \"38\",\n    \"제주도\": \"39\"\n  };\n  const [selectedTrains, setSelectedTrains] = useState([]);\n  const [selectedItems, setSelectedItems] = useState({\n    attractions: [],\n    hotels: [],\n    restaurants: []\n  });\n  const departureCodes = TrainCode[departure] || [];\n  const destinationCodes = TrainCode[destination] || [];\n\n  // destination 값을 rnum 값으로 변환\n  if (regionMapping[destination2]) {\n    destination2 = regionMapping[destination2];\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Travel Details\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Departure:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 10\n      }, this), \" \", departure]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Destination:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 10\n      }, this), \" \", destination]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Start Date:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 10\n      }, this), \" \", startDate]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"End Date:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 10\n      }, this), \" \", endDate]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(LocationBasedList, {\n      destination: destination\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DummyLocationBasedList, {\n      destination2: destination2\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), departureCodes.length > 0 && destinationCodes.length > 0 && /*#__PURE__*/_jsxDEV(TrainList, {\n      depPlaceId: departureCodes,\n      arrPlaceId: destinationCodes,\n      startDate: startDate,\n      selectedTrains: selectedTrains,\n      setSelectedTrains: setSelectedTrains\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\uC120\\uD0DD\\uB41C \\uC5F4\\uCC28 \\uBAA9\\uB85D\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"selected-items\",\n      children: selectedTrains.map(train => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [train.traingradename, \" / \\uCD9C\\uBC1C: \", train.depplacename, \"\\uC5ED \", train.depplandtime, \" / \\uB3C4\\uCC29: \", train.arrplacename, \"\\uC5ED \", train.arrplandtime, \" / \\uC694\\uAE08: \", train.adultcharge, \"\\uC6D0 / \\uC5F4\\uCC28\\uBC88\\uD638: \", train.trainno]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setSelectedTrains(selectedTrains.filter(t => t.trainno !== train.trainno)),\n          children: \"\\uC0AD\\uC81C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this)]\n      }, train.uniqueId, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n_s(TravelDetails, \"nFolCpx9iSPBcZXANL7IhARufZQ=\", false, function () {\n  return [useLocation];\n});\n_c = TravelDetails;\nexport default TravelDetails;\nvar _c;\n$RefreshReg$(_c, \"TravelDetails\");","map":{"version":3,"names":["React","useState","useLocation","TrainCode","LocationBasedList","TrainList","DummyLocationBasedList","RecommendedPlaces","jsxDEV","_jsxDEV","TravelDetails","_s","location","params","URLSearchParams","search","startDate","get","endDate","departure","destination","destination2","regionMapping","selectedTrains","setSelectedTrains","selectedItems","setSelectedItems","attractions","hotels","restaurants","departureCodes","destinationCodes","children","fileName","_jsxFileName","lineNumber","columnNumber","length","depPlaceId","arrPlaceId","className","map","train","traingradename","depplacename","depplandtime","arrplacename","arrplandtime","adultcharge","trainno","onClick","filter","t","uniqueId","_c","$RefreshReg$"],"sources":["C:/Users/cy/Documents/GitHub/YourPlanner/src/main/frontend/src/components/js/TravelDetails.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\nimport TrainCode from './TrainCode';\r\nimport LocationBasedList from './LocationBasedList';\r\nimport TrainList from './TrainList';\r\nimport DummyLocationBasedList from './DummyLocationBasedList';\r\nimport RecommendedPlaces from './RecommendedPlaces';\r\n\r\nconst TravelDetails = () => {\r\n  const location = useLocation();\r\n  const params = new URLSearchParams(location.search);\r\n  const startDate = params.get('startDate');\r\n  const endDate = params.get('endDate');\r\n  let departure = params.get('departure');\r\n  let destination = params.get('destination');\r\n  let destination2 = params.get('destination');\r\n\r\n  const regionMapping = {\r\n    \"서울\": \"1\",\r\n    \"인천\": \"2\",\r\n    \"대전\": \"3\",\r\n    \"대구\": \"4\",\r\n    \"광주\": \"5\",\r\n    \"부산\": \"6\",\r\n    \"울산\": \"7\",\r\n    \"세종\": \"8\",\r\n    \"경기도\": \"31\",\r\n    \"강원도\": \"32\",\r\n    \"충청북도\": \"33\",\r\n    \"충청남도\": \"34\",\r\n    \"경상북도\": \"35\",\r\n    \"경상남도\": \"36\",\r\n    \"전라북도\": \"37\",\r\n    \"전라남도\": \"38\",\r\n    \"제주도\": \"39\"\r\n  };\r\n\r\n  const [selectedTrains, setSelectedTrains] = useState([]);\r\n  const [selectedItems, setSelectedItems] = useState({\r\n    attractions: [],\r\n    hotels: [],\r\n    restaurants: [],\r\n  });\r\n\r\n  const departureCodes = TrainCode[departure] || [];\r\n  const destinationCodes = TrainCode[destination] || [];\r\n\r\n  // destination 값을 rnum 값으로 변환\r\n  if (regionMapping[destination2]) {\r\n    destination2 = regionMapping[destination2];\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2>Travel Details</h2>\r\n      <p><strong>Departure:</strong> {departure}</p>\r\n      <p><strong>Destination:</strong> {destination}</p>\r\n      <p><strong>Start Date:</strong> {startDate}</p>\r\n      <p><strong>End Date:</strong> {endDate}</p>\r\n\r\n      <LocationBasedList destination={destination} />\r\n      <DummyLocationBasedList destination2={destination2} />\r\n\r\n      {departureCodes.length > 0 && destinationCodes.length > 0 && (\r\n        <TrainList\r\n          depPlaceId={departureCodes}\r\n          arrPlaceId={destinationCodes}\r\n          startDate={startDate}\r\n          selectedTrains={selectedTrains}\r\n          setSelectedTrains={setSelectedTrains}\r\n        />\r\n      )}\r\n\r\n      <h1>선택된 열차 목록</h1>\r\n      <div className=\"selected-items\">\r\n        {selectedTrains.map((train) => (\r\n          <div key={train.uniqueId} className=\"card\">\r\n            <p>{train.traingradename} / 출발: {train.depplacename}역 {train.depplandtime} / 도착: {train.arrplacename}역 {train.arrplandtime} / 요금: {train.adultcharge}원 / 열차번호: {train.trainno}</p>\r\n            <button onClick={() => setSelectedTrains(selectedTrains.filter(t => t.trainno !== train.trainno))}>삭제</button>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TravelDetails;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}