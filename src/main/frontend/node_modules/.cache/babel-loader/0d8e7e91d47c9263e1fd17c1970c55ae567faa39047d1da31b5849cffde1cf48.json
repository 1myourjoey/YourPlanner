{"ast":null,"code":"import React,{useState,useEffect}from'react';import axios from'axios';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const formatDate=datetime=>{if(typeof datetime!=='string'){datetime=datetime.toString();}const year=datetime.substring(0,4);const month=datetime.substring(4,6);const day=datetime.substring(6,8);const hour=datetime.substring(8,10);const minute=datetime.substring(10,12);return\"\".concat(month,\"\\uC6D4\").concat(day,\"\\uC77C \").concat(hour,\"\\uC2DC\").concat(minute,\"\\uBD84\");};const TrainList=_ref=>{let{depPlaceId,arrPlaceId,startDate}=_ref;const[trainData,setTrainData]=useState([]);const[loading,setLoading]=useState(false);const[error,setError]=useState(null);useEffect(()=>{const fetchTrainData=async()=>{try{var _response$data$respon,_response$data$respon2,_response$data$respon3;setLoading(true);const serviceKey='LOr7zB0jDV+lQ6WGnVGCY+vG22rkxdPRMM36e7spCgFeKjRlh488A09FtjZbwnw6bEMMW3Virexop2ihnhIe7g==';const formattedDate=startDate.replace(/-/g,'');console.log('Formatted Date:',formattedDate);console.log('depPlaceId:',depPlaceId);console.log('arrPlaceId:',arrPlaceId);const response=await axios.get('http://apis.data.go.kr/1613000/TrainInfoService/getStrtpntAlocFndTrainInfo',{params:{serviceKey,depPlaceId,arrPlaceId,depPlandTime:formattedDate,_type:'json',trainGradeCode:'00'// 예: 모든 차량 종류 포함\n}});console.log('API Response:',response.data);// 응답 데이터 확인\nconsole.log('Response Header:',response.data.response.header);// 응답 헤더 확인\nconsole.log('Response Body:',response.data.response.body);// 응답 본문 확인\nconst items=(_response$data$respon=response.data.response)===null||_response$data$respon===void 0?void 0:(_response$data$respon2=_response$data$respon.body)===null||_response$data$respon2===void 0?void 0:(_response$data$respon3=_response$data$respon2.items)===null||_response$data$respon3===void 0?void 0:_response$data$respon3.item;if(items&&Array.isArray(items)){const extractedData=items.map(item=>({traingradename:item.traingradename,depplandtime:item.depplandtime,arrplandtime:item.arrplandtime,depplacename:item.depplacename,arrplacename:item.arrplacename,adultcharge:item.adultcharge,trainno:item.trainno}));setTrainData(extractedData);}else if(items){const extractedData=[{traingradename:items.traingradename,depplandtime:items.depplandtime,arrplandtime:items.arrplandtime,depplacename:items.depplacename,arrplacename:items.arrplacename,adultcharge:items.adultcharge,trainno:items.trainno}];setTrainData(extractedData);}else{setTrainData([]);}}catch(error){console.error('Error fetching data:',error);setError(error);}finally{setLoading(false);}};if(depPlaceId&&arrPlaceId&&startDate){fetchTrainData();}},[depPlaceId,arrPlaceId,startDate]);if(loading){return/*#__PURE__*/_jsx(\"div\",{children:\"\\uB85C\\uB529 \\uC911...\"});}if(error){return/*#__PURE__*/_jsxs(\"div\",{children:[\"\\uB370\\uC774\\uD130\\uB97C \\uBD88\\uB7EC\\uC624\\uB294 \\uC911 \\uC624\\uB958\\uAC00 \\uBC1C\\uC0DD\\uD588\\uC2B5\\uB2C8\\uB2E4: \",error.message]});}return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"ul\",{children:trainData.map((train,index)=>/*#__PURE__*/_jsx(\"li\",{children:/*#__PURE__*/_jsxs(\"p\",{children:[train.traingradename,\" / \\uCD9C\\uBC1C: \",train.depplacename,\"\\uC5ED \",formatDate(train.depplandtime),\" / \\uB3C4\\uCC29: \",train.arrplacename,\"\\uC5ED \",formatDate(train.arrplandtime),\" / \\uC694\\uAE08: \",train.adultcharge,\"\\uC6D0 / \\uC5F4\\uCC28\\uBC88\\uD638: \",train.trainno]})},train.trainno||index))})});};export default TrainList;","map":{"version":3,"names":["React","useState","useEffect","axios","jsx","_jsx","jsxs","_jsxs","formatDate","datetime","toString","year","substring","month","day","hour","minute","concat","TrainList","_ref","depPlaceId","arrPlaceId","startDate","trainData","setTrainData","loading","setLoading","error","setError","fetchTrainData","_response$data$respon","_response$data$respon2","_response$data$respon3","serviceKey","formattedDate","replace","console","log","response","get","params","depPlandTime","_type","trainGradeCode","data","header","body","items","item","Array","isArray","extractedData","map","traingradename","depplandtime","arrplandtime","depplacename","arrplacename","adultcharge","trainno","children","message","train","index"],"sources":["C:/Users/윤기섭/Documents/GitHub/YourPlanner/src/main/frontend/src/components/js/TrainList.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst formatDate = (datetime) => {\r\n  if (typeof datetime !== 'string') {\r\n    datetime = datetime.toString();\r\n  }\r\n  const year = datetime.substring(0, 4);\r\n  const month = datetime.substring(4, 6);\r\n  const day = datetime.substring(6, 8);\r\n  const hour = datetime.substring(8, 10);\r\n  const minute = datetime.substring(10, 12);\r\n\r\n  return `${month}월${day}일 ${hour}시${minute}분`;\r\n};\r\n\r\nconst TrainList = ({ depPlaceId, arrPlaceId, startDate }) => {\r\n  const [trainData, setTrainData] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchTrainData = async () => {\r\n      try {\r\n        setLoading(true);\r\n        const serviceKey = 'LOr7zB0jDV+lQ6WGnVGCY+vG22rkxdPRMM36e7spCgFeKjRlh488A09FtjZbwnw6bEMMW3Virexop2ihnhIe7g==';\r\n        const formattedDate = startDate.replace(/-/g, '');\r\n        console.log('Formatted Date:', formattedDate);\r\n        console.log('depPlaceId:', depPlaceId);\r\n        console.log('arrPlaceId:', arrPlaceId);\r\n\r\n        const response = await axios.get('http://apis.data.go.kr/1613000/TrainInfoService/getStrtpntAlocFndTrainInfo', {\r\n          params: {\r\n            serviceKey,\r\n            depPlaceId,\r\n            arrPlaceId,\r\n            depPlandTime: formattedDate,\r\n            _type: 'json',\r\n            trainGradeCode: '00' // 예: 모든 차량 종류 포함\r\n          }\r\n        });\r\n\r\n        console.log('API Response:', response.data); // 응답 데이터 확인\r\n        console.log('Response Header:', response.data.response.header); // 응답 헤더 확인\r\n        console.log('Response Body:', response.data.response.body); // 응답 본문 확인\r\n\r\n        const items = response.data.response?.body?.items?.item;\r\n\r\n        if (items && Array.isArray(items)) {\r\n          const extractedData = items.map(item => ({\r\n            traingradename: item.traingradename,\r\n            depplandtime: item.depplandtime,\r\n            arrplandtime: item.arrplandtime,\r\n            depplacename: item.depplacename,\r\n            arrplacename: item.arrplacename,\r\n            adultcharge: item.adultcharge,\r\n            trainno: item.trainno\r\n          }));\r\n          setTrainData(extractedData);\r\n        } else if (items) {\r\n          const extractedData = [{\r\n            traingradename: items.traingradename,\r\n            depplandtime: items.depplandtime,\r\n            arrplandtime: items.arrplandtime,\r\n            depplacename: items.depplacename,\r\n            arrplacename: items.arrplacename,\r\n            adultcharge: items.adultcharge,\r\n            trainno: items.trainno\r\n          }];\r\n          setTrainData(extractedData);\r\n        } else {\r\n          setTrainData([]);\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching data:', error);\r\n        setError(error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    if (depPlaceId && arrPlaceId && startDate) {\r\n      fetchTrainData();\r\n    }\r\n  }, [depPlaceId, arrPlaceId, startDate]);\r\n\r\n  if (loading) {\r\n    return <div>로딩 중...</div>;\r\n  }\r\n\r\n  if (error) {\r\n    return <div>데이터를 불러오는 중 오류가 발생했습니다: {error.message}</div>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <ul>\r\n        {trainData.map((train, index) => (\r\n          <li key={train.trainno || index}>\r\n            <p>{train.traingradename} / 출발: {train.depplacename}역 {formatDate(train.depplandtime)} / 도착: {train.arrplacename}역 {formatDate(train.arrplandtime)} / 요금: {train.adultcharge}원 / 열차번호: {train.trainno}</p>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TrainList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}