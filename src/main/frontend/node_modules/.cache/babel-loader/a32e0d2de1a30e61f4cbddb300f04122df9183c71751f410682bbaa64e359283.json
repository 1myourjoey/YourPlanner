{"ast":null,"code":"import React,{useState}from'react';import DatePicker from'react-datepicker';import'react-datepicker/dist/react-datepicker.css';import{useNavigate}from'react-router-dom';import MapSvg from\"./MapSvg\";// 날짜를 'yyyy-MM-dd' 형식으로 변환하는 함수\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const formatDate=date=>{const year=date.getFullYear();const month=String(date.getMonth()+1).padStart(2,'0');const day=String(date.getDate()).padStart(2,'0');return\"\".concat(year,\"-\").concat(month,\"-\").concat(day);};const TravelDate=()=>{const[startDate,setStartDate]=useState(null);const[endDate,setEndDate]=useState(null);const[destination,setDestination]=useState('');const navigate=useNavigate();const handleTravel=()=>{const formattedStartDate=startDate?formatDate(startDate):'';const formattedEndDate=endDate?formatDate(endDate):'';const params=new URLSearchParams({startDate:formattedStartDate,endDate:formattedEndDate,destination});navigate(\"/details?\".concat(params.toString()));};return/*#__PURE__*/_jsxs(\"div\",{className:\"form\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"startDate\",children:\"Start Date:\"}),/*#__PURE__*/_jsx(DatePicker,{id:\"startDate\",selected:startDate,onChange:date=>setStartDate(date),dateFormat:\"yyyy-MM-dd\"}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"endDate\",children:\"End Date:\"}),/*#__PURE__*/_jsx(DatePicker,{id:\"endDate\",selected:endDate,onChange:date=>setEndDate(date),dateFormat:\"yyyy-MM-dd\"}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"destination\",children:\"Destination:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"destination\",value:destination,onChange:e=>setDestination(e.target.value)}),/*#__PURE__*/_jsx(\"button\",{onClick:handleTravel,children:\"\\uC5EC\\uD589\\uD558\\uAE30\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"map-container\",children:[/*#__PURE__*/_jsx(\"p\",{children:\"\\uC9C0\\uB3C4\\uC5D0\\uC11C \\uC9C0\\uC5ED\\uC744 \\uC120\\uD0DD\\uD574\\uBCF4\\uC138\\uC694 !\"}),/*#__PURE__*/_jsx(MapSvg,{onCityClick:setDestination})]})]});};export default TravelDate;","map":{"version":3,"names":["React","useState","DatePicker","useNavigate","MapSvg","jsx","_jsx","jsxs","_jsxs","formatDate","date","year","getFullYear","month","String","getMonth","padStart","day","getDate","concat","TravelDate","startDate","setStartDate","endDate","setEndDate","destination","setDestination","navigate","handleTravel","formattedStartDate","formattedEndDate","params","URLSearchParams","toString","className","children","htmlFor","id","selected","onChange","dateFormat","type","value","e","target","onClick","onCityClick"],"sources":["C:/Users/admin/Documents/GitHub/YourPlanner/src/main/frontend/src/components/js/TravelDate.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport DatePicker from 'react-datepicker';\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport MapSvg from \"./MapSvg\";\r\n\r\n// 날짜를 'yyyy-MM-dd' 형식으로 변환하는 함수\r\nconst formatDate = (date) => {\r\n    const year = date.getFullYear();\r\n    const month = String(date.getMonth() + 1).padStart(2, '0');\r\n    const day = String(date.getDate()).padStart(2, '0');\r\n    return `${year}-${month}-${day}`;\r\n};\r\n\r\nconst TravelDate = () => {\r\n    const [startDate, setStartDate] = useState(null);\r\n    const [endDate, setEndDate] = useState(null);\r\n    const [destination, setDestination] = useState('');\r\n    const navigate = useNavigate();\r\n\r\n    const handleTravel = () => {\r\n        const formattedStartDate = startDate ? formatDate(startDate) : '';\r\n        const formattedEndDate = endDate ? formatDate(endDate) : '';\r\n        const params = new URLSearchParams({\r\n            startDate: formattedStartDate,\r\n            endDate: formattedEndDate,\r\n            destination\r\n        });\r\n        navigate(`/details?${params.toString()}`);\r\n    };\r\n\r\n    return (\r\n        <div className=\"form\">\r\n            <label htmlFor=\"startDate\">Start Date:</label>\r\n            <DatePicker\r\n                id=\"startDate\"\r\n                selected={startDate}\r\n                onChange={date => setStartDate(date)}\r\n                dateFormat=\"yyyy-MM-dd\"\r\n            />\r\n            <label htmlFor=\"endDate\">End Date:</label>\r\n            <DatePicker\r\n                id=\"endDate\"\r\n                selected={endDate}\r\n                onChange={date => setEndDate(date)}\r\n                dateFormat=\"yyyy-MM-dd\"\r\n            />\r\n            <label htmlFor=\"destination\">Destination:</label>\r\n            <input\r\n                type=\"text\"\r\n                id=\"destination\"\r\n                value={destination}\r\n                onChange={e => setDestination(e.target.value)}\r\n            />\r\n            <button onClick={handleTravel}>여행하기</button>\r\n            <div className=\"map-container\">\r\n                <p>지도에서 지역을 선택해보세요 !</p>\r\n                <MapSvg onCityClick={setDestination} />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TravelDate;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}