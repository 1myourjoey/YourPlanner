{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\Documents\\\\GitHub\\\\YourPlanner\\\\src\\\\main\\\\frontend\\\\src\\\\components\\\\js\\\\ListContainer.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport DummyListRestaurant from \"./DummyListRestaurant\";\nimport ListComponent from \"./ListComponent\";\nimport DummyListHotel from \"./DummyListHotel\";\nimport RecommendedPlaces from \"./RecommendedPlaces\";\nimport LoadMoreButton from './LoadMoreButton';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ListContainer = ({\n  areaCode,\n  sigunguCode,\n  view\n}) => {\n  _s();\n  const [data, setData] = useState([]);\n  const [page, setPage] = useState(1);\n  const [loading, setLoading] = useState(false);\n  const [selectedItems, setSelectedItems] = useState({\n    attractions: [],\n    hotels: [],\n    restaurants: []\n  });\n  const fetchData = async (pageNumber, type) => {\n    try {\n      setLoading(true);\n      let url;\n      switch (type) {\n        case 'attractions':\n          url = `http://apis.data.go.kr/B551011/KorService1/areaBasedList1?serviceKey=5uJ1mFn4tOfEwReTW3dupjd4w2n5kEHO5nciT%2BDVGAVWTl90sysBKbMTIlIxLW5lCPo1VmpZ%2FXggxU84GhG81g%3D%3D&pageNo=${pageNumber}&numOfRows=10&MobileApp=AppTest&MobileOS=ETC&arrange=A&areaCode=${areaCode}&sigunguCode=${sigunguCode}`;\n          break;\n        case 'hotels':\n          url = `http://apis.data.go.kr/B551011/KorService1/areaBasedList1?serviceKey=5uJ1mFn4tOfEwReTW3dupjd4w2n5kEHO5nciT%2BDVGAVWTl90sysBKbMTIlIxLW5lCPo1VmpZ%2FXggxU84GhG81g%3D%3D&pageNo=${pageNumber}&numOfRows=10&MobileApp=AppTest&MobileOS=ETC&arrange=B&areaCode=${areaCode}&sigunguCode=${sigunguCode}&contentTypeId=32`;\n          break;\n        case 'restaurant':\n          url = `http://apis.data.go.kr/B551011/KorService1/areaBasedList1?serviceKey=5V%2BytDDcz11Mfxc3tREUmoX6wOvDmA3oIaBkQfhB%2Bo%2B4vBWem3h6eQhKVvJuiJvpVonGtnuRqU6A83YSSBAh8A%3D%3D&pageNo=${pageNumber}&numOfRows=10&MobileApp=AppTest&MobileOS=ETC&arrange=A&areaCode=${areaCode}&sigunguCode=${sigunguCode}&contentTypeId=39`;\n          break;\n        default:\n          return;\n      }\n      const response = await fetch(url);\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      const responseData = await response.text();\n      const parser = new DOMParser();\n      const xmlData = parser.parseFromString(responseData, 'text/xml');\n      const items = xmlData.getElementsByTagName('item');\n      const extractedData = Array.from(items).map(item => {\n        var _item$getElementsByTa;\n        return {\n          contentid: item.getElementsByTagName('contentid')[0].textContent,\n          title: item.getElementsByTagName('title')[0].textContent,\n          addr1: item.getElementsByTagName('addr1')[0].textContent,\n          contenttypeid: item.getElementsByTagName('contenttypeid')[0].textContent,\n          firstimage2: ((_item$getElementsByTa = item.getElementsByTagName('firstimage2')[0]) === null || _item$getElementsByTa === void 0 ? void 0 : _item$getElementsByTa.textContent) || ''\n        };\n      });\n      setData(prevData => {\n        const newData = [...prevData, ...extractedData];\n        const uniqueData = Array.from(new Set(newData.map(item => item.contentid))).map(id => newData.find(item => item.contentid === id));\n        return uniqueData;\n      });\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    setData([]); // View가 변경될 때마다 데이터를 초기화합니다.\n    setPage(1);\n    fetchData(1, view); // 초기 데이터를 가져옵니다.\n  }, [view, areaCode, sigunguCode]);\n  useEffect(() => {\n    if (page > 1) {\n      fetchData(page, view); // 페이지가 변경될 때만 더 많은 데이터를 가져옵니다.\n    }\n  }, [page]);\n  const loadMore = () => {\n    setPage(prevPage => prevPage + 1);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(RecommendedPlaces, {\n      data: data,\n      loadMore: loadMore,\n      loading: loading,\n      view: view,\n      selectedItems: selectedItems,\n      setSelectedItems: setSelectedItems\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 9\n  }, this);\n};\n_s(ListContainer, \"iWp3VxCHxa2Bp3EUMftm6FMpZgk=\");\n_c = ListContainer;\nexport default ListContainer;\nvar _c;\n$RefreshReg$(_c, \"ListContainer\");","map":{"version":3,"names":["React","useState","useEffect","DummyListRestaurant","ListComponent","DummyListHotel","RecommendedPlaces","LoadMoreButton","jsxDEV","_jsxDEV","ListContainer","areaCode","sigunguCode","view","_s","data","setData","page","setPage","loading","setLoading","selectedItems","setSelectedItems","attractions","hotels","restaurants","fetchData","pageNumber","type","url","response","fetch","ok","Error","responseData","text","parser","DOMParser","xmlData","parseFromString","items","getElementsByTagName","extractedData","Array","from","map","item","_item$getElementsByTa","contentid","textContent","title","addr1","contenttypeid","firstimage2","prevData","newData","uniqueData","Set","id","find","error","console","loadMore","prevPage","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/admin/Documents/GitHub/YourPlanner/src/main/frontend/src/components/js/ListContainer.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport DummyListRestaurant from \"./DummyListRestaurant\";\r\nimport ListComponent from \"./ListComponent\";\r\nimport DummyListHotel from \"./DummyListHotel\";\r\nimport RecommendedPlaces from \"./RecommendedPlaces\";\r\nimport LoadMoreButton from './LoadMoreButton';\r\n\r\nconst ListContainer = ({ areaCode, sigunguCode, view }) => {\r\n    const [data, setData] = useState([]);\r\n    const [page, setPage] = useState(1);\r\n    const [loading, setLoading] = useState(false);\r\n    const [selectedItems, setSelectedItems] = useState({\r\n        attractions: [],\r\n        hotels: [],\r\n        restaurants: []\r\n    });\r\n\r\n    const fetchData = async (pageNumber, type) => {\r\n        try {\r\n            setLoading(true);\r\n            let url;\r\n            switch (type) {\r\n                case 'attractions':\r\n                    url = `http://apis.data.go.kr/B551011/KorService1/areaBasedList1?serviceKey=5uJ1mFn4tOfEwReTW3dupjd4w2n5kEHO5nciT%2BDVGAVWTl90sysBKbMTIlIxLW5lCPo1VmpZ%2FXggxU84GhG81g%3D%3D&pageNo=${pageNumber}&numOfRows=10&MobileApp=AppTest&MobileOS=ETC&arrange=A&areaCode=${areaCode}&sigunguCode=${sigunguCode}`;\r\n                    break;\r\n                case 'hotels':\r\n                    url = `http://apis.data.go.kr/B551011/KorService1/areaBasedList1?serviceKey=5uJ1mFn4tOfEwReTW3dupjd4w2n5kEHO5nciT%2BDVGAVWTl90sysBKbMTIlIxLW5lCPo1VmpZ%2FXggxU84GhG81g%3D%3D&pageNo=${pageNumber}&numOfRows=10&MobileApp=AppTest&MobileOS=ETC&arrange=B&areaCode=${areaCode}&sigunguCode=${sigunguCode}&contentTypeId=32`;\r\n                    break;\r\n                case 'restaurant':\r\n                    url = `http://apis.data.go.kr/B551011/KorService1/areaBasedList1?serviceKey=5V%2BytDDcz11Mfxc3tREUmoX6wOvDmA3oIaBkQfhB%2Bo%2B4vBWem3h6eQhKVvJuiJvpVonGtnuRqU6A83YSSBAh8A%3D%3D&pageNo=${pageNumber}&numOfRows=10&MobileApp=AppTest&MobileOS=ETC&arrange=A&areaCode=${areaCode}&sigunguCode=${sigunguCode}&contentTypeId=39`;\r\n                    break;\r\n                default:\r\n                    return;\r\n            }\r\n\r\n            const response = await fetch(url);\r\n            if (!response.ok) {\r\n                throw new Error('Network response was not ok');\r\n            }\r\n            const responseData = await response.text();\r\n            const parser = new DOMParser();\r\n            const xmlData = parser.parseFromString(responseData, 'text/xml');\r\n            const items = xmlData.getElementsByTagName('item');\r\n            const extractedData = Array.from(items).map(item => ({\r\n                contentid: item.getElementsByTagName('contentid')[0].textContent,\r\n                title: item.getElementsByTagName('title')[0].textContent,\r\n                addr1: item.getElementsByTagName('addr1')[0].textContent,\r\n                contenttypeid: item.getElementsByTagName('contenttypeid')[0].textContent,\r\n                firstimage2: item.getElementsByTagName('firstimage2')[0]?.textContent || ''\r\n            }));\r\n            setData(prevData => {\r\n                const newData = [...prevData, ...extractedData];\r\n                const uniqueData = Array.from(new Set(newData.map(item => item.contentid)))\r\n                    .map(id => newData.find(item => item.contentid === id));\r\n                return uniqueData;\r\n            });\r\n        } catch (error) {\r\n            console.error('Error fetching data:', error);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        setData([]); // View가 변경될 때마다 데이터를 초기화합니다.\r\n        setPage(1);\r\n        fetchData(1, view); // 초기 데이터를 가져옵니다.\r\n    }, [view, areaCode, sigunguCode]);\r\n\r\n    useEffect(() => {\r\n        if (page > 1) {\r\n            fetchData(page, view); // 페이지가 변경될 때만 더 많은 데이터를 가져옵니다.\r\n        }\r\n    }, [page]);\r\n\r\n    const loadMore = () => {\r\n        setPage(prevPage => prevPage + 1);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <RecommendedPlaces \r\n                data={data} \r\n                loadMore={loadMore} \r\n                loading={loading} \r\n                view={view}\r\n                selectedItems={selectedItems}\r\n                setSelectedItems={setSelectedItems} \r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ListContainer;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,mBAAmB,MAAM,uBAAuB;AACvD,OAAOC,aAAa,MAAM,iBAAiB;AAC3C,OAAOC,cAAc,MAAM,kBAAkB;AAC7C,OAAOC,iBAAiB,MAAM,qBAAqB;AACnD,OAAOC,cAAc,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,MAAMC,aAAa,GAAGA,CAAC;EAAEC,QAAQ;EAAEC,WAAW;EAAEC;AAAK,CAAC,KAAK;EAAAC,EAAA;EACvD,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACgB,IAAI,EAAEC,OAAO,CAAC,GAAGjB,QAAQ,CAAC,CAAC,CAAC;EACnC,MAAM,CAACkB,OAAO,EAAEC,UAAU,CAAC,GAAGnB,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACoB,aAAa,EAAEC,gBAAgB,CAAC,GAAGrB,QAAQ,CAAC;IAC/CsB,WAAW,EAAE,EAAE;IACfC,MAAM,EAAE,EAAE;IACVC,WAAW,EAAE;EACjB,CAAC,CAAC;EAEF,MAAMC,SAAS,GAAG,MAAAA,CAAOC,UAAU,EAAEC,IAAI,KAAK;IAC1C,IAAI;MACAR,UAAU,CAAC,IAAI,CAAC;MAChB,IAAIS,GAAG;MACP,QAAQD,IAAI;QACR,KAAK,aAAa;UACdC,GAAG,GAAG,gLAAgLF,UAAU,mEAAmEhB,QAAQ,gBAAgBC,WAAW,EAAE;UACxS;QACJ,KAAK,QAAQ;UACTiB,GAAG,GAAG,gLAAgLF,UAAU,mEAAmEhB,QAAQ,gBAAgBC,WAAW,mBAAmB;UACzT;QACJ,KAAK,YAAY;UACbiB,GAAG,GAAG,kLAAkLF,UAAU,mEAAmEhB,QAAQ,gBAAgBC,WAAW,mBAAmB;UAC3T;QACJ;UACI;MACR;MAEA,MAAMkB,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAG,CAAC;MACjC,IAAI,CAACC,QAAQ,CAACE,EAAE,EAAE;QACd,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;MAClD;MACA,MAAMC,YAAY,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;MAC1C,MAAMC,MAAM,GAAG,IAAIC,SAAS,CAAC,CAAC;MAC9B,MAAMC,OAAO,GAAGF,MAAM,CAACG,eAAe,CAACL,YAAY,EAAE,UAAU,CAAC;MAChE,MAAMM,KAAK,GAAGF,OAAO,CAACG,oBAAoB,CAAC,MAAM,CAAC;MAClD,MAAMC,aAAa,GAAGC,KAAK,CAACC,IAAI,CAACJ,KAAK,CAAC,CAACK,GAAG,CAACC,IAAI;QAAA,IAAAC,qBAAA;QAAA,OAAK;UACjDC,SAAS,EAAEF,IAAI,CAACL,oBAAoB,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAACQ,WAAW;UAChEC,KAAK,EAAEJ,IAAI,CAACL,oBAAoB,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAACQ,WAAW;UACxDE,KAAK,EAAEL,IAAI,CAACL,oBAAoB,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAACQ,WAAW;UACxDG,aAAa,EAAEN,IAAI,CAACL,oBAAoB,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,CAACQ,WAAW;UACxEI,WAAW,EAAE,EAAAN,qBAAA,GAAAD,IAAI,CAACL,oBAAoB,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,cAAAM,qBAAA,uBAA3CA,qBAAA,CAA6CE,WAAW,KAAI;QAC7E,CAAC;MAAA,CAAC,CAAC;MACHjC,OAAO,CAACsC,QAAQ,IAAI;QAChB,MAAMC,OAAO,GAAG,CAAC,GAAGD,QAAQ,EAAE,GAAGZ,aAAa,CAAC;QAC/C,MAAMc,UAAU,GAAGb,KAAK,CAACC,IAAI,CAAC,IAAIa,GAAG,CAACF,OAAO,CAACV,GAAG,CAACC,IAAI,IAAIA,IAAI,CAACE,SAAS,CAAC,CAAC,CAAC,CACtEH,GAAG,CAACa,EAAE,IAAIH,OAAO,CAACI,IAAI,CAACb,IAAI,IAAIA,IAAI,CAACE,SAAS,KAAKU,EAAE,CAAC,CAAC;QAC3D,OAAOF,UAAU;MACrB,CAAC,CAAC;IACN,CAAC,CAAC,OAAOI,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAChD,CAAC,SAAS;MACNxC,UAAU,CAAC,KAAK,CAAC;IACrB;EACJ,CAAC;EAEDlB,SAAS,CAAC,MAAM;IACZc,OAAO,CAAC,EAAE,CAAC,CAAC,CAAC;IACbE,OAAO,CAAC,CAAC,CAAC;IACVQ,SAAS,CAAC,CAAC,EAAEb,IAAI,CAAC,CAAC,CAAC;EACxB,CAAC,EAAE,CAACA,IAAI,EAAEF,QAAQ,EAAEC,WAAW,CAAC,CAAC;EAEjCV,SAAS,CAAC,MAAM;IACZ,IAAIe,IAAI,GAAG,CAAC,EAAE;MACVS,SAAS,CAACT,IAAI,EAAEJ,IAAI,CAAC,CAAC,CAAC;IAC3B;EACJ,CAAC,EAAE,CAACI,IAAI,CAAC,CAAC;EAEV,MAAM6C,QAAQ,GAAGA,CAAA,KAAM;IACnB5C,OAAO,CAAC6C,QAAQ,IAAIA,QAAQ,GAAG,CAAC,CAAC;EACrC,CAAC;EAED,oBACItD,OAAA;IAAAuD,QAAA,eACIvD,OAAA,CAACH,iBAAiB;MACdS,IAAI,EAAEA,IAAK;MACX+C,QAAQ,EAAEA,QAAS;MACnB3C,OAAO,EAAEA,OAAQ;MACjBN,IAAI,EAAEA,IAAK;MACXQ,aAAa,EAAEA,aAAc;MAC7BC,gBAAgB,EAAEA;IAAiB;MAAA2C,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEd,CAAC;AAACtD,EAAA,CApFIJ,aAAa;AAAA2D,EAAA,GAAb3D,aAAa;AAsFnB,eAAeA,aAAa;AAAC,IAAA2D,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}