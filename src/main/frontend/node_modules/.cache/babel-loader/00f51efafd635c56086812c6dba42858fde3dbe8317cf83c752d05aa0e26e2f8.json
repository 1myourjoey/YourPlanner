{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\Documents\\\\GitHub\\\\YourPlanner\\\\src\\\\main\\\\frontend\\\\src\\\\components\\\\js\\\\Footer.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Footer = () => {\n  _s();\n  const [weatherData, setWeatherData] = useState(null);\n  const apiKey = 'c66c757be760a0af3db208dfcc3ed951';\n  useEffect(() => {\n    const fetchWeatherData = async () => {\n      try {\n        const cities = ['Seoul', 'Busan', 'Incheon', 'Daegu', 'Daejeon', 'Gwangju', 'Ulsan', 'Suwon', 'Changwon', 'Seongnam', 'Goyang', 'Yongin', 'Seoul', 'Gimpo', 'Pohang', 'Ansan', 'Jeonju'];\n        const promises = cities.map(city => fetch(`https://api.openweathermap.org/data/2.5/weather?q=${city},KR&appid=${apiKey}&units=metric`).then(response => response.json()).then(data => ({\n          city,\n          temperature: data.main.temp\n        })));\n        const weatherResults = await Promise.all(promises);\n        setWeatherData(weatherResults);\n      } catch (error) {\n        console.error('Error fetching weather data:', error);\n      }\n    };\n    fetchWeatherData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"footer\", {\n    className: \"container footer-flow\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: weatherData && weatherData.map(({\n        city,\n        temperature\n      }) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-body\",\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              className: \"card-title\",\n              children: city\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"card-text\",\n              children: [temperature, \"\\xB0C\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 17\n        }, this)\n      }, city, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 15\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 7\n  }, this);\n};\n_s(Footer, \"BCUo9muHyxrqajg6diFxqqqjG/A=\");\n_c = Footer;\nexport default Footer;\nvar _c;\n$RefreshReg$(_c, \"Footer\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Footer","_s","weatherData","setWeatherData","apiKey","fetchWeatherData","cities","promises","map","city","fetch","then","response","json","data","temperature","main","temp","weatherResults","Promise","all","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/admin/Documents/GitHub/YourPlanner/src/main/frontend/src/components/js/Footer.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst Footer = () => {\r\n  const [weatherData, setWeatherData] = useState(null);\r\n  const apiKey = 'c66c757be760a0af3db208dfcc3ed951';\r\n\r\n  useEffect(() => {\r\n    const fetchWeatherData = async () => {\r\n      try {\r\n        const cities = ['Seoul', 'Busan', 'Incheon', 'Daegu', 'Daejeon', 'Gwangju', 'Ulsan', 'Suwon', 'Changwon', 'Seongnam', 'Goyang', 'Yongin', 'Seoul', 'Gimpo', 'Pohang', 'Ansan', 'Jeonju'];\r\n        const promises = cities.map(city =>\r\n            fetch(`https://api.openweathermap.org/data/2.5/weather?q=${city},KR&appid=${apiKey}&units=metric`)\r\n                .then(response => response.json())\r\n                .then(data => ({ city, temperature: data.main.temp }))\r\n        );\r\n        const weatherResults = await Promise.all(promises);\r\n        setWeatherData(weatherResults);\r\n      } catch (error) {\r\n        console.error('Error fetching weather data:', error);\r\n      }\r\n    };\r\n\r\n    fetchWeatherData();\r\n  }, []);\r\n\r\n  return (\r\n      <footer className=\"container footer-flow\">\r\n        <div className=\"row\">\r\n          {weatherData && weatherData.map(({ city, temperature }) => (\r\n              <div key={city} className=\"col\">\r\n                <div className=\"card\">\r\n                  <div className=\"card-body\">\r\n                    <h5 className=\"card-title\">{city}</h5>\r\n                    <p className=\"card-text\">{temperature}Â°C</p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n          ))}\r\n        </div>\r\n      </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAMQ,MAAM,GAAG,kCAAkC;EAEjDP,SAAS,CAAC,MAAM;IACd,MAAMQ,gBAAgB,GAAG,MAAAA,CAAA,KAAY;MACnC,IAAI;QACF,MAAMC,MAAM,GAAG,CAAC,OAAO,EAAE,OAAO,EAAE,SAAS,EAAE,OAAO,EAAE,SAAS,EAAE,SAAS,EAAE,OAAO,EAAE,OAAO,EAAE,UAAU,EAAE,UAAU,EAAE,QAAQ,EAAE,QAAQ,EAAE,OAAO,EAAE,OAAO,EAAE,QAAQ,EAAE,OAAO,EAAE,QAAQ,CAAC;QACxL,MAAMC,QAAQ,GAAGD,MAAM,CAACE,GAAG,CAACC,IAAI,IAC5BC,KAAK,CAAC,qDAAqDD,IAAI,aAAaL,MAAM,eAAe,CAAC,CAC7FO,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,KAAK;UAAEL,IAAI;UAAEM,WAAW,EAAED,IAAI,CAACE,IAAI,CAACC;QAAK,CAAC,CAAC,CAC7D,CAAC;QACD,MAAMC,cAAc,GAAG,MAAMC,OAAO,CAACC,GAAG,CAACb,QAAQ,CAAC;QAClDJ,cAAc,CAACe,cAAc,CAAC;MAChC,CAAC,CAAC,OAAOG,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;MACtD;IACF,CAAC;IAEDhB,gBAAgB,CAAC,CAAC;EACpB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIN,OAAA;IAAQwB,SAAS,EAAC,uBAAuB;IAAAC,QAAA,eACvCzB,OAAA;MAAKwB,SAAS,EAAC,KAAK;MAAAC,QAAA,EACjBtB,WAAW,IAAIA,WAAW,CAACM,GAAG,CAAC,CAAC;QAAEC,IAAI;QAAEM;MAAY,CAAC,kBAClDhB,OAAA;QAAgBwB,SAAS,EAAC,KAAK;QAAAC,QAAA,eAC7BzB,OAAA;UAAKwB,SAAS,EAAC,MAAM;UAAAC,QAAA,eACnBzB,OAAA;YAAKwB,SAAS,EAAC,WAAW;YAAAC,QAAA,gBACxBzB,OAAA;cAAIwB,SAAS,EAAC,YAAY;cAAAC,QAAA,EAAEf;YAAI;cAAAgB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eACtC7B,OAAA;cAAGwB,SAAS,EAAC,WAAW;cAAAC,QAAA,GAAET,WAAW,EAAC,OAAE;YAAA;cAAAU,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAG,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACzC;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH;MAAC,GANEnB,IAAI;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAOT,CACR;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEf,CAAC;AAAC3B,EAAA,CAvCID,MAAM;AAAA6B,EAAA,GAAN7B,MAAM;AAyCZ,eAAeA,MAAM;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}