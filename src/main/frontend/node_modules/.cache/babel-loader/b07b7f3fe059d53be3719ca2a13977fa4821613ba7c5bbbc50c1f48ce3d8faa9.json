{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\cy\\\\Documents\\\\GitHub\\\\YourPlanner\\\\src\\\\main\\\\frontend\\\\src\\\\components\\\\js\\\\TrainList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst formatDate = datetime => {\n  if (typeof datetime !== 'string') {\n    datetime = datetime.toString();\n  }\n  const year = datetime.substring(0, 4);\n  const month = datetime.substring(4, 6);\n  const day = datetime.substring(6, 8);\n  const hour = datetime.substring(8, 10);\n  const minute = datetime.substring(10, 12);\n  return `${month}월 ${day}일 ${hour}시 ${minute}분`;\n};\nconst TrainList = ({\n  depPlaceId,\n  arrPlaceId,\n  startDate,\n  handleTrainAddClick\n}) => {\n  _s();\n  const [trainData, setTrainData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchTrainData = async () => {\n      try {\n        var _response$data$respon, _response$data$respon2, _response$data$respon3;\n        setLoading(true);\n        const serviceKey = 'LOr7zB0jDV+lQ6WGnVGCY+vG22rkxdPRMM36e7spCgFeKjRlh488A09FtjZbwnw6bEMMW3Virexop2ihnhIe7g==';\n        const formattedDate = startDate.replace(/-/g, '');\n        const response = await axios.get('http://apis.data.go.kr/1613000/TrainInfoService/getStrtpntAlocFndTrainInfo', {\n          params: {\n            serviceKey,\n            depPlaceId,\n            arrPlaceId,\n            depPlandTime: formattedDate,\n            _type: 'json',\n            trainGradeCode: '00' // 모든 차량 종류 포함\n          }\n        });\n        const items = (_response$data$respon = response.data.response) === null || _response$data$respon === void 0 ? void 0 : (_response$data$respon2 = _response$data$respon.body) === null || _response$data$respon2 === void 0 ? void 0 : (_response$data$respon3 = _response$data$respon2.items) === null || _response$data$respon3 === void 0 ? void 0 : _response$data$respon3.item;\n        if (items && Array.isArray(items)) {\n          const extractedData = items.map(item => ({\n            traingradename: item.traingradename,\n            depplandtime: item.depplandtime,\n            arrplandtime: item.arrplandtime,\n            depplacename: item.depplacename,\n            arrplacename: item.arrplacename,\n            adultcharge: item.adultcharge,\n            trainno: item.trainno\n          }));\n          setTrainData(extractedData);\n        } else if (items) {\n          const extractedData = [{\n            traingradename: items.traingradename,\n            depplandtime: items.depplandtime,\n            arrplandtime: items.arrplandtime,\n            depplacename: items.depplacename,\n            arrplacename: items.arrplacename,\n            adultcharge: items.adultcharge,\n            trainno: items.trainno\n          }];\n          setTrainData(extractedData);\n        } else {\n          setTrainData([]);\n        }\n      } catch (error) {\n        console.error('Error fetching data:', error);\n        setError(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    if (depPlaceId && arrPlaceId && startDate) {\n      fetchTrainData();\n    }\n  }, [depPlaceId, arrPlaceId, startDate]);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"\\uB85C\\uB529 \\uC911...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"\\uB370\\uC774\\uD130\\uB97C \\uBD88\\uB7EC\\uC624\\uB294 \\uC911 \\uC624\\uB958\\uAC00 \\uBC1C\\uC0DD\\uD588\\uC2B5\\uB2C8\\uB2E4: \", error.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: trainData.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: trainData.map((train, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [train.traingradename, \" / \\uCD9C\\uBC1C: \", train.depplacename, \"\\uC5ED \", formatDate(train.depplandtime), \" / \\uB3C4\\uCC29: \", train.arrplacename, \"\\uC5ED \", formatDate(train.arrplandtime), \" / \\uC694\\uAE08: \", train.adultcharge, \"\\uC6D0 / \\uC5F4\\uCC28\\uBC88\\uD638: \", train.trainno]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleTrainAddClick,\n          children: \"\\uCD94\\uAC00\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 15\n        }, this)]\n      }, train.trainno || index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"\\uD45C\\uC2DC\\uD560 \\uC5F4\\uCC28 \\uC815\\uBCF4\\uAC00 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n};\n_s(TrainList, \"Esr68gPQqQS1sOARNogvqddn5oc=\");\n_c = TrainList;\nexport default TrainList;\nvar _c;\n$RefreshReg$(_c, \"TrainList\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","formatDate","datetime","toString","year","substring","month","day","hour","minute","TrainList","depPlaceId","arrPlaceId","startDate","handleTrainAddClick","_s","trainData","setTrainData","loading","setLoading","error","setError","fetchTrainData","_response$data$respon","_response$data$respon2","_response$data$respon3","serviceKey","formattedDate","replace","response","get","params","depPlandTime","_type","trainGradeCode","items","data","body","item","Array","isArray","extractedData","map","traingradename","depplandtime","arrplandtime","depplacename","arrplacename","adultcharge","trainno","console","children","fileName","_jsxFileName","lineNumber","columnNumber","message","length","train","index","onClick","_c","$RefreshReg$"],"sources":["C:/Users/cy/Documents/GitHub/YourPlanner/src/main/frontend/src/components/js/TrainList.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst formatDate = (datetime) => {\r\n  if (typeof datetime !== 'string') {\r\n    datetime = datetime.toString();\r\n  }\r\n  const year = datetime.substring(0, 4);\r\n  const month = datetime.substring(4, 6);\r\n  const day = datetime.substring(6, 8);\r\n  const hour = datetime.substring(8, 10);\r\n  const minute = datetime.substring(10, 12);\r\n\r\n  return `${month}월 ${day}일 ${hour}시 ${minute}분`;\r\n};\r\n\r\nconst TrainList = ({ depPlaceId, arrPlaceId, startDate, handleTrainAddClick }) => {\r\n  const [trainData, setTrainData] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchTrainData = async () => {\r\n      try {\r\n        setLoading(true);\r\n        const serviceKey = 'LOr7zB0jDV+lQ6WGnVGCY+vG22rkxdPRMM36e7spCgFeKjRlh488A09FtjZbwnw6bEMMW3Virexop2ihnhIe7g==';\r\n        const formattedDate = startDate.replace(/-/g, '');\r\n\r\n        const response = await axios.get('http://apis.data.go.kr/1613000/TrainInfoService/getStrtpntAlocFndTrainInfo', {\r\n          params: {\r\n            serviceKey,\r\n            depPlaceId,\r\n            arrPlaceId,\r\n            depPlandTime: formattedDate,\r\n            _type: 'json',\r\n            trainGradeCode: '00' // 모든 차량 종류 포함\r\n          }\r\n        });\r\n\r\n        const items = response.data.response?.body?.items?.item;\r\n\r\n        if (items && Array.isArray(items)) {\r\n          const extractedData = items.map(item => ({\r\n            traingradename: item.traingradename,\r\n            depplandtime: item.depplandtime,\r\n            arrplandtime: item.arrplandtime,\r\n            depplacename: item.depplacename,\r\n            arrplacename: item.arrplacename,\r\n            adultcharge: item.adultcharge,\r\n            trainno: item.trainno\r\n          }));\r\n          setTrainData(extractedData);\r\n        } else if (items) {\r\n          const extractedData = [{\r\n            traingradename: items.traingradename,\r\n            depplandtime: items.depplandtime,\r\n            arrplandtime: items.arrplandtime,\r\n            depplacename: items.depplacename,\r\n            arrplacename: items.arrplacename,\r\n            adultcharge: items.adultcharge,\r\n            trainno: items.trainno\r\n          }];\r\n          setTrainData(extractedData);\r\n        } else {\r\n          setTrainData([]);\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching data:', error);\r\n        setError(error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    if (depPlaceId && arrPlaceId && startDate) {\r\n      fetchTrainData();\r\n    }\r\n  }, [depPlaceId, arrPlaceId, startDate]);\r\n\r\n  if (loading) {\r\n    return <div>로딩 중...</div>;\r\n  }\r\n\r\n  if (error) {\r\n    return <div>데이터를 불러오는 중 오류가 발생했습니다: {error.message}</div>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {trainData.length > 0 ? (\r\n        <ul>\r\n          {trainData.map((train, index) => (\r\n            <li key={train.trainno || index}>\r\n              <p>{train.traingradename} / 출발: {train.depplacename}역 {formatDate(train.depplandtime)} / 도착: {train.arrplacename}역 {formatDate(train.arrplandtime)} / 요금: {train.adultcharge}원 / 열차번호: {train.trainno}</p>\r\n              <button onClick={handleTrainAddClick}>추가</button>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      ) : (\r\n        <div>표시할 열차 정보가 없습니다.</div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TrainList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}