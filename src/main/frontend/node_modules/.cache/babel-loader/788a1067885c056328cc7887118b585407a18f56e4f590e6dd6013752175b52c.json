{"ast":null,"code":"var _jsxFileName = \"/Users/Joey/Coding/_dev/YourPlanner/src/main/frontend/src/components/js/Map.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport '../css/Map.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Map({\n  setDestination\n}) {\n  _s();\n  useEffect(() => {\n    // 네이버 지도 API 호출\n    const script = document.createElement('script');\n    script.src = 'https://openapi.map.naver.com/openapi/v3/maps.js?ncpClientId=gk52oscuby'; // 여기에 클라이언트 ID를 입력하세요\n    script.async = true;\n    script.onload = () => {\n      // API 로드 후 실행될 함수\n      const map = new window.naver.maps.Map('map', {\n        center: new window.naver.maps.LatLng(36.3646712, 127.3587861),\n        zoom: 7\n      });\n\n      // 마커를 추가할 도시 목록\n      const cities = [{\n        name: 'Seoul',\n        lat: 37.5665,\n        lng: 126.9780\n      }, {\n        name: 'Busan',\n        lat: 35.1796,\n        lng: 129.0756\n      }, {\n        name: 'Daegu',\n        lat: 35.8722,\n        lng: 128.6025\n      }, {\n        name: 'Incheon',\n        lat: 37.4563,\n        lng: 126.7052\n      }\n      // 필요한 다른 도시를 여기에 추가\n      ];\n      cities.forEach(city => {\n        const marker = new window.naver.maps.Marker({\n          position: new window.naver.maps.LatLng(city.lat, city.lng),\n          map: map,\n          title: city.name\n        });\n        window.naver.maps.Event.addListener(marker, 'click', () => {\n          setDestination(city.name);\n        });\n      });\n    };\n    document.body.appendChild(script);\n    return () => {\n      // 컴포넌트가 언마운트 될 때 스크립트 제거\n      document.body.removeChild(script);\n    };\n  }, [setDestination]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"map\",\n    style: {\n      width: '600px',\n      height: '450px'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n}\n_s(Map, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = Map;\nexport default Map;\nvar _c;\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"names":["React","useEffect","jsxDEV","_jsxDEV","Map","setDestination","_s","script","document","createElement","src","async","onload","map","window","naver","maps","center","LatLng","zoom","cities","name","lat","lng","forEach","city","marker","Marker","position","title","Event","addListener","body","appendChild","removeChild","id","style","width","height","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/Joey/Coding/_dev/YourPlanner/src/main/frontend/src/components/js/Map.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport '../css/Map.css';\n\nfunction Map({ setDestination }) {\n    useEffect(() => {\n        // 네이버 지도 API 호출\n        const script = document.createElement('script');\n        script.src = 'https://openapi.map.naver.com/openapi/v3/maps.js?ncpClientId=gk52oscuby'; // 여기에 클라이언트 ID를 입력하세요\n        script.async = true;\n        script.onload = () => {\n            // API 로드 후 실행될 함수\n            const map = new window.naver.maps.Map('map', {\n                center: new window.naver.maps.LatLng(36.3646712, 127.3587861),\n                zoom: 7\n            });\n\n            // 마커를 추가할 도시 목록\n            const cities = [\n                { name: 'Seoul', lat: 37.5665, lng: 126.9780 },\n                { name: 'Busan', lat: 35.1796, lng: 129.0756 },\n                { name: 'Daegu', lat: 35.8722, lng: 128.6025 },\n                { name: 'Incheon', lat: 37.4563, lng: 126.7052 }\n                // 필요한 다른 도시를 여기에 추가\n            ];\n\n            cities.forEach(city => {\n                const marker = new window.naver.maps.Marker({\n                    position: new window.naver.maps.LatLng(city.lat, city.lng),\n                    map: map,\n                    title: city.name\n                });\n\n                window.naver.maps.Event.addListener(marker, 'click', () => {\n                    setDestination(city.name);\n                });\n            });\n        };\n        document.body.appendChild(script);\n\n        return () => {\n            // 컴포넌트가 언마운트 될 때 스크립트 제거\n            document.body.removeChild(script);\n        };\n    }, [setDestination]);\n\n    return (\n        <div id=\"map\" style={{ width: '600px', height: '450px' }}></div>\n    );\n}\n\nexport default Map;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAO,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExB,SAASC,GAAGA,CAAC;EAAEC;AAAe,CAAC,EAAE;EAAAC,EAAA;EAC7BL,SAAS,CAAC,MAAM;IACZ;IACA,MAAMM,MAAM,GAAGC,QAAQ,CAACC,aAAa,CAAC,QAAQ,CAAC;IAC/CF,MAAM,CAACG,GAAG,GAAG,yEAAyE,CAAC,CAAC;IACxFH,MAAM,CAACI,KAAK,GAAG,IAAI;IACnBJ,MAAM,CAACK,MAAM,GAAG,MAAM;MAClB;MACA,MAAMC,GAAG,GAAG,IAAIC,MAAM,CAACC,KAAK,CAACC,IAAI,CAACZ,GAAG,CAAC,KAAK,EAAE;QACzCa,MAAM,EAAE,IAAIH,MAAM,CAACC,KAAK,CAACC,IAAI,CAACE,MAAM,CAAC,UAAU,EAAE,WAAW,CAAC;QAC7DC,IAAI,EAAE;MACV,CAAC,CAAC;;MAEF;MACA,MAAMC,MAAM,GAAG,CACX;QAAEC,IAAI,EAAE,OAAO;QAAEC,GAAG,EAAE,OAAO;QAAEC,GAAG,EAAE;MAAS,CAAC,EAC9C;QAAEF,IAAI,EAAE,OAAO;QAAEC,GAAG,EAAE,OAAO;QAAEC,GAAG,EAAE;MAAS,CAAC,EAC9C;QAAEF,IAAI,EAAE,OAAO;QAAEC,GAAG,EAAE,OAAO;QAAEC,GAAG,EAAE;MAAS,CAAC,EAC9C;QAAEF,IAAI,EAAE,SAAS;QAAEC,GAAG,EAAE,OAAO;QAAEC,GAAG,EAAE;MAAS;MAC/C;MAAA,CACH;MAEDH,MAAM,CAACI,OAAO,CAACC,IAAI,IAAI;QACnB,MAAMC,MAAM,GAAG,IAAIZ,MAAM,CAACC,KAAK,CAACC,IAAI,CAACW,MAAM,CAAC;UACxCC,QAAQ,EAAE,IAAId,MAAM,CAACC,KAAK,CAACC,IAAI,CAACE,MAAM,CAACO,IAAI,CAACH,GAAG,EAAEG,IAAI,CAACF,GAAG,CAAC;UAC1DV,GAAG,EAAEA,GAAG;UACRgB,KAAK,EAAEJ,IAAI,CAACJ;QAChB,CAAC,CAAC;QAEFP,MAAM,CAACC,KAAK,CAACC,IAAI,CAACc,KAAK,CAACC,WAAW,CAACL,MAAM,EAAE,OAAO,EAAE,MAAM;UACvDrB,cAAc,CAACoB,IAAI,CAACJ,IAAI,CAAC;QAC7B,CAAC,CAAC;MACN,CAAC,CAAC;IACN,CAAC;IACDb,QAAQ,CAACwB,IAAI,CAACC,WAAW,CAAC1B,MAAM,CAAC;IAEjC,OAAO,MAAM;MACT;MACAC,QAAQ,CAACwB,IAAI,CAACE,WAAW,CAAC3B,MAAM,CAAC;IACrC,CAAC;EACL,CAAC,EAAE,CAACF,cAAc,CAAC,CAAC;EAEpB,oBACIF,OAAA;IAAKgC,EAAE,EAAC,KAAK;IAACC,KAAK,EAAE;MAAEC,KAAK,EAAE,OAAO;MAAEC,MAAM,EAAE;IAAQ;EAAE;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;AAExE;AAACpC,EAAA,CA7CQF,GAAG;AAAAuC,EAAA,GAAHvC,GAAG;AA+CZ,eAAeA,GAAG;AAAC,IAAAuC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}