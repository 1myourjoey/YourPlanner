{"ast":null,"code":"import React,{useState}from'react';import DatePicker from'react-datepicker';import'react-datepicker/dist/react-datepicker.css';import{useNavigate}from'react-router-dom';import MapSvg from\"./MapSvg\";// 날짜를 'yyyy-MM-dd' 형식으로 변환하는 함수\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const formatDate=date=>{const year=date.getFullYear();const month=String(date.getMonth()+1).padStart(2,'0');const day=String(date.getDate()).padStart(2,'0');return\"\".concat(year,\"-\").concat(month,\"-\").concat(day);};const TravelDate=()=>{const[startDate,setStartDate]=useState(null);const[endDate,setEndDate]=useState(null);const[destination,setDestination]=useState('');const[departure,setDeparture]=useState('');const navigate=useNavigate();const handleTravel=()=>{const formattedStartDate=startDate?formatDate(startDate):'';const formattedEndDate=endDate?formatDate(endDate):'';const params=new URLSearchParams({startDate:formattedStartDate,endDate:formattedEndDate,departure,destination});navigate(\"/details?\".concat(params.toString()));};const cities=[\"서울\",\"부산\",\"대구\",\"인천\",\"광주\",\"대전\",\"울산\",\"세종\",\"경기도\",\"강원도\",\"충청북도\",\"충창남도\",\"전라북도\",\"전라남도\",\"경상북도\",\"경상남도\",\"제주도\"];return/*#__PURE__*/_jsxs(\"div\",{className:\"form\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"startDate\",children:\"Start Date:\"}),/*#__PURE__*/_jsx(DatePicker,{id:\"startDate\",selected:startDate,onChange:date=>setStartDate(date),dateFormat:\"yyyy-MM-dd\"}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"endDate\",children:\"End Date:\"}),/*#__PURE__*/_jsx(DatePicker,{id:\"endDate\",selected:endDate,onChange:date=>setEndDate(date),dateFormat:\"yyyy-MM-dd\"}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"departure\",children:\"Departure:\"}),/*#__PURE__*/_jsxs(\"select\",{id:\"departure\",value:departure,onChange:e=>setDeparture(e.target.value),children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"\\uB3C4\\uC2DC\\uB97C \\uC120\\uD0DD\\uD558\\uC138\\uC694\"}),cities.map(city=>/*#__PURE__*/_jsx(\"option\",{value:city,children:city},city))]}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"destination\",children:\"Destination:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"destination\",value:destination,onChange:e=>setDestination(e.target.value)}),/*#__PURE__*/_jsx(\"button\",{onClick:handleTravel,children:\"\\uC5EC\\uD589\\uD558\\uAE30\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"map-container\",children:[/*#__PURE__*/_jsx(\"p\",{children:\"\\uC9C0\\uB3C4\\uC5D0\\uC11C \\uC9C0\\uC5ED\\uC744 \\uC120\\uD0DD\\uD574\\uBCF4\\uC138\\uC694 !\"}),/*#__PURE__*/_jsx(MapSvg,{onCityClick:setDestination})]})]});};export default TravelDate;","map":{"version":3,"names":["React","useState","DatePicker","useNavigate","MapSvg","jsx","_jsx","jsxs","_jsxs","formatDate","date","year","getFullYear","month","String","getMonth","padStart","day","getDate","concat","TravelDate","startDate","setStartDate","endDate","setEndDate","destination","setDestination","departure","setDeparture","navigate","handleTravel","formattedStartDate","formattedEndDate","params","URLSearchParams","toString","cities","className","children","htmlFor","id","selected","onChange","dateFormat","value","e","target","map","city","type","onClick","onCityClick"],"sources":["C:/Users/admin/Documents/GitHub/YourPlanner/src/main/frontend/src/components/js/TravelDate.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport DatePicker from 'react-datepicker';\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport MapSvg from \"./MapSvg\";\r\n\r\n// 날짜를 'yyyy-MM-dd' 형식으로 변환하는 함수\r\nconst formatDate = (date) => {\r\n    const year = date.getFullYear();\r\n    const month = String(date.getMonth() + 1).padStart(2, '0');\r\n    const day = String(date.getDate()).padStart(2, '0');\r\n    return `${year}-${month}-${day}`;\r\n};\r\n\r\nconst TravelDate = () => {\r\n    const [startDate, setStartDate] = useState(null);\r\n    const [endDate, setEndDate] = useState(null);\r\n    const [destination, setDestination] = useState('');\r\n    const [departure, setDeparture] = useState('');\r\n    const navigate = useNavigate();\r\n\r\n    const handleTravel = () => {\r\n        const formattedStartDate = startDate ? formatDate(startDate) : '';\r\n        const formattedEndDate = endDate ? formatDate(endDate) : '';\r\n        const params = new URLSearchParams({\r\n            startDate: formattedStartDate,\r\n            endDate: formattedEndDate,\r\n            departure,\r\n            destination\r\n        });\r\n        navigate(`/details?${params.toString()}`);\r\n    };\r\n    const cities = [\r\n        \"서울\", \"부산\", \"대구\", \"인천\", \"광주\", \"대전\", \"울산\",\r\n        \"세종\", \"경기도\", \"강원도\", \"충청북도\", \"충창남도\", \"전라북도\", \"전라남도\",\r\n        \"경상북도\", \"경상남도\", \"제주도\"\r\n    ];\r\n\r\n    return (\r\n        <div className=\"form\">\r\n            <label htmlFor=\"startDate\">Start Date:</label>\r\n            <DatePicker\r\n                id=\"startDate\"\r\n                selected={startDate}\r\n                onChange={date => setStartDate(date)}\r\n                dateFormat=\"yyyy-MM-dd\"\r\n            />\r\n            <label htmlFor=\"endDate\">End Date:</label>\r\n            <DatePicker\r\n                id=\"endDate\"\r\n                selected={endDate}\r\n                onChange={date => setEndDate(date)}\r\n                dateFormat=\"yyyy-MM-dd\"\r\n            />\r\n            <label htmlFor=\"departure\">Departure:</label>\r\n            <select\r\n                id=\"departure\"\r\n                value={departure}\r\n                onChange={e => setDeparture(e.target.value)}\r\n            >\r\n                <option value=\"\">도시를 선택하세요</option>\r\n                {cities.map(city => (\r\n                    <option key={city} value={city}>{city}</option>\r\n                ))}\r\n            </select>\r\n            <label htmlFor=\"destination\">Destination:</label>\r\n            <input\r\n                type=\"text\"\r\n                id=\"destination\"\r\n                value={destination}\r\n                onChange={e => setDestination(e.target.value)}\r\n            />\r\n\r\n            <button onClick={handleTravel}>여행하기</button>\r\n            <div className=\"map-container\">\r\n                <p>지도에서 지역을 선택해보세요 !</p>\r\n                <MapSvg onCityClick={setDestination}/>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TravelDate;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}