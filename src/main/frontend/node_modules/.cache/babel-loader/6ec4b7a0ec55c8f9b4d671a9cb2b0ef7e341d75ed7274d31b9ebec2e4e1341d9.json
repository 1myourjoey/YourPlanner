{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\cy\\\\Documents\\\\GitHub\\\\YourPlanner\\\\src\\\\main\\\\frontend\\\\src\\\\components\\\\js\\\\TrainList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TrainList = ({\n  depPlaceId,\n  arrPlaceId,\n  startDate\n}) => {\n  _s();\n  const [trainData, setTrainData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchTrainData = async () => {\n      try {\n        var _response$data$respon, _response$data$respon2, _response$data$respon3;\n        setLoading(true);\n        const serviceKey = 'LOr7zB0jDV+lQ6WGnVGCY+vG22rkxdPRMM36e7spCgFeKjRlh488A09FtjZbwnw6bEMMW3Virexop2ihnhIe7g==';\n        const formattedDate = startDate.replace(/-/g, '');\n        console.log('Formatted Date:', formattedDate);\n        console.log('depPlaceId:', depPlaceId);\n        console.log('arrPlaceId:', arrPlaceId);\n        const response = await axios.get('http://apis.data.go.kr/1613000/TrainInfoService/getStrtpntAlocFndTrainInfo', {\n          params: {\n            serviceKey,\n            depPlaceId,\n            arrPlaceId,\n            depPlandTime: formattedDate,\n            _type: 'json',\n            trainGradeCode: '00' // 예: 모든 차량 종류 포함\n          }\n        });\n        console.log('API Response:', response.data); // 응답 데이터 확인\n        console.log('Response Header:', response.data.response.header); // 응답 헤더 확인\n        console.log('Response Body:', response.data.response.body); // 응답 본문 확인\n\n        const items = (_response$data$respon = response.data.response) === null || _response$data$respon === void 0 ? void 0 : (_response$data$respon2 = _response$data$respon.body) === null || _response$data$respon2 === void 0 ? void 0 : (_response$data$respon3 = _response$data$respon2.items) === null || _response$data$respon3 === void 0 ? void 0 : _response$data$respon3.item;\n        if (items && Array.isArray(items)) {\n          const extractedData = items.map(item => ({\n            traingradename: item.traingradename,\n            depplandtime: item.depplandtime,\n            arrplandtime: item.arrplandtime,\n            depplacename: item.depplacename,\n            arrplacename: item.arrplacename,\n            adultcharge: item.adultcharge,\n            trainno: item.trainno\n          }));\n          setTrainData(extractedData);\n        } else if (items) {\n          const extractedData = [{\n            traingradename: items.traingradename,\n            depplandtime: items.depplandtime,\n            arrplandtime: items.arrplandtime,\n            depplacename: items.depplacename,\n            arrplacename: items.arrplacename,\n            adultcharge: items.adultcharge,\n            trainno: items.trainno\n          }];\n          setTrainData(extractedData);\n        } else {\n          setTrainData([]);\n        }\n      } catch (error) {\n        console.error('Error fetching data:', error);\n        setError(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    if (depPlaceId && arrPlaceId && startDate) {\n      fetchTrainData();\n    }\n  }, [depPlaceId, arrPlaceId, startDate]);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"\\uB85C\\uB529 \\uC911...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"\\uB370\\uC774\\uD130\\uB97C \\uBD88\\uB7EC\\uC624\\uB294 \\uC911 \\uC624\\uB958\\uAC00 \\uBC1C\\uC0DD\\uD588\\uC2B5\\uB2C8\\uB2E4: \", error.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\uAE30\\uCC28 \\uC815\\uBCF4\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: trainData.map((train, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [train.traingradename, \" | \\uCD9C\\uBC1C: \", train.depplandtime, \"(\", train.depplacename, \") | \\uB3C4\\uCC29:\", train.arrplacename, \" \", train.arrplandtime, \" | \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"\\uB3C4\\uCC29\\uC5ED: \", train.arrplacename]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"\\uC694\\uAE08: \", train.adultcharge]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"\\uAE30\\uCC28 \\uBC88\\uD638: \", train.trainno]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this)]\n      }, train.trainno || index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n};\n_s(TrainList, \"Esr68gPQqQS1sOARNogvqddn5oc=\");\n_c = TrainList;\nexport default TrainList;\nvar _c;\n$RefreshReg$(_c, \"TrainList\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","TrainList","depPlaceId","arrPlaceId","startDate","_s","trainData","setTrainData","loading","setLoading","error","setError","fetchTrainData","_response$data$respon","_response$data$respon2","_response$data$respon3","serviceKey","formattedDate","replace","console","log","response","get","params","depPlandTime","_type","trainGradeCode","data","header","body","items","item","Array","isArray","extractedData","map","traingradename","depplandtime","arrplandtime","depplacename","arrplacename","adultcharge","trainno","children","fileName","_jsxFileName","lineNumber","columnNumber","message","train","index","_c","$RefreshReg$"],"sources":["C:/Users/cy/Documents/GitHub/YourPlanner/src/main/frontend/src/components/js/TrainList.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst TrainList = ({ depPlaceId, arrPlaceId, startDate }) => {\r\n  const [trainData, setTrainData] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchTrainData = async () => {\r\n      try {\r\n        setLoading(true);\r\n        const serviceKey = 'LOr7zB0jDV+lQ6WGnVGCY+vG22rkxdPRMM36e7spCgFeKjRlh488A09FtjZbwnw6bEMMW3Virexop2ihnhIe7g==';\r\n        const formattedDate = startDate.replace(/-/g, '');\r\n        console.log('Formatted Date:', formattedDate);\r\n        console.log('depPlaceId:', depPlaceId);\r\n        console.log('arrPlaceId:', arrPlaceId);\r\n\r\n        const response = await axios.get('http://apis.data.go.kr/1613000/TrainInfoService/getStrtpntAlocFndTrainInfo', {\r\n          params: {\r\n            serviceKey,\r\n            depPlaceId,\r\n            arrPlaceId,\r\n            depPlandTime: formattedDate,\r\n            _type: 'json',\r\n            trainGradeCode: '00' // 예: 모든 차량 종류 포함\r\n          }\r\n        });\r\n\r\n        console.log('API Response:', response.data); // 응답 데이터 확인\r\n        console.log('Response Header:', response.data.response.header); // 응답 헤더 확인\r\n        console.log('Response Body:', response.data.response.body); // 응답 본문 확인\r\n\r\n        const items = response.data.response?.body?.items?.item;\r\n\r\n        if (items && Array.isArray(items)) {\r\n          const extractedData = items.map(item => ({\r\n            traingradename: item.traingradename,\r\n            depplandtime: item.depplandtime,\r\n            arrplandtime: item.arrplandtime,\r\n            depplacename: item.depplacename,\r\n            arrplacename: item.arrplacename,\r\n            adultcharge: item.adultcharge,\r\n            trainno: item.trainno\r\n          }));\r\n          setTrainData(extractedData);\r\n        } else if (items) {\r\n          const extractedData = [{\r\n            traingradename: items.traingradename,\r\n            depplandtime: items.depplandtime,\r\n            arrplandtime: items.arrplandtime,\r\n            depplacename: items.depplacename,\r\n            arrplacename: items.arrplacename,\r\n            adultcharge: items.adultcharge,\r\n            trainno: items.trainno\r\n          }];\r\n          setTrainData(extractedData);\r\n        } else {\r\n          setTrainData([]);\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching data:', error);\r\n        setError(error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    if (depPlaceId && arrPlaceId && startDate) {\r\n      fetchTrainData();\r\n    }\r\n  }, [depPlaceId, arrPlaceId, startDate]);\r\n\r\n  if (loading) {\r\n    return <div>로딩 중...</div>;\r\n  }\r\n\r\n  if (error) {\r\n    return <div>데이터를 불러오는 중 오류가 발생했습니다: {error.message}</div>;\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <div>\r\n      <h1>기차 정보</h1>\r\n      <ul>\r\n        {trainData.map((train, index) => (\r\n          <li key={train.trainno || index}>\r\n            <p>{train.traingradename} | 출발: {train.depplandtime}({train.depplacename}) | 도착:{train.arrplacename} {train.arrplandtime} | </p>\r\n            <p>도착역: {train.arrplacename}</p>\r\n            <p>요금: {train.adultcharge}</p>\r\n            <p>기차 번호: {train.trainno}</p>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TrainList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}