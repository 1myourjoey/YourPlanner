{"ast":null,"code":"\"use strict\";\n\nvar _defineProperty = require(\"C:/Users/\\uC724\\uAE30\\uC12D/Documents/GitHub/YourPlanner/src/main/frontend/node_modules/@babel/runtime/helpers/defineProperty.js\").default;\nexports.EraParser = void 0;\nvar _Parser = require(\"../Parser.js\");\nclass EraParser extends _Parser.Parser {\n  constructor() {\n    super(...arguments);\n    _defineProperty(this, \"priority\", 140);\n    _defineProperty(this, \"incompatibleTokens\", [\"R\", \"u\", \"t\", \"T\"]);\n  }\n  parse(dateString, token, match) {\n    switch (token) {\n      // AD, BC\n      case \"G\":\n      case \"GG\":\n      case \"GGG\":\n        return match.era(dateString, {\n          width: \"abbreviated\"\n        }) || match.era(dateString, {\n          width: \"narrow\"\n        });\n\n      // A, B\n      case \"GGGGG\":\n        return match.era(dateString, {\n          width: \"narrow\"\n        });\n      // Anno Domini, Before Christ\n      case \"GGGG\":\n      default:\n        return match.era(dateString, {\n          width: \"wide\"\n        }) || match.era(dateString, {\n          width: \"abbreviated\"\n        }) || match.era(dateString, {\n          width: \"narrow\"\n        });\n    }\n  }\n  set(date, flags, value) {\n    flags.era = value;\n    date.setFullYear(value, 0, 1);\n    date.setHours(0, 0, 0, 0);\n    return date;\n  }\n}\nexports.EraParser = EraParser;","map":{"version":3,"names":["_defineProperty","require","default","exports","EraParser","_Parser","Parser","constructor","arguments","parse","dateString","token","match","era","width","set","date","flags","value","setFullYear","setHours"],"sources":["C:/Users/윤기섭/Documents/GitHub/YourPlanner/src/main/frontend/node_modules/date-fns/parse/_lib/parsers/EraParser.js"],"sourcesContent":["\"use strict\";\r\nexports.EraParser = void 0;\r\n\r\nvar _Parser = require(\"../Parser.js\");\r\n\r\nclass EraParser extends _Parser.Parser {\r\n  priority = 140;\r\n\r\n  parse(dateString, token, match) {\r\n    switch (token) {\r\n      // AD, BC\r\n      case \"G\":\r\n      case \"GG\":\r\n      case \"GGG\":\r\n        return (\r\n          match.era(dateString, { width: \"abbreviated\" }) ||\r\n          match.era(dateString, { width: \"narrow\" })\r\n        );\r\n\r\n      // A, B\r\n      case \"GGGGG\":\r\n        return match.era(dateString, { width: \"narrow\" });\r\n      // Anno Domini, Before Christ\r\n      case \"GGGG\":\r\n      default:\r\n        return (\r\n          match.era(dateString, { width: \"wide\" }) ||\r\n          match.era(dateString, { width: \"abbreviated\" }) ||\r\n          match.era(dateString, { width: \"narrow\" })\r\n        );\r\n    }\r\n  }\r\n\r\n  set(date, flags, value) {\r\n    flags.era = value;\r\n    date.setFullYear(value, 0, 1);\r\n    date.setHours(0, 0, 0, 0);\r\n    return date;\r\n  }\r\n\r\n  incompatibleTokens = [\"R\", \"u\", \"t\", \"T\"];\r\n}\r\nexports.EraParser = EraParser;\r\n"],"mappings":"AAAA,YAAY;;AAAC,IAAAA,eAAA,GAAAC,OAAA,qIAAAC,OAAA;AACbC,OAAO,CAACC,SAAS,GAAG,KAAK,CAAC;AAE1B,IAAIC,OAAO,GAAGJ,OAAO,CAAC,cAAc,CAAC;AAErC,MAAMG,SAAS,SAASC,OAAO,CAACC,MAAM,CAAC;EAAAC,YAAA;IAAA,SAAAC,SAAA;IAAAR,eAAA,mBAC1B,GAAG;IAAAA,eAAA,6BAkCO,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EAAA;EAhCzCS,KAAKA,CAACC,UAAU,EAAEC,KAAK,EAAEC,KAAK,EAAE;IAC9B,QAAQD,KAAK;MACX;MACA,KAAK,GAAG;MACR,KAAK,IAAI;MACT,KAAK,KAAK;QACR,OACEC,KAAK,CAACC,GAAG,CAACH,UAAU,EAAE;UAAEI,KAAK,EAAE;QAAc,CAAC,CAAC,IAC/CF,KAAK,CAACC,GAAG,CAACH,UAAU,EAAE;UAAEI,KAAK,EAAE;QAAS,CAAC,CAAC;;MAG9C;MACA,KAAK,OAAO;QACV,OAAOF,KAAK,CAACC,GAAG,CAACH,UAAU,EAAE;UAAEI,KAAK,EAAE;QAAS,CAAC,CAAC;MACnD;MACA,KAAK,MAAM;MACX;QACE,OACEF,KAAK,CAACC,GAAG,CAACH,UAAU,EAAE;UAAEI,KAAK,EAAE;QAAO,CAAC,CAAC,IACxCF,KAAK,CAACC,GAAG,CAACH,UAAU,EAAE;UAAEI,KAAK,EAAE;QAAc,CAAC,CAAC,IAC/CF,KAAK,CAACC,GAAG,CAACH,UAAU,EAAE;UAAEI,KAAK,EAAE;QAAS,CAAC,CAAC;IAEhD;EACF;EAEAC,GAAGA,CAACC,IAAI,EAAEC,KAAK,EAAEC,KAAK,EAAE;IACtBD,KAAK,CAACJ,GAAG,GAAGK,KAAK;IACjBF,IAAI,CAACG,WAAW,CAACD,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC;IAC7BF,IAAI,CAACI,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IACzB,OAAOJ,IAAI;EACb;AAGF;AACAb,OAAO,CAACC,SAAS,GAAGA,SAAS","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}