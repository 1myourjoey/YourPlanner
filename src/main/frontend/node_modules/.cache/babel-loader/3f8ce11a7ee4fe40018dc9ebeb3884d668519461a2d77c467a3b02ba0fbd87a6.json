{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\cy\\\\Documents\\\\GitHub\\\\YourPlanner\\\\src\\\\main\\\\frontend\\\\src\\\\components\\\\js\\\\TrainList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport '../css/TrainList.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TrainList = ({\n  depPlaceId,\n  arrPlaceId,\n  startDate,\n  addTrain,\n  removeTrain,\n  isTrainSelected\n}) => {\n  _s();\n  const [trainData, setTrainData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const formatDate = datetime => {\n    if (typeof datetime !== 'string') {\n      datetime = datetime.toString();\n    }\n    const year = datetime.substring(0, 4);\n    const month = datetime.substring(4, 6);\n    const day = datetime.substring(6, 8);\n    const hour = datetime.substring(8, 10);\n    const minute = datetime.substring(10, 12);\n    return `${month}월 ${day}일 ${hour}시 ${minute}분`;\n  };\n  useEffect(() => {\n    const fetchTrainData = async () => {\n      try {\n        var _response$data$respon, _response$data$respon2, _response$data$respon3;\n        setLoading(true);\n        const serviceKey = 'LOr7zB0jDV+lQ6WGnVGCY+vG22rkxdPRMM36e7spCgFeKjRlh488A09FtjZbwnw6bEMMW3Virexop2ihnhIe7g==';\n        const formattedDate = startDate.replace(/-/g, '');\n        const response = await axios.get('http://apis.data.go.kr/1613000/TrainInfoService/getStrtpntAlocFndTrainInfo', {\n          params: {\n            serviceKey,\n            depPlaceId,\n            arrPlaceId,\n            depPlandTime: formattedDate,\n            _type: 'json',\n            trainGradeCode: '00'\n          }\n        });\n        const items = (_response$data$respon = response.data.response) === null || _response$data$respon === void 0 ? void 0 : (_response$data$respon2 = _response$data$respon.body) === null || _response$data$respon2 === void 0 ? void 0 : (_response$data$respon3 = _response$data$respon2.items) === null || _response$data$respon3 === void 0 ? void 0 : _response$data$respon3.item;\n        if (items && Array.isArray(items)) {\n          const extractedData = items.map(item => ({\n            traingradename: item.traingradename,\n            depplandtime: item.depplandtime,\n            arrplandtime: item.arrplandtime,\n            depplacename: item.depplacename,\n            arrplacename: item.arrplacename,\n            adultcharge: item.adultcharge,\n            trainno: item.trainno\n          }));\n          setTrainData(extractedData);\n        } else if (items) {\n          const extractedData = [{\n            traingradename: items.traingradename,\n            depplandtime: items.depplandtime,\n            arrplandtime: items.arrplandtime,\n            depplacename: items.depplacename,\n            arrplacename: items.arrplacename,\n            adultcharge: items.adultcharge,\n            trainno: items.trainno\n          }];\n          setTrainData(extractedData);\n        } else {\n          setTrainData([]);\n        }\n      } catch (error) {\n        console.error('Error fetching data:', error);\n        setError(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    if (depPlaceId && arrPlaceId && startDate) {\n      fetchTrainData();\n    }\n  }, [depPlaceId, arrPlaceId, startDate]);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"\\uB85C\\uB529 \\uC911...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 16\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"\\uB370\\uC774\\uD130\\uB97C \\uBD88\\uB7EC\\uC624\\uB294 \\uC911 \\uC624\\uB958\\uAC00 \\uBC1C\\uC0DD\\uD588\\uC2B5\\uB2C8\\uB2E4: \", error.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: trainData.map((train, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"train-list-item\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"train-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: [train.traingradename, \" / \\uCD9C\\uBC1C: \", train.depplacename, \"\\uC5ED \", formatDate(train.depplandtime), \" / \\uB3C4\\uCC29: \", train.arrplacename, \"\\uC5ED \", formatDate(train.arrplandtime), \" / \\uC694\\uAE08: \", train.adultcharge, \"\\uC6D0 / \\uC5F4\\uCC28\\uBC88\\uD638: \", train.trainno]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"train-actions\",\n            children: isTrainSelected(train.trainno) ? /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => removeTrain(train.trainno),\n              children: \"\\uCCB4\\uD06C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 37\n            }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => addTrain(train),\n              children: \"\\uCD94\\uAC00\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 25\n        }, this)\n      }, train.trainno || index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 9\n  }, this);\n};\n_s(TrainList, \"Esr68gPQqQS1sOARNogvqddn5oc=\");\n_c = TrainList;\nexport default TrainList;\nvar _c;\n$RefreshReg$(_c, \"TrainList\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","TrainList","depPlaceId","arrPlaceId","startDate","addTrain","removeTrain","isTrainSelected","_s","trainData","setTrainData","loading","setLoading","error","setError","formatDate","datetime","toString","year","substring","month","day","hour","minute","fetchTrainData","_response$data$respon","_response$data$respon2","_response$data$respon3","serviceKey","formattedDate","replace","response","get","params","depPlandTime","_type","trainGradeCode","items","data","body","item","Array","isArray","extractedData","map","traingradename","depplandtime","arrplandtime","depplacename","arrplacename","adultcharge","trainno","console","children","fileName","_jsxFileName","lineNumber","columnNumber","message","train","index","className","onClick","_c","$RefreshReg$"],"sources":["C:/Users/cy/Documents/GitHub/YourPlanner/src/main/frontend/src/components/js/TrainList.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport '../css/TrainList.css';\r\n\r\nconst TrainList = ({ depPlaceId, arrPlaceId, startDate, addTrain, removeTrain, isTrainSelected }) => {\r\n    const [trainData, setTrainData] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState(null);\r\n\r\n    const formatDate = (datetime) => {\r\n        if (typeof datetime !== 'string') {\r\n            datetime = datetime.toString();\r\n        }\r\n        const year = datetime.substring(0, 4);\r\n        const month = datetime.substring(4, 6);\r\n        const day = datetime.substring(6, 8);\r\n        const hour = datetime.substring(8, 10);\r\n        const minute = datetime.substring(10, 12);\r\n        return `${month}월 ${day}일 ${hour}시 ${minute}분`;\r\n    };\r\n\r\n    useEffect(() => {\r\n        const fetchTrainData = async () => {\r\n            try {\r\n                setLoading(true);\r\n                const serviceKey = 'LOr7zB0jDV+lQ6WGnVGCY+vG22rkxdPRMM36e7spCgFeKjRlh488A09FtjZbwnw6bEMMW3Virexop2ihnhIe7g==';\r\n                const formattedDate = startDate.replace(/-/g, '');\r\n                const response = await axios.get('http://apis.data.go.kr/1613000/TrainInfoService/getStrtpntAlocFndTrainInfo', {\r\n                    params: {\r\n                        serviceKey,\r\n                        depPlaceId,\r\n                        arrPlaceId,\r\n                        depPlandTime: formattedDate,\r\n                        _type: 'json',\r\n                        trainGradeCode: '00'\r\n                    }\r\n                });\r\n\r\n                const items = response.data.response?.body?.items?.item;\r\n\r\n                if (items && Array.isArray(items)) {\r\n                    const extractedData = items.map(item => ({\r\n                        traingradename: item.traingradename,\r\n                        depplandtime: item.depplandtime,\r\n                        arrplandtime: item.arrplandtime,\r\n                        depplacename: item.depplacename,\r\n                        arrplacename: item.arrplacename,\r\n                        adultcharge: item.adultcharge,\r\n                        trainno: item.trainno\r\n                    }));\r\n                    setTrainData(extractedData);\r\n                } else if (items) {\r\n                    const extractedData = [{\r\n                        traingradename: items.traingradename,\r\n                        depplandtime: items.depplandtime,\r\n                        arrplandtime: items.arrplandtime,\r\n                        depplacename: items.depplacename,\r\n                        arrplacename: items.arrplacename,\r\n                        adultcharge: items.adultcharge,\r\n                        trainno: items.trainno\r\n                    }];\r\n                    setTrainData(extractedData);\r\n                } else {\r\n                    setTrainData([]);\r\n                }\r\n            } catch (error) {\r\n                console.error('Error fetching data:', error);\r\n                setError(error);\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        };\r\n\r\n        if (depPlaceId && arrPlaceId && startDate) {\r\n            fetchTrainData();\r\n        }\r\n    }, [depPlaceId, arrPlaceId, startDate]);\r\n\r\n    if (loading) {\r\n        return <div>로딩 중...</div>;\r\n    }\r\n\r\n    if (error) {\r\n        return <div>데이터를 불러오는 중 오류가 발생했습니다: {error.message}</div>;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <ul>\r\n                {trainData.map((train, index) => (\r\n                    <li key={train.trainno || index} className=\"train-list-item\">\r\n                        <div className=\"train-info\">\r\n                            <span>{train.traingradename} / 출발: {train.depplacename}역 {formatDate(train.depplandtime)} / 도착: {train.arrplacename}역 {formatDate(train.arrplandtime)} / 요금: {train.adultcharge}원 / 열차번호: {train.trainno}</span>\r\n                            <span className=\"train-actions\">\r\n                                {isTrainSelected(train.trainno) ? (\r\n                                    <button onClick={() => removeTrain(train.trainno)}>체크</button>\r\n                                ) : (\r\n                                    <button onClick={() => addTrain(train)}>추가</button>\r\n                                )}\r\n                            </span>\r\n                        </div>\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TrainList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}