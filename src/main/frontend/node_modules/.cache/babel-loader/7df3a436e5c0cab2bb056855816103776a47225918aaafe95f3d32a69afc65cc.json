{"ast":null,"code":"\"use strict\";\n\nexports.setWeekYear = setWeekYear;\nvar _index = require(\"./constructFrom.js\");\nvar _index2 = require(\"./differenceInCalendarDays.js\");\nvar _index3 = require(\"./startOfWeekYear.js\");\nvar _index4 = require(\"./toDate.js\");\nvar _index5 = require(\"./_lib/defaultOptions.js\");\n\n/**\r\n * The {@link setWeekYear} function options.\r\n */\n\n/**\r\n * @name setWeekYear\r\n * @category Week-Numbering Year Helpers\r\n * @summary Set the local week-numbering year to the given date.\r\n *\r\n * @description\r\n * Set the local week-numbering year to the given date,\r\n * saving the week number and the weekday number.\r\n * The exact calculation depends on the values of\r\n * `options.weekStartsOn` (which is the index of the first day of the week)\r\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\r\n * the first week of the week-numbering year)\r\n *\r\n * Week numbering: https://en.wikipedia.org/wiki/Week#The_ISO_week_date_system\r\n *\r\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\r\n *\r\n * @param date - The date to be changed\r\n * @param weekYear - The local week-numbering year of the new date\r\n * @param options - An object with options\r\n *\r\n * @returns The new date with the local week-numbering year set\r\n *\r\n * @example\r\n * // Set the local week-numbering year 2004 to 2 January 2010 with default options:\r\n * const result = setWeekYear(new Date(2010, 0, 2), 2004)\r\n * //=> Sat Jan 03 2004 00:00:00\r\n *\r\n * @example\r\n * // Set the local week-numbering year 2004 to 2 January 2010,\r\n * // if Monday is the first day of week\r\n * // and 4 January is always in the first week of the year:\r\n * const result = setWeekYear(new Date(2010, 0, 2), 2004, {\r\n *   weekStartsOn: 1,\r\n *   firstWeekContainsDate: 4\r\n * })\r\n * //=> Sat Jan 01 2005 00:00:00\r\n */\nfunction setWeekYear(date, weekYear, options) {\n  var _ref, _ref2, _ref3, _options$firstWeekCon, _options$locale, _defaultOptions$local;\n  const defaultOptions = (0, _index5.getDefaultOptions)();\n  const firstWeekContainsDate = (_ref = (_ref2 = (_ref3 = (_options$firstWeekCon = options === null || options === void 0 ? void 0 : options.firstWeekContainsDate) !== null && _options$firstWeekCon !== void 0 ? _options$firstWeekCon : options === null || options === void 0 || (_options$locale = options.locale) === null || _options$locale === void 0 || (_options$locale = _options$locale.options) === null || _options$locale === void 0 ? void 0 : _options$locale.firstWeekContainsDate) !== null && _ref3 !== void 0 ? _ref3 : defaultOptions.firstWeekContainsDate) !== null && _ref2 !== void 0 ? _ref2 : (_defaultOptions$local = defaultOptions.locale) === null || _defaultOptions$local === void 0 || (_defaultOptions$local = _defaultOptions$local.options) === null || _defaultOptions$local === void 0 ? void 0 : _defaultOptions$local.firstWeekContainsDate) !== null && _ref !== void 0 ? _ref : 1;\n  let _date = (0, _index4.toDate)(date);\n  const diff = (0, _index2.differenceInCalendarDays)(_date, (0, _index3.startOfWeekYear)(_date, options));\n  const firstWeek = (0, _index.constructFrom)(date, 0);\n  firstWeek.setFullYear(weekYear, 0, firstWeekContainsDate);\n  firstWeek.setHours(0, 0, 0, 0);\n  _date = (0, _index3.startOfWeekYear)(firstWeek, options);\n  _date.setDate(_date.getDate() + diff);\n  return _date;\n}","map":{"version":3,"names":["exports","setWeekYear","_index","require","_index2","_index3","_index4","_index5","date","weekYear","options","_ref","_ref2","_ref3","_options$firstWeekCon","_options$locale","_defaultOptions$local","defaultOptions","getDefaultOptions","firstWeekContainsDate","locale","_date","toDate","diff","differenceInCalendarDays","startOfWeekYear","firstWeek","constructFrom","setFullYear","setHours","setDate","getDate"],"sources":["C:/Users/cy/Documents/GitHub/YourPlanner/src/main/frontend/node_modules/date-fns/setWeekYear.js"],"sourcesContent":["\"use strict\";\r\nexports.setWeekYear = setWeekYear;\r\nvar _index = require(\"./constructFrom.js\");\r\nvar _index2 = require(\"./differenceInCalendarDays.js\");\r\nvar _index3 = require(\"./startOfWeekYear.js\");\r\nvar _index4 = require(\"./toDate.js\");\r\n\r\nvar _index5 = require(\"./_lib/defaultOptions.js\");\r\n\r\n/**\r\n * The {@link setWeekYear} function options.\r\n */\r\n\r\n/**\r\n * @name setWeekYear\r\n * @category Week-Numbering Year Helpers\r\n * @summary Set the local week-numbering year to the given date.\r\n *\r\n * @description\r\n * Set the local week-numbering year to the given date,\r\n * saving the week number and the weekday number.\r\n * The exact calculation depends on the values of\r\n * `options.weekStartsOn` (which is the index of the first day of the week)\r\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\r\n * the first week of the week-numbering year)\r\n *\r\n * Week numbering: https://en.wikipedia.org/wiki/Week#The_ISO_week_date_system\r\n *\r\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\r\n *\r\n * @param date - The date to be changed\r\n * @param weekYear - The local week-numbering year of the new date\r\n * @param options - An object with options\r\n *\r\n * @returns The new date with the local week-numbering year set\r\n *\r\n * @example\r\n * // Set the local week-numbering year 2004 to 2 January 2010 with default options:\r\n * const result = setWeekYear(new Date(2010, 0, 2), 2004)\r\n * //=> Sat Jan 03 2004 00:00:00\r\n *\r\n * @example\r\n * // Set the local week-numbering year 2004 to 2 January 2010,\r\n * // if Monday is the first day of week\r\n * // and 4 January is always in the first week of the year:\r\n * const result = setWeekYear(new Date(2010, 0, 2), 2004, {\r\n *   weekStartsOn: 1,\r\n *   firstWeekContainsDate: 4\r\n * })\r\n * //=> Sat Jan 01 2005 00:00:00\r\n */\r\nfunction setWeekYear(date, weekYear, options) {\r\n  const defaultOptions = (0, _index5.getDefaultOptions)();\r\n  const firstWeekContainsDate =\r\n    options?.firstWeekContainsDate ??\r\n    options?.locale?.options?.firstWeekContainsDate ??\r\n    defaultOptions.firstWeekContainsDate ??\r\n    defaultOptions.locale?.options?.firstWeekContainsDate ??\r\n    1;\r\n\r\n  let _date = (0, _index4.toDate)(date);\r\n  const diff = (0, _index2.differenceInCalendarDays)(\r\n    _date,\r\n    (0, _index3.startOfWeekYear)(_date, options),\r\n  );\r\n  const firstWeek = (0, _index.constructFrom)(date, 0);\r\n  firstWeek.setFullYear(weekYear, 0, firstWeekContainsDate);\r\n  firstWeek.setHours(0, 0, 0, 0);\r\n  _date = (0, _index3.startOfWeekYear)(firstWeek, options);\r\n  _date.setDate(_date.getDate() + diff);\r\n  return _date;\r\n}\r\n"],"mappings":"AAAA,YAAY;;AACZA,OAAO,CAACC,WAAW,GAAGA,WAAW;AACjC,IAAIC,MAAM,GAAGC,OAAO,CAAC,oBAAoB,CAAC;AAC1C,IAAIC,OAAO,GAAGD,OAAO,CAAC,+BAA+B,CAAC;AACtD,IAAIE,OAAO,GAAGF,OAAO,CAAC,sBAAsB,CAAC;AAC7C,IAAIG,OAAO,GAAGH,OAAO,CAAC,aAAa,CAAC;AAEpC,IAAII,OAAO,GAAGJ,OAAO,CAAC,0BAA0B,CAAC;;AAEjD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASF,WAAWA,CAACO,IAAI,EAAEC,QAAQ,EAAEC,OAAO,EAAE;EAAA,IAAAC,IAAA,EAAAC,KAAA,EAAAC,KAAA,EAAAC,qBAAA,EAAAC,eAAA,EAAAC,qBAAA;EAC5C,MAAMC,cAAc,GAAG,CAAC,CAAC,EAAEV,OAAO,CAACW,iBAAiB,EAAE,CAAC;EACvD,MAAMC,qBAAqB,IAAAR,IAAA,IAAAC,KAAA,IAAAC,KAAA,IAAAC,qBAAA,GACzBJ,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAES,qBAAqB,cAAAL,qBAAA,cAAAA,qBAAA,GAC9BJ,OAAO,aAAPA,OAAO,gBAAAK,eAAA,GAAPL,OAAO,CAAEU,MAAM,cAAAL,eAAA,gBAAAA,eAAA,GAAfA,eAAA,CAAiBL,OAAO,cAAAK,eAAA,uBAAxBA,eAAA,CAA0BI,qBAAqB,cAAAN,KAAA,cAAAA,KAAA,GAC/CI,cAAc,CAACE,qBAAqB,cAAAP,KAAA,cAAAA,KAAA,IAAAI,qBAAA,GACpCC,cAAc,CAACG,MAAM,cAAAJ,qBAAA,gBAAAA,qBAAA,GAArBA,qBAAA,CAAuBN,OAAO,cAAAM,qBAAA,uBAA9BA,qBAAA,CAAgCG,qBAAqB,cAAAR,IAAA,cAAAA,IAAA,GACrD,CAAC;EAEH,IAAIU,KAAK,GAAG,CAAC,CAAC,EAAEf,OAAO,CAACgB,MAAM,EAAEd,IAAI,CAAC;EACrC,MAAMe,IAAI,GAAG,CAAC,CAAC,EAAEnB,OAAO,CAACoB,wBAAwB,EAC/CH,KAAK,EACL,CAAC,CAAC,EAAEhB,OAAO,CAACoB,eAAe,EAAEJ,KAAK,EAAEX,OAAO,CAC7C,CAAC;EACD,MAAMgB,SAAS,GAAG,CAAC,CAAC,EAAExB,MAAM,CAACyB,aAAa,EAAEnB,IAAI,EAAE,CAAC,CAAC;EACpDkB,SAAS,CAACE,WAAW,CAACnB,QAAQ,EAAE,CAAC,EAAEU,qBAAqB,CAAC;EACzDO,SAAS,CAACG,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EAC9BR,KAAK,GAAG,CAAC,CAAC,EAAEhB,OAAO,CAACoB,eAAe,EAAEC,SAAS,EAAEhB,OAAO,CAAC;EACxDW,KAAK,CAACS,OAAO,CAACT,KAAK,CAACU,OAAO,CAAC,CAAC,GAAGR,IAAI,CAAC;EACrC,OAAOF,KAAK;AACd","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}