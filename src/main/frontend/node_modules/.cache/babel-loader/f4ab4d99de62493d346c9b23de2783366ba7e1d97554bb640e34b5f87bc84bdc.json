{"ast":null,"code":"import React,{useState,useEffect}from'react';import{Link}from'react-router-dom';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function MyPlan(){const[loginId,setLoginId]=useState('');const[pw,setPw]=useState('');const[email,setEmail]=useState('');const[tel,setTel]=useState('');useEffect(()=>{// 세션 스토리지에서 정보 가져오기\nconst storedLoginId=sessionStorage.getItem('loginId');const storedPw=sessionStorage.getItem('pw');const storedEmail=sessionStorage.getItem('email');const storedTel=sessionStorage.getItem('tel');if(storedLoginId)setLoginId(storedLoginId);if(storedPw)setPw(storedPw);if(storedEmail)setEmail(storedEmail);if(storedTel)setTel(storedTel);},[]);const handleSubmit=event=>{event.preventDefault();console.log('제출된 폼:',{loginId,pw,email,tel});};const getDisplayPassword=()=>{if(pw.length===0){return pw;}return pw[0]+'*'.repeat(pw.length-1);};const handleDelete=async()=>{const userNo=sessionStorage.getItem('userNo');console.log('Retrieved userNo from sessionStorage:',userNo);if(!userNo){console.error('사용자 번호가 없습니다.');return;}try{const response=await fetch(\"/api/users/delete/\".concat(userNo),{method:'DELETE'});if(response.ok){console.log('삭제된 사용자:',{userNo});sessionStorage.clear();window.location.href='/';}else{console.error('삭제 실패');}}catch(error){console.error('삭제 요청 중 오류 발생:',error);}};//   수정\nconst handleUpdate=async()=>{const userNo=sessionStorage.getItem('userNo');console.log('Retrieved userNo from sessionStorage:',userNo);if(!userNo){console.error('사용자 번호가 없습니다.');return;}const updatedUser={userNo,loginId,pw,email,tel};try{const response=await fetch('/api/users/update',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(updatedUser)});if(response.ok){console.log('사용자 정보가 업데이트되었습니다.');// 추가 작업 수행 가능\n}else{console.error('사용자 정보 업데이트 실패');}}catch(error){console.error('사용자 정보 업데이트 요청 중 오류 발생:',error);}};return/*#__PURE__*/_jsxs(\"div\",{className:\"mypage-container\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"\\uD68C\\uC6D0 \\uC815\\uBCF4\"}),/*#__PURE__*/_jsx(Link,{to:\"/mypage\",children:\"\\uB098\\uC758 \\uD398\\uC774\\uC9C0\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"input-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"loginId\",children:\"\\uC544\\uC774\\uB514:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"loginId\",value:loginId,onChange:e=>setLoginId(e.target.value),required:true})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"input-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"pw\",children:\"\\uBE44\\uBC00\\uBC88\\uD638:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"pw\",value:getDisplayPassword(),onChange:e=>setPw(e.target.value),required:true})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"input-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"email\",children:\"\\uC774\\uBA54\\uC77C:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"email\",id:\"email\",value:email,onChange:e=>setEmail(e.target.value),required:true})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"input-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"tel\",children:\"\\uC804\\uD654\\uBC88\\uD638:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"tel\",id:\"tel\",value:tel,onChange:e=>setTel(e.target.value),required:true})]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",onClick:handleUpdate,children:\"\\uC218\\uC815\"}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:handleDelete,children:\"\\uC0AD\\uC81C\"})]})]});}export default MyPlan;","map":{"version":3,"names":["React","useState","useEffect","Link","jsx","_jsx","jsxs","_jsxs","MyPlan","loginId","setLoginId","pw","setPw","email","setEmail","tel","setTel","storedLoginId","sessionStorage","getItem","storedPw","storedEmail","storedTel","handleSubmit","event","preventDefault","console","log","getDisplayPassword","length","repeat","handleDelete","userNo","error","response","fetch","concat","method","ok","clear","window","location","href","handleUpdate","updatedUser","headers","body","JSON","stringify","className","children","to","onSubmit","htmlFor","type","id","value","onChange","e","target","required","onClick"],"sources":["C:/Users/admin/Documents/GitHub/YourPlanner/src/main/frontend/src/components/js/MyPlan.jsx"],"sourcesContent":["\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction MyPlan() {\r\n  const [loginId, setLoginId] = useState('');\r\n    const [pw, setPw] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [tel, setTel] = useState('');\r\n\r\n    useEffect(() => {\r\n      // 세션 스토리지에서 정보 가져오기\r\n      const storedLoginId = sessionStorage.getItem('loginId');\r\n      const storedPw = sessionStorage.getItem('pw');\r\n      const storedEmail = sessionStorage.getItem('email');\r\n      const storedTel = sessionStorage.getItem('tel');\r\n\r\n      if (storedLoginId) setLoginId(storedLoginId);\r\n      if (storedPw) setPw(storedPw);\r\n      if (storedEmail) setEmail(storedEmail);\r\n      if (storedTel) setTel(storedTel);\r\n    }, []);\r\n\r\n    const handleSubmit = (event) => {\r\n      event.preventDefault();\r\n      console.log('제출된 폼:', { loginId, pw, email, tel });\r\n    };\r\n\r\n    const getDisplayPassword = () => {\r\n      if (pw.length === 0) {\r\n        return pw;\r\n      }\r\n      return pw[0] + '*'.repeat(pw.length - 1);\r\n    };\r\n\r\n    const handleDelete = async () => {\r\n      const userNo = sessionStorage.getItem('userNo');\r\n      console.log('Retrieved userNo from sessionStorage:', userNo);\r\n\r\n      if (!userNo) {\r\n        console.error('사용자 번호가 없습니다.');\r\n        return;\r\n      }\r\n\r\n      try {\r\n        const response = await fetch(`/api/users/delete/${userNo}`, {\r\n          method: 'DELETE',\r\n        });\r\n\r\n        if (response.ok) {\r\n          console.log('삭제된 사용자:', { userNo });\r\n          sessionStorage.clear();\r\n          window.location.href = '/';\r\n        } else {\r\n          console.error('삭제 실패');\r\n        }\r\n      } catch (error) {\r\n        console.error('삭제 요청 중 오류 발생:', error);\r\n      }\r\n    };\r\n  //   수정\r\n  const handleUpdate = async () => {\r\n      const userNo = sessionStorage.getItem('userNo');\r\n      console.log('Retrieved userNo from sessionStorage:', userNo);\r\n\r\n      if (!userNo) {\r\n          console.error('사용자 번호가 없습니다.');\r\n          return;\r\n      }\r\n\r\n      const updatedUser = {\r\n          userNo,\r\n          loginId,\r\n          pw,\r\n          email,\r\n          tel\r\n      };\r\n\r\n      try {\r\n          const response = await fetch('/api/users/update', {\r\n              method: 'POST',\r\n              headers: {\r\n                  'Content-Type': 'application/json'\r\n              },\r\n              body: JSON.stringify(updatedUser)\r\n          });\r\n\r\n          if (response.ok) {\r\n              console.log('사용자 정보가 업데이트되었습니다.');\r\n              // 추가 작업 수행 가능\r\n          } else {\r\n              console.error('사용자 정보 업데이트 실패');\r\n          }\r\n      } catch (error) {\r\n          console.error('사용자 정보 업데이트 요청 중 오류 발생:', error);\r\n      }\r\n  };\r\n\r\n    return (\r\n      <div className=\"mypage-container\">\r\n        <h2>회원 정보</h2>\r\n        <Link to=\"/mypage\">나의 페이지</Link>\r\n        <form onSubmit={handleSubmit}>\r\n          <div className=\"input-group\">\r\n            <label htmlFor=\"loginId\">아이디:</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"loginId\"\r\n              value={loginId}\r\n              onChange={(e) => setLoginId(e.target.value)}\r\n              required\r\n            />\r\n          </div>\r\n          <div className=\"input-group\">\r\n            <label htmlFor=\"pw\">비밀번호:</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"pw\"\r\n              value={getDisplayPassword()}\r\n              onChange={(e) => setPw(e.target.value)}\r\n              required\r\n            />\r\n          </div>\r\n          <div className=\"input-group\">\r\n            <label htmlFor=\"email\">이메일:</label>\r\n            <input\r\n              type=\"email\"\r\n              id=\"email\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n              required\r\n            />\r\n          </div>\r\n          <div className=\"input-group\">\r\n            <label htmlFor=\"tel\">전화번호:</label>\r\n            <input\r\n              type=\"tel\"\r\n              id=\"tel\"\r\n              value={tel}\r\n              onChange={(e) => setTel(e.target.value)}\r\n              required\r\n            />\r\n          </div>\r\n          <button type=\"submit\" onClick={handleUpdate}>수정</button>\r\n          <button type=\"button\" onClick={handleDelete}>삭제</button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\nexport default MyPlan;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}