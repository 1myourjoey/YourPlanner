{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\Documents\\\\GitHub\\\\YourPlanner\\\\src\\\\main\\\\frontend\\\\src\\\\components\\\\js\\\\Chat.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport '../css/modal.css';\nimport chatIcon from '../img/chat.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Chat() {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const fetchReply = async message => {\n    try {\n      const {\n        data\n      } = await axios.post('/chat', {\n        message\n      });\n      return data.response;\n    } catch (error) {\n      console.error('Error fetching reply:', error);\n      return 'Failed to get response from server';\n    }\n  };\n  const handleSend = async () => {\n    const reply = await fetchReply(input);\n    setMessages(prevMessages => [...prevMessages, {\n      text: input,\n      sender: 'user'\n    }, {\n      text: reply,\n      sender: 'bot'\n    }]);\n    setInput('');\n  };\n  const handleInputChange = e => {\n    setInput(e.target.value);\n  };\n  const handleKeyPress = e => {\n    if (e.key === 'Enter') {\n      handleSend();\n    }\n  };\n  const openModal = () => {\n    setIsModalOpen(true);\n  };\n  const closeModal = () => {\n    setIsModalOpen(false);\n  };\n  useEffect(() => {\n    if (isModalOpen) {\n      setMessages([{\n        text: '무엇을 도와드릴까요?',\n        sender: 'bot'\n      }]);\n    }\n  }, [isModalOpen]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"chatIcon\",\n      src: chatIcon,\n      alt: \"Chat Icon\",\n      onClick: openModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"icon-label\",\n      children: \"AI \\uBE44\\uC11C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this), isModalOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"close\",\n          onClick: closeModal,\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-box\",\n          children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `message ${message.sender}`,\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"message-text\",\n              children: message.text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 19\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-control\",\n              value: input,\n              onChange: handleInputChange,\n              onKeyPress: handleKeyPress\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 10\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-auto\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-primary\",\n              type: \"button\",\n              onClick: handleSend,\n              children: \"Send\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 10\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 8\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n_s(Chat, \"kubAUGAHdPGZMPVAPlGUu4zXGG0=\");\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useState","useEffect","axios","chatIcon","jsxDEV","_jsxDEV","Chat","_s","messages","setMessages","input","setInput","isModalOpen","setIsModalOpen","fetchReply","message","data","post","response","error","console","handleSend","reply","prevMessages","text","sender","handleInputChange","e","target","value","handleKeyPress","key","openModal","closeModal","className","children","src","alt","onClick","fileName","_jsxFileName","lineNumber","columnNumber","map","index","type","onChange","onKeyPress","_c","$RefreshReg$"],"sources":["C:/Users/admin/Documents/GitHub/YourPlanner/src/main/frontend/src/components/js/Chat.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport '../css/modal.css';\r\nimport chatIcon from '../img/chat.png';\r\n\r\nfunction Chat() {\r\n  const [messages, setMessages] = useState([]);\r\n  const [input, setInput] = useState('');\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n\r\n  const fetchReply = async (message) => {\r\n    try {\r\n      const { data } = await axios.post('/chat', { message });\r\n      return data.response;\r\n    } catch (error) {\r\n      console.error('Error fetching reply:', error);\r\n      return 'Failed to get response from server';\r\n    }\r\n  };\r\n\r\n  const handleSend = async () => {\r\n    const reply = await fetchReply(input);\r\n    setMessages(prevMessages => [...prevMessages, { text: input, sender: 'user' }, { text: reply, sender: 'bot' }]);\r\n    setInput('');\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    setInput(e.target.value);\r\n  };\r\n\r\n  const handleKeyPress = (e) => {\r\n    if (e.key === 'Enter') {\r\n      handleSend();\r\n    }\r\n  };\r\n\r\n  const openModal = () => {\r\n    setIsModalOpen(true);\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setIsModalOpen(false);\r\n  };\r\n   useEffect(() => {\r\n      if (isModalOpen) {\r\n        setMessages([{ text: '무엇을 도와드릴까요?', sender: 'bot' }]);\r\n      }\r\n    }, [isModalOpen]);\r\n\r\n  return (\r\n    <div className=\"chat\">\r\n      <img className=\"chatIcon\" src={chatIcon} alt=\"Chat Icon\" onClick={openModal} />\r\n        <div className=\"icon-label\">AI 비서</div>\r\n      {/* 모달 */}\r\n      {isModalOpen && (\r\n        <div className=\"modal\">\r\n          <div className=\"modal-content\">\r\n            <div className=\"close\" onClick={closeModal}>&times;</div>\r\n\r\n            {/* 대화 표시 */}\r\n            <div className=\"chat-box\">\r\n              {messages.map((message, index) => (\r\n                <div key={index} className={`message ${message.sender}`}>\r\n                  <p className=\"message-text\">{message.text}</p>\r\n                </div>\r\n              ))}\r\n            </div>\r\n\r\n            {/* 입력 필드 */}\r\n     <div className=\"row mb-3\">\r\n       <div className=\"col\">\r\n         <input type=\"text\" className=\"form-control\" value={input} onChange={handleInputChange} onKeyPress={handleKeyPress} />\r\n       </div>\r\n       <div className=\"col-auto\">\r\n         <button className=\"btn btn-primary\" type=\"button\" onClick={handleSend}>Send</button>\r\n       </div>\r\n     </div>\r\n            </div>\r\n          </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Chat;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}