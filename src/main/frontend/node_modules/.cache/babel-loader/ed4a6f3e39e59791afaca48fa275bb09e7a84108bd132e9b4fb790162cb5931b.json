{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\cy\\\\Documents\\\\GitHub\\\\YourPlanner\\\\src\\\\main\\\\frontend\\\\src\\\\components\\\\js\\\\DummyListHotel.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport '../css/ListComponent.css';\nimport RecommendedPlaces from './RecommendedPlaces';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DummyListHotel = ({\n  areaCode,\n  sigunguCode,\n  addData,\n  setLoading\n}) => {\n  _s();\n  const [data, setData] = useState([]);\n  const [page, setPage] = useState(1); // 페이지 번호 상태\n\n  // 초기 로딩 시 데이터를 가져오는 함수\n  const fetchInitialData = async () => {\n    try {\n      setLoading(true); // 로딩 상태 시작\n      const response = await fetch(`http://apis.data.go.kr/B551011/KorService1/areaBasedList1?serviceKey=5uJ1mFn4tOfEwReTW3dupjd4w2n5kEHO5nciT%2BDVGAVWTl90sysBKbMTIlIxLW5lCPo1VmpZ%2FXggxU84GhG81g%3D%3D&pageNo=1&numOfRows=10&MobileApp=AppTest&MobileOS=ETC&arrange=A&areaCode=${areaCode}&contentTypeId=32`);\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      const responseData = await response.text(); // XML 데이터를 텍스트로 가져옴\n      const parser = new DOMParser();\n      const xmlData = parser.parseFromString(responseData, 'text/xml');\n      const items = xmlData.getElementsByTagName('item');\n      const extractedData = Array.from(items).map(item => {\n        var _item$getElementsByTa;\n        return {\n          title: item.getElementsByTagName('title')[0].textContent,\n          addr1: item.getElementsByTagName('addr1')[0].textContent,\n          contenttypeid: item.getElementsByTagName('contenttypeid')[0].textContent,\n          firstimage2: ((_item$getElementsByTa = item.getElementsByTagName('firstimage2')[0]) === null || _item$getElementsByTa === void 0 ? void 0 : _item$getElementsByTa.textContent) || ''\n        };\n      });\n      setData(extractedData); // 초기 데이터 설정\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    } finally {\n      setLoading(false); // 로딩 상태 종료\n    }\n  };\n\n  // 더보기 버튼 클릭 시 데이터를 가져오는 함수\n  const fetchMoreData = async pageNumber => {\n    try {\n      setLoading(true); // 로딩 상태 시작\n      const response = await fetch(`http://apis.data.go.kr/B551011/KorService1/areaBasedList1?serviceKey=5uJ1mFn4tOfEwReTW3dupjd4w2n5kEHO5nciT%2BDVGAVWTl90sysBKbMTIlIxLW5lCPo1VmpZ%2FXggxU84GhG81g%3D%3D&pageNo=${pageNumber}&numOfRows=10&MobileApp=AppTest&MobileOS=ETC&arrange=A&areaCode=${areaCode}&contentTypeId=32`);\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      const responseData = await response.text(); // XML 데이터를 텍스트로 가져옴\n      const parser = new DOMParser();\n      const xmlData = parser.parseFromString(responseData, 'text/xml');\n      const items = xmlData.getElementsByTagName('item');\n      const extractedData = Array.from(items).map(item => {\n        var _item$getElementsByTa2;\n        return {\n          title: item.getElementsByTagName('title')[0].textContent,\n          addr1: item.getElementsByTagName('addr1')[0].textContent,\n          contenttypeid: item.getElementsByTagName('contenttypeid')[0].textContent,\n          firstimage2: ((_item$getElementsByTa2 = item.getElementsByTagName('firstimage2')[0]) === null || _item$getElementsByTa2 === void 0 ? void 0 : _item$getElementsByTa2.textContent) || ''\n        };\n      });\n      setData(prevData => [...prevData, ...extractedData]); // 새로운 데이터를 기존 데이터에 추가\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    } finally {\n      setLoading(false); // 로딩 상태 종료\n    }\n  };\n  useEffect(() => {\n    fetchInitialData(); // 초기 로딩 시 데이터 가져오기\n  }, [areaCode]);\n  useEffect(() => {\n    if (page > 1) {\n      fetchMoreData(page); // 페이지가 변경될 때만 더 많은 데이터를 가져옴\n    }\n  }, [page]);\n  const loadMore = () => {\n    setPage(prevPage => prevPage + 1); // 페이지 번호 증가\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(RecommendedPlaces, {\n      data: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 9\n  }, this);\n};\n_s(DummyListHotel, \"P5/yXQ38tP2W3u9BiLtOAtn3iGM=\");\n_c = DummyListHotel;\nexport default DummyListHotel;\nvar _c;\n$RefreshReg$(_c, \"DummyListHotel\");","map":{"version":3,"names":["React","useState","useEffect","RecommendedPlaces","jsxDEV","_jsxDEV","DummyListHotel","areaCode","sigunguCode","addData","setLoading","_s","data","setData","page","setPage","fetchInitialData","response","fetch","ok","Error","responseData","text","parser","DOMParser","xmlData","parseFromString","items","getElementsByTagName","extractedData","Array","from","map","item","_item$getElementsByTa","title","textContent","addr1","contenttypeid","firstimage2","error","console","fetchMoreData","pageNumber","_item$getElementsByTa2","prevData","loadMore","prevPage","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/cy/Documents/GitHub/YourPlanner/src/main/frontend/src/components/js/DummyListHotel.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport '../css/ListComponent.css';\r\n\r\n\r\nimport RecommendedPlaces from './RecommendedPlaces';\r\n\r\nconst DummyListHotel = ({ areaCode, sigunguCode, addData, setLoading }) => {\r\n    const [data, setData] = useState([]);\r\n    const [page, setPage] = useState(1); // 페이지 번호 상태\r\n\r\n    // 초기 로딩 시 데이터를 가져오는 함수\r\n    const fetchInitialData = async () => {\r\n        try {\r\n            setLoading(true); // 로딩 상태 시작\r\n            const response = await fetch(`http://apis.data.go.kr/B551011/KorService1/areaBasedList1?serviceKey=5uJ1mFn4tOfEwReTW3dupjd4w2n5kEHO5nciT%2BDVGAVWTl90sysBKbMTIlIxLW5lCPo1VmpZ%2FXggxU84GhG81g%3D%3D&pageNo=1&numOfRows=10&MobileApp=AppTest&MobileOS=ETC&arrange=A&areaCode=${areaCode}&contentTypeId=32`);\r\n            if (!response.ok) {\r\n                throw new Error('Network response was not ok');\r\n            }\r\n            const responseData = await response.text(); // XML 데이터를 텍스트로 가져옴\r\n            const parser = new DOMParser();\r\n            const xmlData = parser.parseFromString(responseData, 'text/xml');\r\n            const items = xmlData.getElementsByTagName('item');\r\n            const extractedData = Array.from(items).map(item => ({\r\n                title: item.getElementsByTagName('title')[0].textContent,\r\n                addr1: item.getElementsByTagName('addr1')[0].textContent,\r\n                contenttypeid: item.getElementsByTagName('contenttypeid')[0].textContent,\r\n                firstimage2: item.getElementsByTagName('firstimage2')[0]?.textContent || ''\r\n            }));\r\n            setData(extractedData); // 초기 데이터 설정\r\n        } catch (error) {\r\n            console.error('Error fetching data:', error);\r\n        } finally {\r\n            setLoading(false); // 로딩 상태 종료\r\n        }\r\n    };\r\n\r\n    // 더보기 버튼 클릭 시 데이터를 가져오는 함수\r\n    const fetchMoreData = async (pageNumber) => {\r\n        try {\r\n            setLoading(true); // 로딩 상태 시작\r\n            const response = await fetch(`http://apis.data.go.kr/B551011/KorService1/areaBasedList1?serviceKey=5uJ1mFn4tOfEwReTW3dupjd4w2n5kEHO5nciT%2BDVGAVWTl90sysBKbMTIlIxLW5lCPo1VmpZ%2FXggxU84GhG81g%3D%3D&pageNo=${pageNumber}&numOfRows=10&MobileApp=AppTest&MobileOS=ETC&arrange=A&areaCode=${areaCode}&contentTypeId=32`);\r\n            if (!response.ok) {\r\n                throw new Error('Network response was not ok');\r\n            }\r\n            const responseData = await response.text(); // XML 데이터를 텍스트로 가져옴\r\n            const parser = new DOMParser();\r\n            const xmlData = parser.parseFromString(responseData, 'text/xml');\r\n            const items = xmlData.getElementsByTagName('item');\r\n            const extractedData = Array.from(items).map(item => ({\r\n                title: item.getElementsByTagName('title')[0].textContent,\r\n                addr1: item.getElementsByTagName('addr1')[0].textContent,\r\n                contenttypeid: item.getElementsByTagName('contenttypeid')[0].textContent,\r\n                firstimage2: item.getElementsByTagName('firstimage2')[0]?.textContent || ''\r\n            }));\r\n            setData(prevData => [...prevData, ...extractedData]); // 새로운 데이터를 기존 데이터에 추가\r\n        } catch (error) {\r\n            console.error('Error fetching data:', error);\r\n        } finally {\r\n            setLoading(false); // 로딩 상태 종료\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchInitialData(); // 초기 로딩 시 데이터 가져오기\r\n    }, [areaCode]);\r\n\r\n    useEffect(() => {\r\n        if (page > 1) {\r\n            fetchMoreData(page); // 페이지가 변경될 때만 더 많은 데이터를 가져옴\r\n        }\r\n    }, [page]);\r\n\r\n    const loadMore = () => {\r\n        setPage(prevPage => prevPage + 1); // 페이지 번호 증가\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <RecommendedPlaces data={data} />\r\n            {/*<div className=\"load-more-container\">\r\n                <button onClick={loadMore} disabled={loading}>\r\n                    {loading ? '로딩 중...' : '더보기'}\r\n                </button>\r\n            </div>*/}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DummyListHotel;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,0BAA0B;AAGjC,OAAOC,iBAAiB,MAAM,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpD,MAAMC,cAAc,GAAGA,CAAC;EAAEC,QAAQ;EAAEC,WAAW;EAAEC,OAAO;EAAEC;AAAW,CAAC,KAAK;EAAAC,EAAA;EACvE,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACa,IAAI,EAAEC,OAAO,CAAC,GAAGd,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;;EAErC;EACA,MAAMe,gBAAgB,GAAG,MAAAA,CAAA,KAAY;IACjC,IAAI;MACAN,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC;MAClB,MAAMO,QAAQ,GAAG,MAAMC,KAAK,CAAC,iPAAiPX,QAAQ,mBAAmB,CAAC;MAC1S,IAAI,CAACU,QAAQ,CAACE,EAAE,EAAE;QACd,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;MAClD;MACA,MAAMC,YAAY,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC,CAAC,CAAC;MAC5C,MAAMC,MAAM,GAAG,IAAIC,SAAS,CAAC,CAAC;MAC9B,MAAMC,OAAO,GAAGF,MAAM,CAACG,eAAe,CAACL,YAAY,EAAE,UAAU,CAAC;MAChE,MAAMM,KAAK,GAAGF,OAAO,CAACG,oBAAoB,CAAC,MAAM,CAAC;MAClD,MAAMC,aAAa,GAAGC,KAAK,CAACC,IAAI,CAACJ,KAAK,CAAC,CAACK,GAAG,CAACC,IAAI;QAAA,IAAAC,qBAAA;QAAA,OAAK;UACjDC,KAAK,EAAEF,IAAI,CAACL,oBAAoB,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAACQ,WAAW;UACxDC,KAAK,EAAEJ,IAAI,CAACL,oBAAoB,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAACQ,WAAW;UACxDE,aAAa,EAAEL,IAAI,CAACL,oBAAoB,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,CAACQ,WAAW;UACxEG,WAAW,EAAE,EAAAL,qBAAA,GAAAD,IAAI,CAACL,oBAAoB,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,cAAAM,qBAAA,uBAA3CA,qBAAA,CAA6CE,WAAW,KAAI;QAC7E,CAAC;MAAA,CAAC,CAAC;MACHvB,OAAO,CAACgB,aAAa,CAAC,CAAC,CAAC;IAC5B,CAAC,CAAC,OAAOW,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAChD,CAAC,SAAS;MACN9B,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;IACvB;EACJ,CAAC;;EAED;EACA,MAAMgC,aAAa,GAAG,MAAOC,UAAU,IAAK;IACxC,IAAI;MACAjC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC;MAClB,MAAMO,QAAQ,GAAG,MAAMC,KAAK,CAAC,gLAAgLyB,UAAU,mEAAmEpC,QAAQ,mBAAmB,CAAC;MACtT,IAAI,CAACU,QAAQ,CAACE,EAAE,EAAE;QACd,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;MAClD;MACA,MAAMC,YAAY,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC,CAAC,CAAC;MAC5C,MAAMC,MAAM,GAAG,IAAIC,SAAS,CAAC,CAAC;MAC9B,MAAMC,OAAO,GAAGF,MAAM,CAACG,eAAe,CAACL,YAAY,EAAE,UAAU,CAAC;MAChE,MAAMM,KAAK,GAAGF,OAAO,CAACG,oBAAoB,CAAC,MAAM,CAAC;MAClD,MAAMC,aAAa,GAAGC,KAAK,CAACC,IAAI,CAACJ,KAAK,CAAC,CAACK,GAAG,CAACC,IAAI;QAAA,IAAAW,sBAAA;QAAA,OAAK;UACjDT,KAAK,EAAEF,IAAI,CAACL,oBAAoB,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAACQ,WAAW;UACxDC,KAAK,EAAEJ,IAAI,CAACL,oBAAoB,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAACQ,WAAW;UACxDE,aAAa,EAAEL,IAAI,CAACL,oBAAoB,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,CAACQ,WAAW;UACxEG,WAAW,EAAE,EAAAK,sBAAA,GAAAX,IAAI,CAACL,oBAAoB,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,cAAAgB,sBAAA,uBAA3CA,sBAAA,CAA6CR,WAAW,KAAI;QAC7E,CAAC;MAAA,CAAC,CAAC;MACHvB,OAAO,CAACgC,QAAQ,IAAI,CAAC,GAAGA,QAAQ,EAAE,GAAGhB,aAAa,CAAC,CAAC,CAAC,CAAC;IAC1D,CAAC,CAAC,OAAOW,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAChD,CAAC,SAAS;MACN9B,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;IACvB;EACJ,CAAC;EAEDR,SAAS,CAAC,MAAM;IACZc,gBAAgB,CAAC,CAAC,CAAC,CAAC;EACxB,CAAC,EAAE,CAACT,QAAQ,CAAC,CAAC;EAEdL,SAAS,CAAC,MAAM;IACZ,IAAIY,IAAI,GAAG,CAAC,EAAE;MACV4B,aAAa,CAAC5B,IAAI,CAAC,CAAC,CAAC;IACzB;EACJ,CAAC,EAAE,CAACA,IAAI,CAAC,CAAC;EAEV,MAAMgC,QAAQ,GAAGA,CAAA,KAAM;IACnB/B,OAAO,CAACgC,QAAQ,IAAIA,QAAQ,GAAG,CAAC,CAAC,CAAC,CAAC;EACvC,CAAC;EAED,oBACI1C,OAAA;IAAA2C,QAAA,eACI3C,OAAA,CAACF,iBAAiB;MAACS,IAAI,EAAEA;IAAK;MAAAqC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAMhC,CAAC;AAEd,CAAC;AAACzC,EAAA,CAhFIL,cAAc;AAAA+C,EAAA,GAAd/C,cAAc;AAkFpB,eAAeA,cAAc;AAAC,IAAA+C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}